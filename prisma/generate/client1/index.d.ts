/**
 * Client
 **/

import * as runtime from './runtime/library'
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>

/**
 * Model GA_ANKETA_ADDR
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type GA_ANKETA_ADDR =
    $Result.DefaultSelection<Prisma.$GA_ANKETA_ADDRPayload>
/**
 * Model GA_ANKETA_BASE
 * The underlying table does not contain a valid unique identifier and can therefore currently not  handled by Prisma Client.
 */
export type GA_ANKETA_BASE =
    $Result.DefaultSelection<Prisma.$GA_ANKETA_BASEPayload>
/**
 * Model GA_ANKETA_BILETS
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type GA_ANKETA_BILETS =
    $Result.DefaultSelection<Prisma.$GA_ANKETA_BILETSPayload>
/**
 * Model GA_ANKETA_BRAND_IMG
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type GA_ANKETA_BRAND_IMG =
    $Result.DefaultSelection<Prisma.$GA_ANKETA_BRAND_IMGPayload>
/**
 * Model GA_ANKETA_DIR
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type GA_ANKETA_DIR =
    $Result.DefaultSelection<Prisma.$GA_ANKETA_DIRPayload>
/**
 * Model GA_ANKETA_DOGOVOR
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type GA_ANKETA_DOGOVOR =
    $Result.DefaultSelection<Prisma.$GA_ANKETA_DOGOVORPayload>
/**
 * Model GA_ANKETA_OBOROT
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type GA_ANKETA_OBOROT =
    $Result.DefaultSelection<Prisma.$GA_ANKETA_OBOROTPayload>
/**
 * Model GA_ANKETA_OBOROT_BRANDS
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type GA_ANKETA_OBOROT_BRANDS =
    $Result.DefaultSelection<Prisma.$GA_ANKETA_OBOROT_BRANDSPayload>
/**
 * Model GA_ANKETA_OBOROT_BRANDS2
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type GA_ANKETA_OBOROT_BRANDS2 =
    $Result.DefaultSelection<Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload>
/**
 * Model GA_ANKETA_OBOROT_COUNTS
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type GA_ANKETA_OBOROT_COUNTS =
    $Result.DefaultSelection<Prisma.$GA_ANKETA_OBOROT_COUNTSPayload>
/**
 * Model GA_ANKETA_SCORES
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type GA_ANKETA_SCORES =
    $Result.DefaultSelection<Prisma.$GA_ANKETA_SCORESPayload>
/**
 * Model GA_ANKETA_SCORES_HISTORY
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type GA_ANKETA_SCORES_HISTORY =
    $Result.DefaultSelection<Prisma.$GA_ANKETA_SCORES_HISTORYPayload>
/**
 * Model GA_ANKETA_SOREVNOVANIE
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type GA_ANKETA_SOREVNOVANIE =
    $Result.DefaultSelection<Prisma.$GA_ANKETA_SOREVNOVANIEPayload>
/**
 * Model GA_SUP_50012_SELLOUT
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type GA_SUP_50012_SELLOUT =
    $Result.DefaultSelection<Prisma.$GA_SUP_50012_SELLOUTPayload>
/**
 * Model GA_SUP_50013_SELLOUT
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type GA_SUP_50013_SELLOUT =
    $Result.DefaultSelection<Prisma.$GA_SUP_50013_SELLOUTPayload>
/**
 * Model GA_SUP_50014_SELLOUT
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type GA_SUP_50014_SELLOUT =
    $Result.DefaultSelection<Prisma.$GA_SUP_50014_SELLOUTPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more GA_ANKETA_ADDRS
 * const gA_ANKETA_ADDRS = await prisma.gA_ANKETA_ADDR.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
    T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
    U = 'log' extends keyof T
        ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition>
            ? Prisma.GetEvents<T['log']>
            : never
        : never,
    ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
     * ##  Prisma Client ʲˢ
     *
     * Type-safe database client for TypeScript & Node.js
     * @example
     * ```
     * const prisma = new PrismaClient()
     * // Fetch zero or more GA_ANKETA_ADDRS
     * const gA_ANKETA_ADDRS = await prisma.gA_ANKETA_ADDR.findMany()
     * ```
     *
     *
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
     */

    constructor(optionsArg?: Prisma.Subset<T, Prisma.PrismaClientOptions>)
    $on<V extends U>(
        eventType: V,
        callback: (
            event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent
        ) => void
    ): void

    /**
     * Connect with the database
     */
    $connect(): $Utils.JsPromise<void>

    /**
     * Disconnect from the database
     */
    $disconnect(): $Utils.JsPromise<void>

    /**
     * Add a middleware
     * @deprecated since 4.16.0. For new code, prefer client extensions instead.
     * @see https://pris.ly/d/extensions
     */
    $use(cb: Prisma.Middleware): void

    /**
     * Executes a prepared raw query and returns the number of affected rows.
     * @example
     * ```
     * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
     * ```
     *
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
     */
    $executeRaw<T = unknown>(
        query: TemplateStringsArray | Prisma.Sql,
        ...values: any[]
    ): Prisma.PrismaPromise<number>

    /**
     * Executes a raw query and returns the number of affected rows.
     * Susceptible to SQL injections, see documentation.
     * @example
     * ```
     * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
     * ```
     *
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
     */
    $executeRawUnsafe<T = unknown>(
        query: string,
        ...values: any[]
    ): Prisma.PrismaPromise<number>

    /**
     * Performs a prepared raw query and returns the `SELECT` data.
     * @example
     * ```
     * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
     * ```
     *
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
     */
    $queryRaw<T = unknown>(
        query: TemplateStringsArray | Prisma.Sql,
        ...values: any[]
    ): Prisma.PrismaPromise<T>

    /**
     * Performs a raw query and returns the `SELECT` data.
     * Susceptible to SQL injections, see documentation.
     * @example
     * ```
     * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
     * ```
     *
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
     */
    $queryRawUnsafe<T = unknown>(
        query: string,
        ...values: any[]
    ): Prisma.PrismaPromise<T>

    /**
     * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
     * @example
     * ```
     * const [george, bob, alice] = await prisma.$transaction([
     *   prisma.user.create({ data: { name: 'George' } }),
     *   prisma.user.create({ data: { name: 'Bob' } }),
     *   prisma.user.create({ data: { name: 'Alice' } }),
     * ])
     * ```
     *
     * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
     */
    $transaction<P extends Prisma.PrismaPromise<any>[]>(
        arg: [...P],
        options?: { isolationLevel?: Prisma.TransactionIsolationLevel }
    ): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

    $transaction<R>(
        fn: (
            prisma: Omit<PrismaClient, runtime.ITXClientDenyList>
        ) => $Utils.JsPromise<R>,
        options?: {
            maxWait?: number
            timeout?: number
            isolationLevel?: Prisma.TransactionIsolationLevel
        }
    ): $Utils.JsPromise<R>

    $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

    /**
     * `prisma.gA_ANKETA_ADDR`: Exposes CRUD operations for the **GA_ANKETA_ADDR** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_ANKETA_ADDRS
     * const gA_ANKETA_ADDRS = await prisma.gA_ANKETA_ADDR.findMany()
     * ```
     */
    get gA_ANKETA_ADDR(): Prisma.GA_ANKETA_ADDRDelegate<ExtArgs>

    /**
     * `prisma.gA_ANKETA_BASE`: Exposes CRUD operations for the **GA_ANKETA_BASE** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_ANKETA_BASES
     * const gA_ANKETA_BASES = await prisma.gA_ANKETA_BASE.findMany()
     * ```
     */
    get gA_ANKETA_BASE(): Prisma.GA_ANKETA_BASEDelegate<ExtArgs>

    /**
     * `prisma.gA_ANKETA_BILETS`: Exposes CRUD operations for the **GA_ANKETA_BILETS** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_ANKETA_BILETS
     * const gA_ANKETA_BILETS = await prisma.gA_ANKETA_BILETS.findMany()
     * ```
     */
    get gA_ANKETA_BILETS(): Prisma.GA_ANKETA_BILETSDelegate<ExtArgs>

    /**
     * `prisma.gA_ANKETA_BRAND_IMG`: Exposes CRUD operations for the **GA_ANKETA_BRAND_IMG** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_ANKETA_BRAND_IMGS
     * const gA_ANKETA_BRAND_IMGS = await prisma.gA_ANKETA_BRAND_IMG.findMany()
     * ```
     */
    get gA_ANKETA_BRAND_IMG(): Prisma.GA_ANKETA_BRAND_IMGDelegate<ExtArgs>

    /**
     * `prisma.gA_ANKETA_DIR`: Exposes CRUD operations for the **GA_ANKETA_DIR** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_ANKETA_DIRS
     * const gA_ANKETA_DIRS = await prisma.gA_ANKETA_DIR.findMany()
     * ```
     */
    get gA_ANKETA_DIR(): Prisma.GA_ANKETA_DIRDelegate<ExtArgs>

    /**
     * `prisma.gA_ANKETA_DOGOVOR`: Exposes CRUD operations for the **GA_ANKETA_DOGOVOR** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_ANKETA_DOGOVORS
     * const gA_ANKETA_DOGOVORS = await prisma.gA_ANKETA_DOGOVOR.findMany()
     * ```
     */
    get gA_ANKETA_DOGOVOR(): Prisma.GA_ANKETA_DOGOVORDelegate<ExtArgs>

    /**
     * `prisma.gA_ANKETA_OBOROT`: Exposes CRUD operations for the **GA_ANKETA_OBOROT** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_ANKETA_OBOROTS
     * const gA_ANKETA_OBOROTS = await prisma.gA_ANKETA_OBOROT.findMany()
     * ```
     */
    get gA_ANKETA_OBOROT(): Prisma.GA_ANKETA_OBOROTDelegate<ExtArgs>

    /**
     * `prisma.gA_ANKETA_OBOROT_BRANDS`: Exposes CRUD operations for the **GA_ANKETA_OBOROT_BRANDS** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_ANKETA_OBOROT_BRANDS
     * const gA_ANKETA_OBOROT_BRANDS = await prisma.gA_ANKETA_OBOROT_BRANDS.findMany()
     * ```
     */
    get gA_ANKETA_OBOROT_BRANDS(): Prisma.GA_ANKETA_OBOROT_BRANDSDelegate<ExtArgs>

    /**
     * `prisma.gA_ANKETA_OBOROT_BRANDS2`: Exposes CRUD operations for the **GA_ANKETA_OBOROT_BRANDS2** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_ANKETA_OBOROT_BRANDS2s
     * const gA_ANKETA_OBOROT_BRANDS2s = await prisma.gA_ANKETA_OBOROT_BRANDS2.findMany()
     * ```
     */
    get gA_ANKETA_OBOROT_BRANDS2(): Prisma.GA_ANKETA_OBOROT_BRANDS2Delegate<ExtArgs>

    /**
     * `prisma.gA_ANKETA_OBOROT_COUNTS`: Exposes CRUD operations for the **GA_ANKETA_OBOROT_COUNTS** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_ANKETA_OBOROT_COUNTS
     * const gA_ANKETA_OBOROT_COUNTS = await prisma.gA_ANKETA_OBOROT_COUNTS.findMany()
     * ```
     */
    get gA_ANKETA_OBOROT_COUNTS(): Prisma.GA_ANKETA_OBOROT_COUNTSDelegate<ExtArgs>

    /**
     * `prisma.gA_ANKETA_SCORES`: Exposes CRUD operations for the **GA_ANKETA_SCORES** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_ANKETA_SCORES
     * const gA_ANKETA_SCORES = await prisma.gA_ANKETA_SCORES.findMany()
     * ```
     */
    get gA_ANKETA_SCORES(): Prisma.GA_ANKETA_SCORESDelegate<ExtArgs>

    /**
     * `prisma.gA_ANKETA_SCORES_HISTORY`: Exposes CRUD operations for the **GA_ANKETA_SCORES_HISTORY** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_ANKETA_SCORES_HISTORIES
     * const gA_ANKETA_SCORES_HISTORIES = await prisma.gA_ANKETA_SCORES_HISTORY.findMany()
     * ```
     */
    get gA_ANKETA_SCORES_HISTORY(): Prisma.GA_ANKETA_SCORES_HISTORYDelegate<ExtArgs>

    /**
     * `prisma.gA_ANKETA_SOREVNOVANIE`: Exposes CRUD operations for the **GA_ANKETA_SOREVNOVANIE** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_ANKETA_SOREVNOVANIES
     * const gA_ANKETA_SOREVNOVANIES = await prisma.gA_ANKETA_SOREVNOVANIE.findMany()
     * ```
     */
    get gA_ANKETA_SOREVNOVANIE(): Prisma.GA_ANKETA_SOREVNOVANIEDelegate<ExtArgs>

    /**
     * `prisma.gA_SUP_50012_SELLOUT`: Exposes CRUD operations for the **GA_SUP_50012_SELLOUT** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_SUP_50012_SELLOUTS
     * const gA_SUP_50012_SELLOUTS = await prisma.gA_SUP_50012_SELLOUT.findMany()
     * ```
     */
    get gA_SUP_50012_SELLOUT(): Prisma.GA_SUP_50012_SELLOUTDelegate<ExtArgs>

    /**
     * `prisma.gA_SUP_50013_SELLOUT`: Exposes CRUD operations for the **GA_SUP_50013_SELLOUT** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_SUP_50013_SELLOUTS
     * const gA_SUP_50013_SELLOUTS = await prisma.gA_SUP_50013_SELLOUT.findMany()
     * ```
     */
    get gA_SUP_50013_SELLOUT(): Prisma.GA_SUP_50013_SELLOUTDelegate<ExtArgs>

    /**
     * `prisma.gA_SUP_50014_SELLOUT`: Exposes CRUD operations for the **GA_SUP_50014_SELLOUT** model.
     * Example usage:
     * ```ts
     * // Fetch zero or more GA_SUP_50014_SELLOUTS
     * const gA_SUP_50014_SELLOUTS = await prisma.gA_SUP_50014_SELLOUT.findMany()
     * ```
     */
    get gA_SUP_50014_SELLOUT(): Prisma.GA_SUP_50014_SELLOUTDelegate<ExtArgs>
}

export namespace Prisma {
    export import DMMF = runtime.DMMF

    export type PrismaPromise<T> = $Public.PrismaPromise<T>

    /**
     * Validator
     */
    export import validator = runtime.Public.validator

    /**
     * Prisma Errors
     */
    export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
    export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
    export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
    export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
    export import PrismaClientValidationError = runtime.PrismaClientValidationError
    export import NotFoundError = runtime.NotFoundError

    /**
     * Re-export of sql-template-tag
     */
    export import sql = runtime.sqltag
    export import empty = runtime.empty
    export import join = runtime.join
    export import raw = runtime.raw
    export import Sql = runtime.Sql

    /**
     * Decimal.js
     */
    export import Decimal = runtime.Decimal

    export type DecimalJsLike = runtime.DecimalJsLike

    /**
     * Metrics
     */
    export type Metrics = runtime.Metrics
    export type Metric<T> = runtime.Metric<T>
    export type MetricHistogram = runtime.MetricHistogram
    export type MetricHistogramBucket = runtime.MetricHistogramBucket

    /**
     * Extensions
     */
    export import Extension = $Extensions.UserArgs
    export import getExtensionContext = runtime.Extensions.getExtensionContext
    export import Args = $Public.Args
    export import Payload = $Public.Payload
    export import Result = $Public.Result
    export import Exact = $Public.Exact

    /**
     * Prisma Client JS version: 5.7.1
     * Query Engine version: 0ca5ccbcfa6bdc81c003cf549abe4269f59c41e5
     */
    export type PrismaVersion = {
        client: string
    }

    export const prismaVersion: PrismaVersion

    /**
     * Utility Types
     */

    /**
     * From https://github.com/sindresorhus/type-fest/
     * Matches a JSON object.
     * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from.
     */
    export type JsonObject = { [Key in string]?: JsonValue }

    /**
     * From https://github.com/sindresorhus/type-fest/
     * Matches a JSON array.
     */
    export interface JsonArray extends Array<JsonValue> {}

    /**
     * From https://github.com/sindresorhus/type-fest/
     * Matches any valid JSON value.
     */
    export type JsonValue =
        | string
        | number
        | boolean
        | JsonObject
        | JsonArray
        | null

    /**
     * Matches a JSON object.
     * Unlike `JsonObject`, this type allows undefined and read-only properties.
     */
    export type InputJsonObject = {
        readonly [Key in string]?: InputJsonValue | null
    }

    /**
     * Matches a JSON array.
     * Unlike `JsonArray`, readonly arrays are assignable to this type.
     */
    export interface InputJsonArray
        extends ReadonlyArray<InputJsonValue | null> {}

    /**
     * Matches any valid value that can be used as an input for operations like
     * create and update as the value of a JSON field. Unlike `JsonValue`, this
     * type allows read-only arrays and read-only object properties and disallows
     * `null` at the top level.
     *
     * `null` cannot be used as the value of a JSON field because its meaning
     * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
     * `Prisma.DbNull` to clear the JSON value and set the field to the database
     * NULL value instead.
     *
     * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
     */
    export type InputJsonValue =
        | string
        | number
        | boolean
        | InputJsonObject
        | InputJsonArray
        | { toJSON(): unknown }

    /**
     * Types of the values used to represent different kinds of `null` values when working with JSON fields.
     *
     * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
     */
    namespace NullTypes {
        /**
         * Type of `Prisma.DbNull`.
         *
         * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
         *
         * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
         */
        class DbNull {
            private DbNull: never
            private constructor()
        }

        /**
         * Type of `Prisma.JsonNull`.
         *
         * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
         *
         * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
         */
        class JsonNull {
            private JsonNull: never
            private constructor()
        }

        /**
         * Type of `Prisma.AnyNull`.
         *
         * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
         *
         * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
         */
        class AnyNull {
            private AnyNull: never
            private constructor()
        }
    }

    /**
     * Helper for filtering JSON entries that have `null` on the database (empty on the db)
     *
     * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
     */
    export const DbNull: NullTypes.DbNull

    /**
     * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
     *
     * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
     */
    export const JsonNull: NullTypes.JsonNull

    /**
     * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
     *
     * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
     */
    export const AnyNull: NullTypes.AnyNull

    type SelectAndInclude = {
        select: any
        include: any
    }

    /**
     * Get the type of the value, that the Promise holds.
     */
    export type PromiseType<T extends PromiseLike<any>> =
        T extends PromiseLike<infer U> ? U : T

    /**
     * Get the return type of a function which returns a Promise.
     */
    export type PromiseReturnType<
        T extends (...args: any) => $Utils.JsPromise<any>,
    > = PromiseType<ReturnType<T>>

    /**
     * From T, pick a set of properties whose keys are in the union K
     */
    type Prisma__Pick<T, K extends keyof T> = {
        [P in K]: T[P]
    }

    export type Enumerable<T> = T | Array<T>

    export type RequiredKeys<T> = {
        [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
    }[keyof T]

    export type TruthyKeys<T> = keyof {
        [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
    }

    export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

    /**
     * Subset
     * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
     */
    export type Subset<T, U> = {
        [key in keyof T]: key extends keyof U ? T[key] : never
    }

    /**
     * SelectSubset
     * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
     * Additionally, it validates, if both select and include are present. If the case, it errors.
     */
    export type SelectSubset<T, U> = {
        [key in keyof T]: key extends keyof U ? T[key] : never
    } & (T extends SelectAndInclude
        ? 'Please either choose `select` or `include`.'
        : {})

    /**
     * Subset + Intersection
     * @desc From `T` pick properties that exist in `U` and intersect `K`
     */
    export type SubsetIntersection<T, U, K> = {
        [key in keyof T]: key extends keyof U ? T[key] : never
    } & K

    type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never }

    /**
     * XOR is needed to have a real mutually exclusive union type
     * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
     */
    type XOR<T, U> = T extends object
        ? U extends object
            ? (Without<T, U> & U) | (Without<U, T> & T)
            : U
        : T

    /**
     * Is T a Record?
     */
    type IsObject<T extends any> =
        T extends Array<any>
            ? False
            : T extends Date
              ? False
              : T extends Uint8Array
                ? False
                : T extends BigInt
                  ? False
                  : T extends object
                    ? True
                    : False

    /**
     * If it's T[], return T
     */
    export type UnEnumerate<T extends unknown> =
        T extends Array<infer U> ? U : T

    /**
     * From ts-toolbelt
     */

    type __Either<O extends object, K extends Key> = Omit<O, K> &
        {
            // Merge all but K
            [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
        }[K]

    type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

    type EitherLoose<O extends object, K extends Key> = ComputeRaw<
        __Either<O, K>
    >

    type _Either<O extends object, K extends Key, strict extends Boolean> = {
        1: EitherStrict<O, K>
        0: EitherLoose<O, K>
    }[strict]

    type Either<
        O extends object,
        K extends Key,
        strict extends Boolean = 1,
    > = O extends unknown ? _Either<O, K, strict> : never

    export type Union = any

    type PatchUndefined<O extends object, O1 extends object> = {
        [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
    } & {}

    /** Helper Types for "Merge" **/
    export type IntersectOf<U extends Union> = (
        U extends unknown ? (k: U) => void : never
    ) extends (k: infer I) => void
        ? I
        : never

    export type Overwrite<O extends object, O1 extends object> = {
        [K in keyof O]: K extends keyof O1 ? O1[K] : O[K]
    } & {}

    type _Merge<U extends object> = IntersectOf<
        Overwrite<
            U,
            {
                [K in keyof U]-?: At<U, K>
            }
        >
    >

    type Key = string | number | symbol
    type AtBasic<O extends object, K extends Key> = K extends keyof O
        ? O[K]
        : never
    type AtStrict<O extends object, K extends Key> = O[K & keyof O]
    type AtLoose<O extends object, K extends Key> = O extends unknown
        ? AtStrict<O, K>
        : never
    export type At<
        O extends object,
        K extends Key,
        strict extends Boolean = 1,
    > = {
        1: AtStrict<O, K>
        0: AtLoose<O, K>
    }[strict]

    export type ComputeRaw<A extends any> = A extends Function
        ? A
        : {
              [K in keyof A]: A[K]
          } & {}

    export type OptionalFlat<O> = {
        [K in keyof O]?: O[K]
    } & {}

    type _Record<K extends keyof any, T> = {
        [P in K]: T
    }

    // cause typescript not to expand types and preserve names
    type NoExpand<T> = T extends unknown ? T : never

    // this type assumes the passed object is entirely optional
    type AtLeast<O extends object, K extends string> = NoExpand<
        O extends unknown
            ?
                  | (K extends keyof O ? { [P in K]: O[P] } & O : O)
                  | ({ [P in keyof O as P extends K ? K : never]-?: O[P] } & O)
            : never
    >

    type _Strict<U, _U = U> = U extends unknown
        ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>>
        : never

    export type Strict<U extends object> = ComputeRaw<_Strict<U>>
    /** End Helper Types for "Merge" **/

    export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>

    /**
  A [[Boolean]]
  */
    export type Boolean = True | False

    // /**
    // 1
    // */
    export type True = 1

    /**
  0
  */
    export type False = 0

    export type Not<B extends Boolean> = {
        0: 1
        1: 0
    }[B]

    export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
        ? 0 // anything `never` is false
        : A1 extends A2
          ? 1
          : 0

    export type Has<U extends Union, U1 extends Union> = Not<
        Extends<Exclude<U1, U>, U1>
    >

    export type Or<B1 extends Boolean, B2 extends Boolean> = {
        0: {
            0: 0
            1: 1
        }
        1: {
            0: 1
            1: 1
        }
    }[B1][B2]

    export type Keys<U extends Union> = U extends unknown ? keyof U : never

    type Cast<A, B> = A extends B ? A : B

    export const type: unique symbol

    /**
     * Used by group by
     */

    export type GetScalarType<T, O> = O extends object
        ? {
              [P in keyof T]: P extends keyof O ? O[P] : never
          }
        : never

    type FieldPaths<
        T,
        U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>,
    > = IsObject<T> extends True ? U : T

    type GetHavingFields<T> = {
        [K in keyof T]: Or<
            Or<Extends<'OR', K>, Extends<'AND', K>>,
            Extends<'NOT', K>
        > extends True
            ? // infer is only needed to not hit TS limit
              // based on the brilliant idea of Pierre-Antoine Mills
              // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
              T[K] extends infer TK
                ? GetHavingFields<
                      UnEnumerate<TK> extends object
                          ? Merge<UnEnumerate<TK>>
                          : never
                  >
                : never
            : {} extends FieldPaths<T[K]>
              ? never
              : K
    }[keyof T]

    /**
     * Convert tuple to union
     */
    type _TupleToUnion<T> = T extends (infer E)[] ? E : never
    type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
    type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

    /**
     * Like `Pick`, but additionally can also accept an array of keys
     */
    type PickEnumerable<
        T,
        K extends Enumerable<keyof T> | keyof T,
    > = Prisma__Pick<T, MaybeTupleToUnion<K>>

    /**
     * Exclude all keys with underscores
     */
    type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}`
        ? never
        : T

    export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

    type FieldRefInputType<Model, FieldType> = Model extends never
        ? never
        : FieldRef<Model, FieldType>

    export const ModelName: {
        GA_ANKETA_ADDR: 'GA_ANKETA_ADDR'
        GA_ANKETA_BASE: 'GA_ANKETA_BASE'
        GA_ANKETA_BILETS: 'GA_ANKETA_BILETS'
        GA_ANKETA_BRAND_IMG: 'GA_ANKETA_BRAND_IMG'
        GA_ANKETA_DIR: 'GA_ANKETA_DIR'
        GA_ANKETA_DOGOVOR: 'GA_ANKETA_DOGOVOR'
        GA_ANKETA_OBOROT: 'GA_ANKETA_OBOROT'
        GA_ANKETA_OBOROT_BRANDS: 'GA_ANKETA_OBOROT_BRANDS'
        GA_ANKETA_OBOROT_BRANDS2: 'GA_ANKETA_OBOROT_BRANDS2'
        GA_ANKETA_OBOROT_COUNTS: 'GA_ANKETA_OBOROT_COUNTS'
        GA_ANKETA_SCORES: 'GA_ANKETA_SCORES'
        GA_ANKETA_SCORES_HISTORY: 'GA_ANKETA_SCORES_HISTORY'
        GA_ANKETA_SOREVNOVANIE: 'GA_ANKETA_SOREVNOVANIE'
        GA_SUP_50012_SELLOUT: 'GA_SUP_50012_SELLOUT'
        GA_SUP_50013_SELLOUT: 'GA_SUP_50013_SELLOUT'
        GA_SUP_50014_SELLOUT: 'GA_SUP_50014_SELLOUT'
    }

    export type ModelName = (typeof ModelName)[keyof typeof ModelName]

    export type Datasources = {
        db?: Datasource
    }

    interface TypeMapCb
        extends $Utils.Fn<
            { extArgs: $Extensions.InternalArgs },
            $Utils.Record<string, any>
        > {
        returns: Prisma.TypeMap<this['params']['extArgs']>
    }

    export type TypeMap<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        meta: {
            modelProps:
                | 'gA_ANKETA_ADDR'
                | 'gA_ANKETA_BASE'
                | 'gA_ANKETA_BILETS'
                | 'gA_ANKETA_BRAND_IMG'
                | 'gA_ANKETA_DIR'
                | 'gA_ANKETA_DOGOVOR'
                | 'gA_ANKETA_OBOROT'
                | 'gA_ANKETA_OBOROT_BRANDS'
                | 'gA_ANKETA_OBOROT_BRANDS2'
                | 'gA_ANKETA_OBOROT_COUNTS'
                | 'gA_ANKETA_SCORES'
                | 'gA_ANKETA_SCORES_HISTORY'
                | 'gA_ANKETA_SOREVNOVANIE'
                | 'gA_SUP_50012_SELLOUT'
                | 'gA_SUP_50013_SELLOUT'
                | 'gA_SUP_50014_SELLOUT'
            txIsolationLevel: Prisma.TransactionIsolationLevel
        }
        model: {
            GA_ANKETA_ADDR: {
                payload: Prisma.$GA_ANKETA_ADDRPayload<ExtArgs>
                fields: Prisma.GA_ANKETA_ADDRFieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_ANKETA_ADDRFindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_ADDRPayload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_ANKETA_ADDRFindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_ADDRPayload>
                    }
                    findFirst: {
                        args: Prisma.GA_ANKETA_ADDRFindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_ADDRPayload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_ANKETA_ADDRFindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_ADDRPayload>
                    }
                    findMany: {
                        args: Prisma.GA_ANKETA_ADDRFindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_ADDRPayload>[]
                    }
                    create: {
                        args: Prisma.GA_ANKETA_ADDRCreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_ADDRPayload>
                    }
                    createMany: {
                        args: Prisma.GA_ANKETA_ADDRCreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_ANKETA_ADDRDeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_ADDRPayload>
                    }
                    update: {
                        args: Prisma.GA_ANKETA_ADDRUpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_ADDRPayload>
                    }
                    deleteMany: {
                        args: Prisma.GA_ANKETA_ADDRDeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_ANKETA_ADDRUpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_ANKETA_ADDRUpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_ADDRPayload>
                    }
                    aggregate: {
                        args: Prisma.GA_ANKETA_ADDRAggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_ANKETA_ADDR>
                    }
                    groupBy: {
                        args: Prisma.GA_ANKETA_ADDRGroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_ANKETA_ADDRGroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_ANKETA_ADDRCountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_ANKETA_ADDRCountAggregateOutputType>
                            | number
                    }
                }
            }
            GA_ANKETA_BASE: {
                payload: Prisma.$GA_ANKETA_BASEPayload<ExtArgs>
                fields: Prisma.GA_ANKETA_BASEFieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_ANKETA_BASEFindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BASEPayload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_ANKETA_BASEFindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BASEPayload>
                    }
                    findFirst: {
                        args: Prisma.GA_ANKETA_BASEFindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BASEPayload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_ANKETA_BASEFindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BASEPayload>
                    }
                    findMany: {
                        args: Prisma.GA_ANKETA_BASEFindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BASEPayload>[]
                    }
                    create: {
                        args: Prisma.GA_ANKETA_BASECreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BASEPayload>
                    }
                    createMany: {
                        args: Prisma.GA_ANKETA_BASECreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_ANKETA_BASEDeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BASEPayload>
                    }
                    update: {
                        args: Prisma.GA_ANKETA_BASEUpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BASEPayload>
                    }
                    deleteMany: {
                        args: Prisma.GA_ANKETA_BASEDeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_ANKETA_BASEUpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_ANKETA_BASEUpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BASEPayload>
                    }
                    aggregate: {
                        args: Prisma.GA_ANKETA_BASEAggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_ANKETA_BASE>
                    }
                    groupBy: {
                        args: Prisma.GA_ANKETA_BASEGroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_ANKETA_BASEGroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_ANKETA_BASECountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_ANKETA_BASECountAggregateOutputType>
                            | number
                    }
                }
            }
            GA_ANKETA_BILETS: {
                payload: Prisma.$GA_ANKETA_BILETSPayload<ExtArgs>
                fields: Prisma.GA_ANKETA_BILETSFieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_ANKETA_BILETSFindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BILETSPayload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_ANKETA_BILETSFindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BILETSPayload>
                    }
                    findFirst: {
                        args: Prisma.GA_ANKETA_BILETSFindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BILETSPayload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_ANKETA_BILETSFindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BILETSPayload>
                    }
                    findMany: {
                        args: Prisma.GA_ANKETA_BILETSFindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BILETSPayload>[]
                    }
                    create: {
                        args: Prisma.GA_ANKETA_BILETSCreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BILETSPayload>
                    }
                    createMany: {
                        args: Prisma.GA_ANKETA_BILETSCreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_ANKETA_BILETSDeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BILETSPayload>
                    }
                    update: {
                        args: Prisma.GA_ANKETA_BILETSUpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BILETSPayload>
                    }
                    deleteMany: {
                        args: Prisma.GA_ANKETA_BILETSDeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_ANKETA_BILETSUpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_ANKETA_BILETSUpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BILETSPayload>
                    }
                    aggregate: {
                        args: Prisma.GA_ANKETA_BILETSAggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_ANKETA_BILETS>
                    }
                    groupBy: {
                        args: Prisma.GA_ANKETA_BILETSGroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_ANKETA_BILETSGroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_ANKETA_BILETSCountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_ANKETA_BILETSCountAggregateOutputType>
                            | number
                    }
                }
            }
            GA_ANKETA_BRAND_IMG: {
                payload: Prisma.$GA_ANKETA_BRAND_IMGPayload<ExtArgs>
                fields: Prisma.GA_ANKETA_BRAND_IMGFieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_ANKETA_BRAND_IMGFindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BRAND_IMGPayload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_ANKETA_BRAND_IMGFindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BRAND_IMGPayload>
                    }
                    findFirst: {
                        args: Prisma.GA_ANKETA_BRAND_IMGFindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BRAND_IMGPayload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_ANKETA_BRAND_IMGFindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BRAND_IMGPayload>
                    }
                    findMany: {
                        args: Prisma.GA_ANKETA_BRAND_IMGFindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BRAND_IMGPayload>[]
                    }
                    create: {
                        args: Prisma.GA_ANKETA_BRAND_IMGCreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BRAND_IMGPayload>
                    }
                    createMany: {
                        args: Prisma.GA_ANKETA_BRAND_IMGCreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_ANKETA_BRAND_IMGDeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BRAND_IMGPayload>
                    }
                    update: {
                        args: Prisma.GA_ANKETA_BRAND_IMGUpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BRAND_IMGPayload>
                    }
                    deleteMany: {
                        args: Prisma.GA_ANKETA_BRAND_IMGDeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_ANKETA_BRAND_IMGUpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_ANKETA_BRAND_IMGUpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_BRAND_IMGPayload>
                    }
                    aggregate: {
                        args: Prisma.GA_ANKETA_BRAND_IMGAggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_ANKETA_BRAND_IMG>
                    }
                    groupBy: {
                        args: Prisma.GA_ANKETA_BRAND_IMGGroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_ANKETA_BRAND_IMGGroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_ANKETA_BRAND_IMGCountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_ANKETA_BRAND_IMGCountAggregateOutputType>
                            | number
                    }
                }
            }
            GA_ANKETA_DIR: {
                payload: Prisma.$GA_ANKETA_DIRPayload<ExtArgs>
                fields: Prisma.GA_ANKETA_DIRFieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_ANKETA_DIRFindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DIRPayload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_ANKETA_DIRFindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DIRPayload>
                    }
                    findFirst: {
                        args: Prisma.GA_ANKETA_DIRFindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DIRPayload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_ANKETA_DIRFindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DIRPayload>
                    }
                    findMany: {
                        args: Prisma.GA_ANKETA_DIRFindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DIRPayload>[]
                    }
                    create: {
                        args: Prisma.GA_ANKETA_DIRCreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DIRPayload>
                    }
                    createMany: {
                        args: Prisma.GA_ANKETA_DIRCreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_ANKETA_DIRDeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DIRPayload>
                    }
                    update: {
                        args: Prisma.GA_ANKETA_DIRUpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DIRPayload>
                    }
                    deleteMany: {
                        args: Prisma.GA_ANKETA_DIRDeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_ANKETA_DIRUpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_ANKETA_DIRUpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DIRPayload>
                    }
                    aggregate: {
                        args: Prisma.GA_ANKETA_DIRAggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_ANKETA_DIR>
                    }
                    groupBy: {
                        args: Prisma.GA_ANKETA_DIRGroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_ANKETA_DIRGroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_ANKETA_DIRCountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_ANKETA_DIRCountAggregateOutputType>
                            | number
                    }
                }
            }
            GA_ANKETA_DOGOVOR: {
                payload: Prisma.$GA_ANKETA_DOGOVORPayload<ExtArgs>
                fields: Prisma.GA_ANKETA_DOGOVORFieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_ANKETA_DOGOVORFindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DOGOVORPayload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_ANKETA_DOGOVORFindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DOGOVORPayload>
                    }
                    findFirst: {
                        args: Prisma.GA_ANKETA_DOGOVORFindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DOGOVORPayload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_ANKETA_DOGOVORFindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DOGOVORPayload>
                    }
                    findMany: {
                        args: Prisma.GA_ANKETA_DOGOVORFindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DOGOVORPayload>[]
                    }
                    create: {
                        args: Prisma.GA_ANKETA_DOGOVORCreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DOGOVORPayload>
                    }
                    createMany: {
                        args: Prisma.GA_ANKETA_DOGOVORCreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_ANKETA_DOGOVORDeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DOGOVORPayload>
                    }
                    update: {
                        args: Prisma.GA_ANKETA_DOGOVORUpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DOGOVORPayload>
                    }
                    deleteMany: {
                        args: Prisma.GA_ANKETA_DOGOVORDeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_ANKETA_DOGOVORUpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_ANKETA_DOGOVORUpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_DOGOVORPayload>
                    }
                    aggregate: {
                        args: Prisma.GA_ANKETA_DOGOVORAggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_ANKETA_DOGOVOR>
                    }
                    groupBy: {
                        args: Prisma.GA_ANKETA_DOGOVORGroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_ANKETA_DOGOVORGroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_ANKETA_DOGOVORCountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_ANKETA_DOGOVORCountAggregateOutputType>
                            | number
                    }
                }
            }
            GA_ANKETA_OBOROT: {
                payload: Prisma.$GA_ANKETA_OBOROTPayload<ExtArgs>
                fields: Prisma.GA_ANKETA_OBOROTFieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_ANKETA_OBOROTFindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROTPayload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_ANKETA_OBOROTFindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROTPayload>
                    }
                    findFirst: {
                        args: Prisma.GA_ANKETA_OBOROTFindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROTPayload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_ANKETA_OBOROTFindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROTPayload>
                    }
                    findMany: {
                        args: Prisma.GA_ANKETA_OBOROTFindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROTPayload>[]
                    }
                    create: {
                        args: Prisma.GA_ANKETA_OBOROTCreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROTPayload>
                    }
                    createMany: {
                        args: Prisma.GA_ANKETA_OBOROTCreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_ANKETA_OBOROTDeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROTPayload>
                    }
                    update: {
                        args: Prisma.GA_ANKETA_OBOROTUpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROTPayload>
                    }
                    deleteMany: {
                        args: Prisma.GA_ANKETA_OBOROTDeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_ANKETA_OBOROTUpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_ANKETA_OBOROTUpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROTPayload>
                    }
                    aggregate: {
                        args: Prisma.GA_ANKETA_OBOROTAggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_ANKETA_OBOROT>
                    }
                    groupBy: {
                        args: Prisma.GA_ANKETA_OBOROTGroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_ANKETA_OBOROTGroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_ANKETA_OBOROTCountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_ANKETA_OBOROTCountAggregateOutputType>
                            | number
                    }
                }
            }
            GA_ANKETA_OBOROT_BRANDS: {
                payload: Prisma.$GA_ANKETA_OBOROT_BRANDSPayload<ExtArgs>
                fields: Prisma.GA_ANKETA_OBOROT_BRANDSFieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDSFindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDSPayload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDSFindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDSPayload>
                    }
                    findFirst: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDSFindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDSPayload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDSFindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDSPayload>
                    }
                    findMany: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDSFindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDSPayload>[]
                    }
                    create: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDSCreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDSPayload>
                    }
                    createMany: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDSCreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDSDeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDSPayload>
                    }
                    update: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDSUpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDSPayload>
                    }
                    deleteMany: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDSDeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDSUpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDSUpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDSPayload>
                    }
                    aggregate: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDSAggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_ANKETA_OBOROT_BRANDS>
                    }
                    groupBy: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDSGroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_ANKETA_OBOROT_BRANDSGroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDSCountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_ANKETA_OBOROT_BRANDSCountAggregateOutputType>
                            | number
                    }
                }
            }
            GA_ANKETA_OBOROT_BRANDS2: {
                payload: Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload<ExtArgs>
                fields: Prisma.GA_ANKETA_OBOROT_BRANDS2FieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDS2FindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDS2FindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload>
                    }
                    findFirst: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDS2FindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDS2FindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload>
                    }
                    findMany: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDS2FindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload>[]
                    }
                    create: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDS2CreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload>
                    }
                    createMany: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDS2CreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDS2DeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload>
                    }
                    update: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDS2UpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload>
                    }
                    deleteMany: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDS2DeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDS2UpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDS2UpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload>
                    }
                    aggregate: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDS2AggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_ANKETA_OBOROT_BRANDS2>
                    }
                    groupBy: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDS2GroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_ANKETA_OBOROT_BRANDS2GroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_ANKETA_OBOROT_BRANDS2CountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_ANKETA_OBOROT_BRANDS2CountAggregateOutputType>
                            | number
                    }
                }
            }
            GA_ANKETA_OBOROT_COUNTS: {
                payload: Prisma.$GA_ANKETA_OBOROT_COUNTSPayload<ExtArgs>
                fields: Prisma.GA_ANKETA_OBOROT_COUNTSFieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_ANKETA_OBOROT_COUNTSFindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_COUNTSPayload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_ANKETA_OBOROT_COUNTSFindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_COUNTSPayload>
                    }
                    findFirst: {
                        args: Prisma.GA_ANKETA_OBOROT_COUNTSFindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_COUNTSPayload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_ANKETA_OBOROT_COUNTSFindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_COUNTSPayload>
                    }
                    findMany: {
                        args: Prisma.GA_ANKETA_OBOROT_COUNTSFindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_COUNTSPayload>[]
                    }
                    create: {
                        args: Prisma.GA_ANKETA_OBOROT_COUNTSCreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_COUNTSPayload>
                    }
                    createMany: {
                        args: Prisma.GA_ANKETA_OBOROT_COUNTSCreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_ANKETA_OBOROT_COUNTSDeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_COUNTSPayload>
                    }
                    update: {
                        args: Prisma.GA_ANKETA_OBOROT_COUNTSUpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_COUNTSPayload>
                    }
                    deleteMany: {
                        args: Prisma.GA_ANKETA_OBOROT_COUNTSDeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_ANKETA_OBOROT_COUNTSUpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_ANKETA_OBOROT_COUNTSUpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_OBOROT_COUNTSPayload>
                    }
                    aggregate: {
                        args: Prisma.GA_ANKETA_OBOROT_COUNTSAggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_ANKETA_OBOROT_COUNTS>
                    }
                    groupBy: {
                        args: Prisma.GA_ANKETA_OBOROT_COUNTSGroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_ANKETA_OBOROT_COUNTSGroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_ANKETA_OBOROT_COUNTSCountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_ANKETA_OBOROT_COUNTSCountAggregateOutputType>
                            | number
                    }
                }
            }
            GA_ANKETA_SCORES: {
                payload: Prisma.$GA_ANKETA_SCORESPayload<ExtArgs>
                fields: Prisma.GA_ANKETA_SCORESFieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_ANKETA_SCORESFindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORESPayload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_ANKETA_SCORESFindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORESPayload>
                    }
                    findFirst: {
                        args: Prisma.GA_ANKETA_SCORESFindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORESPayload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_ANKETA_SCORESFindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORESPayload>
                    }
                    findMany: {
                        args: Prisma.GA_ANKETA_SCORESFindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORESPayload>[]
                    }
                    create: {
                        args: Prisma.GA_ANKETA_SCORESCreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORESPayload>
                    }
                    createMany: {
                        args: Prisma.GA_ANKETA_SCORESCreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_ANKETA_SCORESDeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORESPayload>
                    }
                    update: {
                        args: Prisma.GA_ANKETA_SCORESUpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORESPayload>
                    }
                    deleteMany: {
                        args: Prisma.GA_ANKETA_SCORESDeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_ANKETA_SCORESUpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_ANKETA_SCORESUpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORESPayload>
                    }
                    aggregate: {
                        args: Prisma.GA_ANKETA_SCORESAggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_ANKETA_SCORES>
                    }
                    groupBy: {
                        args: Prisma.GA_ANKETA_SCORESGroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_ANKETA_SCORESGroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_ANKETA_SCORESCountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_ANKETA_SCORESCountAggregateOutputType>
                            | number
                    }
                }
            }
            GA_ANKETA_SCORES_HISTORY: {
                payload: Prisma.$GA_ANKETA_SCORES_HISTORYPayload<ExtArgs>
                fields: Prisma.GA_ANKETA_SCORES_HISTORYFieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_ANKETA_SCORES_HISTORYFindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORES_HISTORYPayload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_ANKETA_SCORES_HISTORYFindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORES_HISTORYPayload>
                    }
                    findFirst: {
                        args: Prisma.GA_ANKETA_SCORES_HISTORYFindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORES_HISTORYPayload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_ANKETA_SCORES_HISTORYFindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORES_HISTORYPayload>
                    }
                    findMany: {
                        args: Prisma.GA_ANKETA_SCORES_HISTORYFindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORES_HISTORYPayload>[]
                    }
                    create: {
                        args: Prisma.GA_ANKETA_SCORES_HISTORYCreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORES_HISTORYPayload>
                    }
                    createMany: {
                        args: Prisma.GA_ANKETA_SCORES_HISTORYCreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_ANKETA_SCORES_HISTORYDeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORES_HISTORYPayload>
                    }
                    update: {
                        args: Prisma.GA_ANKETA_SCORES_HISTORYUpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORES_HISTORYPayload>
                    }
                    deleteMany: {
                        args: Prisma.GA_ANKETA_SCORES_HISTORYDeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_ANKETA_SCORES_HISTORYUpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_ANKETA_SCORES_HISTORYUpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SCORES_HISTORYPayload>
                    }
                    aggregate: {
                        args: Prisma.GA_ANKETA_SCORES_HISTORYAggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_ANKETA_SCORES_HISTORY>
                    }
                    groupBy: {
                        args: Prisma.GA_ANKETA_SCORES_HISTORYGroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_ANKETA_SCORES_HISTORYGroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_ANKETA_SCORES_HISTORYCountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_ANKETA_SCORES_HISTORYCountAggregateOutputType>
                            | number
                    }
                }
            }
            GA_ANKETA_SOREVNOVANIE: {
                payload: Prisma.$GA_ANKETA_SOREVNOVANIEPayload<ExtArgs>
                fields: Prisma.GA_ANKETA_SOREVNOVANIEFieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_ANKETA_SOREVNOVANIEFindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SOREVNOVANIEPayload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_ANKETA_SOREVNOVANIEFindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SOREVNOVANIEPayload>
                    }
                    findFirst: {
                        args: Prisma.GA_ANKETA_SOREVNOVANIEFindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SOREVNOVANIEPayload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_ANKETA_SOREVNOVANIEFindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SOREVNOVANIEPayload>
                    }
                    findMany: {
                        args: Prisma.GA_ANKETA_SOREVNOVANIEFindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SOREVNOVANIEPayload>[]
                    }
                    create: {
                        args: Prisma.GA_ANKETA_SOREVNOVANIECreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SOREVNOVANIEPayload>
                    }
                    createMany: {
                        args: Prisma.GA_ANKETA_SOREVNOVANIECreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_ANKETA_SOREVNOVANIEDeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SOREVNOVANIEPayload>
                    }
                    update: {
                        args: Prisma.GA_ANKETA_SOREVNOVANIEUpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SOREVNOVANIEPayload>
                    }
                    deleteMany: {
                        args: Prisma.GA_ANKETA_SOREVNOVANIEDeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_ANKETA_SOREVNOVANIEUpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_ANKETA_SOREVNOVANIEUpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_ANKETA_SOREVNOVANIEPayload>
                    }
                    aggregate: {
                        args: Prisma.GA_ANKETA_SOREVNOVANIEAggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_ANKETA_SOREVNOVANIE>
                    }
                    groupBy: {
                        args: Prisma.GA_ANKETA_SOREVNOVANIEGroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_ANKETA_SOREVNOVANIEGroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_ANKETA_SOREVNOVANIECountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_ANKETA_SOREVNOVANIECountAggregateOutputType>
                            | number
                    }
                }
            }
            GA_SUP_50012_SELLOUT: {
                payload: Prisma.$GA_SUP_50012_SELLOUTPayload<ExtArgs>
                fields: Prisma.GA_SUP_50012_SELLOUTFieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_SUP_50012_SELLOUTFindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50012_SELLOUTPayload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_SUP_50012_SELLOUTFindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50012_SELLOUTPayload>
                    }
                    findFirst: {
                        args: Prisma.GA_SUP_50012_SELLOUTFindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50012_SELLOUTPayload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_SUP_50012_SELLOUTFindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50012_SELLOUTPayload>
                    }
                    findMany: {
                        args: Prisma.GA_SUP_50012_SELLOUTFindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50012_SELLOUTPayload>[]
                    }
                    create: {
                        args: Prisma.GA_SUP_50012_SELLOUTCreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50012_SELLOUTPayload>
                    }
                    createMany: {
                        args: Prisma.GA_SUP_50012_SELLOUTCreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_SUP_50012_SELLOUTDeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50012_SELLOUTPayload>
                    }
                    update: {
                        args: Prisma.GA_SUP_50012_SELLOUTUpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50012_SELLOUTPayload>
                    }
                    deleteMany: {
                        args: Prisma.GA_SUP_50012_SELLOUTDeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_SUP_50012_SELLOUTUpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_SUP_50012_SELLOUTUpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50012_SELLOUTPayload>
                    }
                    aggregate: {
                        args: Prisma.GA_SUP_50012_SELLOUTAggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_SUP_50012_SELLOUT>
                    }
                    groupBy: {
                        args: Prisma.GA_SUP_50012_SELLOUTGroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_SUP_50012_SELLOUTGroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_SUP_50012_SELLOUTCountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_SUP_50012_SELLOUTCountAggregateOutputType>
                            | number
                    }
                }
            }
            GA_SUP_50013_SELLOUT: {
                payload: Prisma.$GA_SUP_50013_SELLOUTPayload<ExtArgs>
                fields: Prisma.GA_SUP_50013_SELLOUTFieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_SUP_50013_SELLOUTFindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50013_SELLOUTPayload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_SUP_50013_SELLOUTFindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50013_SELLOUTPayload>
                    }
                    findFirst: {
                        args: Prisma.GA_SUP_50013_SELLOUTFindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50013_SELLOUTPayload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_SUP_50013_SELLOUTFindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50013_SELLOUTPayload>
                    }
                    findMany: {
                        args: Prisma.GA_SUP_50013_SELLOUTFindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50013_SELLOUTPayload>[]
                    }
                    create: {
                        args: Prisma.GA_SUP_50013_SELLOUTCreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50013_SELLOUTPayload>
                    }
                    createMany: {
                        args: Prisma.GA_SUP_50013_SELLOUTCreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_SUP_50013_SELLOUTDeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50013_SELLOUTPayload>
                    }
                    update: {
                        args: Prisma.GA_SUP_50013_SELLOUTUpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50013_SELLOUTPayload>
                    }
                    deleteMany: {
                        args: Prisma.GA_SUP_50013_SELLOUTDeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_SUP_50013_SELLOUTUpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_SUP_50013_SELLOUTUpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50013_SELLOUTPayload>
                    }
                    aggregate: {
                        args: Prisma.GA_SUP_50013_SELLOUTAggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_SUP_50013_SELLOUT>
                    }
                    groupBy: {
                        args: Prisma.GA_SUP_50013_SELLOUTGroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_SUP_50013_SELLOUTGroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_SUP_50013_SELLOUTCountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_SUP_50013_SELLOUTCountAggregateOutputType>
                            | number
                    }
                }
            }
            GA_SUP_50014_SELLOUT: {
                payload: Prisma.$GA_SUP_50014_SELLOUTPayload<ExtArgs>
                fields: Prisma.GA_SUP_50014_SELLOUTFieldRefs
                operations: {
                    findUnique: {
                        args: Prisma.GA_SUP_50014_SELLOUTFindUniqueArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50014_SELLOUTPayload> | null
                    }
                    findUniqueOrThrow: {
                        args: Prisma.GA_SUP_50014_SELLOUTFindUniqueOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50014_SELLOUTPayload>
                    }
                    findFirst: {
                        args: Prisma.GA_SUP_50014_SELLOUTFindFirstArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50014_SELLOUTPayload> | null
                    }
                    findFirstOrThrow: {
                        args: Prisma.GA_SUP_50014_SELLOUTFindFirstOrThrowArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50014_SELLOUTPayload>
                    }
                    findMany: {
                        args: Prisma.GA_SUP_50014_SELLOUTFindManyArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50014_SELLOUTPayload>[]
                    }
                    create: {
                        args: Prisma.GA_SUP_50014_SELLOUTCreateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50014_SELLOUTPayload>
                    }
                    createMany: {
                        args: Prisma.GA_SUP_50014_SELLOUTCreateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    delete: {
                        args: Prisma.GA_SUP_50014_SELLOUTDeleteArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50014_SELLOUTPayload>
                    }
                    update: {
                        args: Prisma.GA_SUP_50014_SELLOUTUpdateArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50014_SELLOUTPayload>
                    }
                    deleteMany: {
                        args: Prisma.GA_SUP_50014_SELLOUTDeleteManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    updateMany: {
                        args: Prisma.GA_SUP_50014_SELLOUTUpdateManyArgs<ExtArgs>
                        result: Prisma.BatchPayload
                    }
                    upsert: {
                        args: Prisma.GA_SUP_50014_SELLOUTUpsertArgs<ExtArgs>
                        result: $Utils.PayloadToResult<Prisma.$GA_SUP_50014_SELLOUTPayload>
                    }
                    aggregate: {
                        args: Prisma.GA_SUP_50014_SELLOUTAggregateArgs<ExtArgs>
                        result: $Utils.Optional<AggregateGA_SUP_50014_SELLOUT>
                    }
                    groupBy: {
                        args: Prisma.GA_SUP_50014_SELLOUTGroupByArgs<ExtArgs>
                        result: $Utils.Optional<GA_SUP_50014_SELLOUTGroupByOutputType>[]
                    }
                    count: {
                        args: Prisma.GA_SUP_50014_SELLOUTCountArgs<ExtArgs>
                        result:
                            | $Utils.Optional<GA_SUP_50014_SELLOUTCountAggregateOutputType>
                            | number
                    }
                }
            }
        }
    } & {
        other: {
            payload: any
            operations: {
                $executeRawUnsafe: {
                    args: [query: string, ...values: any[]]
                    result: any
                }
                $executeRaw: {
                    args: [
                        query: TemplateStringsArray | Prisma.Sql,
                        ...values: any[],
                    ]
                    result: any
                }
                $queryRawUnsafe: {
                    args: [query: string, ...values: any[]]
                    result: any
                }
                $queryRaw: {
                    args: [
                        query: TemplateStringsArray | Prisma.Sql,
                        ...values: any[],
                    ]
                    result: any
                }
            }
        }
    }
    export const defineExtension: $Extensions.ExtendsHook<
        'define',
        Prisma.TypeMapCb,
        $Extensions.DefaultArgs
    >
    export type DefaultPrismaClient = PrismaClient
    export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
    export interface PrismaClientOptions {
        /**
         * Overwrites the datasource url from your schema.prisma file
         */
        datasources?: Datasources
        /**
         * Overwrites the datasource url from your schema.prisma file
         */
        datasourceUrl?: string
        /**
         * @default "colorless"
         */
        errorFormat?: ErrorFormat
        /**
         * @example
         * ```
         * // Defaults to stdout
         * log: ['query', 'info', 'warn', 'error']
         *
         * // Emit as events
         * log: [
         *   { emit: 'stdout', level: 'query' },
         *   { emit: 'stdout', level: 'info' },
         *   { emit: 'stdout', level: 'warn' }
         *   { emit: 'stdout', level: 'error' }
         * ]
         * ```
         * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
         */
        log?: (LogLevel | LogDefinition)[]
    }

    /* Types for Logging */
    export type LogLevel = 'info' | 'query' | 'warn' | 'error'
    export type LogDefinition = {
        level: LogLevel
        emit: 'stdout' | 'event'
    }

    export type GetLogType<T extends LogLevel | LogDefinition> =
        T extends LogDefinition
            ? T['emit'] extends 'event'
                ? T['level']
                : never
            : never
    export type GetEvents<T extends any> =
        T extends Array<LogLevel | LogDefinition>
            ?
                  | GetLogType<T[0]>
                  | GetLogType<T[1]>
                  | GetLogType<T[2]>
                  | GetLogType<T[3]>
            : never

    export type QueryEvent = {
        timestamp: Date
        query: string
        params: string
        duration: number
        target: string
    }

    export type LogEvent = {
        timestamp: Date
        message: string
        target: string
    }
    /* End Types for Logging */

    export type PrismaAction =
        | 'findUnique'
        | 'findUniqueOrThrow'
        | 'findMany'
        | 'findFirst'
        | 'findFirstOrThrow'
        | 'create'
        | 'createMany'
        | 'update'
        | 'updateMany'
        | 'upsert'
        | 'delete'
        | 'deleteMany'
        | 'executeRaw'
        | 'queryRaw'
        | 'aggregate'
        | 'count'
        | 'runCommandRaw'
        | 'findRaw'
        | 'groupBy'

    /**
     * These options are being passed into the middleware as "params"
     */
    export type MiddlewareParams = {
        model?: ModelName
        action: PrismaAction
        args: any
        dataPath: string[]
        runInTransaction: boolean
    }

    /**
     * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
     */
    export type Middleware<T = any> = (
        params: MiddlewareParams,
        next: (params: MiddlewareParams) => $Utils.JsPromise<T>
    ) => $Utils.JsPromise<T>

    // tested in getLogLevel.test.ts
    export function getLogLevel(
        log: Array<LogLevel | LogDefinition>
    ): LogLevel | undefined

    /**
     * `PrismaClient` proxy available in interactive transactions.
     */
    export type TransactionClient = Omit<
        Prisma.DefaultPrismaClient,
        runtime.ITXClientDenyList
    >

    export type Datasource = {
        url?: string
    }

    /**
     * Count Types
     */

    /**
     * Models
     */

    /**
     * Model GA_ANKETA_ADDR
     */

    export type AggregateGA_ANKETA_ADDR = {
        _count: GA_ANKETA_ADDRCountAggregateOutputType | null
        _avg: GA_ANKETA_ADDRAvgAggregateOutputType | null
        _sum: GA_ANKETA_ADDRSumAggregateOutputType | null
        _min: GA_ANKETA_ADDRMinAggregateOutputType | null
        _max: GA_ANKETA_ADDRMaxAggregateOutputType | null
    }

    export type GA_ANKETA_ADDRAvgAggregateOutputType = {
        AAD_ABA_ID: number | null
    }

    export type GA_ANKETA_ADDRSumAggregateOutputType = {
        AAD_ABA_ID: bigint | null
    }

    export type GA_ANKETA_ADDRMinAggregateOutputType = {
        AAD_ABA_ID: bigint | null
        AAD_SHIROTA: string | null
        AAD_DOLGOTA: string | null
        AAD_OBLAST: string | null
        AAD_GOROD: string | null
        AAD_ADDR: string | null
    }

    export type GA_ANKETA_ADDRMaxAggregateOutputType = {
        AAD_ABA_ID: bigint | null
        AAD_SHIROTA: string | null
        AAD_DOLGOTA: string | null
        AAD_OBLAST: string | null
        AAD_GOROD: string | null
        AAD_ADDR: string | null
    }

    export type GA_ANKETA_ADDRCountAggregateOutputType = {
        AAD_ABA_ID: number
        AAD_SHIROTA: number
        AAD_DOLGOTA: number
        AAD_OBLAST: number
        AAD_GOROD: number
        AAD_ADDR: number
        _all: number
    }

    export type GA_ANKETA_ADDRAvgAggregateInputType = {
        AAD_ABA_ID?: true
    }

    export type GA_ANKETA_ADDRSumAggregateInputType = {
        AAD_ABA_ID?: true
    }

    export type GA_ANKETA_ADDRMinAggregateInputType = {
        AAD_ABA_ID?: true
        AAD_SHIROTA?: true
        AAD_DOLGOTA?: true
        AAD_OBLAST?: true
        AAD_GOROD?: true
        AAD_ADDR?: true
    }

    export type GA_ANKETA_ADDRMaxAggregateInputType = {
        AAD_ABA_ID?: true
        AAD_SHIROTA?: true
        AAD_DOLGOTA?: true
        AAD_OBLAST?: true
        AAD_GOROD?: true
        AAD_ADDR?: true
    }

    export type GA_ANKETA_ADDRCountAggregateInputType = {
        AAD_ABA_ID?: true
        AAD_SHIROTA?: true
        AAD_DOLGOTA?: true
        AAD_OBLAST?: true
        AAD_GOROD?: true
        AAD_ADDR?: true
        _all?: true
    }

    export type GA_ANKETA_ADDRAggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_ADDR to aggregate.
         */
        where?: GA_ANKETA_ADDRWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_ADDRS to fetch.
         */
        orderBy?:
            | GA_ANKETA_ADDROrderByWithRelationInput
            | GA_ANKETA_ADDROrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_ANKETA_ADDRWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_ADDRS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_ADDRS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_ANKETA_ADDRS
         **/
        _count?: true | GA_ANKETA_ADDRCountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_ANKETA_ADDRAvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_ANKETA_ADDRSumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_ANKETA_ADDRMinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_ANKETA_ADDRMaxAggregateInputType
    }

    export type GetGA_ANKETA_ADDRAggregateType<
        T extends GA_ANKETA_ADDRAggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_ANKETA_ADDR]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_ANKETA_ADDR[P]>
            : GetScalarType<T[P], AggregateGA_ANKETA_ADDR[P]>
    }

    export type GA_ANKETA_ADDRGroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_ANKETA_ADDRWhereInput
        orderBy?:
            | GA_ANKETA_ADDROrderByWithAggregationInput
            | GA_ANKETA_ADDROrderByWithAggregationInput[]
        by: GA_ANKETA_ADDRScalarFieldEnum[] | GA_ANKETA_ADDRScalarFieldEnum
        having?: GA_ANKETA_ADDRScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_ANKETA_ADDRCountAggregateInputType | true
        _avg?: GA_ANKETA_ADDRAvgAggregateInputType
        _sum?: GA_ANKETA_ADDRSumAggregateInputType
        _min?: GA_ANKETA_ADDRMinAggregateInputType
        _max?: GA_ANKETA_ADDRMaxAggregateInputType
    }

    export type GA_ANKETA_ADDRGroupByOutputType = {
        AAD_ABA_ID: bigint
        AAD_SHIROTA: string
        AAD_DOLGOTA: string
        AAD_OBLAST: string
        AAD_GOROD: string
        AAD_ADDR: string
        _count: GA_ANKETA_ADDRCountAggregateOutputType | null
        _avg: GA_ANKETA_ADDRAvgAggregateOutputType | null
        _sum: GA_ANKETA_ADDRSumAggregateOutputType | null
        _min: GA_ANKETA_ADDRMinAggregateOutputType | null
        _max: GA_ANKETA_ADDRMaxAggregateOutputType | null
    }

    type GetGA_ANKETA_ADDRGroupByPayload<T extends GA_ANKETA_ADDRGroupByArgs> =
        Prisma.PrismaPromise<
            Array<
                PickEnumerable<GA_ANKETA_ADDRGroupByOutputType, T['by']> & {
                    [P in keyof T &
                        keyof GA_ANKETA_ADDRGroupByOutputType]: P extends '_count'
                        ? T[P] extends boolean
                            ? number
                            : GetScalarType<
                                  T[P],
                                  GA_ANKETA_ADDRGroupByOutputType[P]
                              >
                        : GetScalarType<
                              T[P],
                              GA_ANKETA_ADDRGroupByOutputType[P]
                          >
                }
            >
        >

    export type GA_ANKETA_ADDRSelect<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            AAD_ABA_ID?: boolean
            AAD_SHIROTA?: boolean
            AAD_DOLGOTA?: boolean
            AAD_OBLAST?: boolean
            AAD_GOROD?: boolean
            AAD_ADDR?: boolean
        },
        ExtArgs['result']['gA_ANKETA_ADDR']
    >

    export type GA_ANKETA_ADDRSelectScalar = {
        AAD_ABA_ID?: boolean
        AAD_SHIROTA?: boolean
        AAD_DOLGOTA?: boolean
        AAD_OBLAST?: boolean
        AAD_GOROD?: boolean
        AAD_ADDR?: boolean
    }

    export type $GA_ANKETA_ADDRPayload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_ANKETA_ADDR'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                AAD_ABA_ID: bigint
                AAD_SHIROTA: string
                AAD_DOLGOTA: string
                AAD_OBLAST: string
                AAD_GOROD: string
                AAD_ADDR: string
            },
            ExtArgs['result']['gA_ANKETA_ADDR']
        >
        composites: {}
    }

    type GA_ANKETA_ADDRGetPayload<
        S extends boolean | null | undefined | GA_ANKETA_ADDRDefaultArgs,
    > = $Result.GetResult<Prisma.$GA_ANKETA_ADDRPayload, S>

    type GA_ANKETA_ADDRCountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<GA_ANKETA_ADDRFindManyArgs, 'select' | 'include' | 'distinct'> & {
        select?: GA_ANKETA_ADDRCountAggregateInputType | true
    }

    export interface GA_ANKETA_ADDRDelegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_ANKETA_ADDR']
            meta: { name: 'GA_ANKETA_ADDR' }
        }
        /**
         * Find zero or one GA_ANKETA_ADDR that matches the filter.
         * @param {GA_ANKETA_ADDRFindUniqueArgs} args - Arguments to find a GA_ANKETA_ADDR
         * @example
         * // Get one GA_ANKETA_ADDR
         * const gA_ANKETA_ADDR = await prisma.gA_ANKETA_ADDR.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_ANKETA_ADDRFindUniqueArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_ADDRFindUniqueArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_ADDRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_ADDRPayload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_ANKETA_ADDR that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_ANKETA_ADDRFindUniqueOrThrowArgs} args - Arguments to find a GA_ANKETA_ADDR
         * @example
         * // Get one GA_ANKETA_ADDR
         * const gA_ANKETA_ADDR = await prisma.gA_ANKETA_ADDR.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_ANKETA_ADDRFindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<T, GA_ANKETA_ADDRFindUniqueOrThrowArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_ADDRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_ADDRPayload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_ADDR that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_ADDRFindFirstArgs} args - Arguments to find a GA_ANKETA_ADDR
         * @example
         * // Get one GA_ANKETA_ADDR
         * const gA_ANKETA_ADDR = await prisma.gA_ANKETA_ADDR.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_ANKETA_ADDRFindFirstArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_ADDRFindFirstArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_ADDRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_ADDRPayload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_ADDR that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_ADDRFindFirstOrThrowArgs} args - Arguments to find a GA_ANKETA_ADDR
         * @example
         * // Get one GA_ANKETA_ADDR
         * const gA_ANKETA_ADDR = await prisma.gA_ANKETA_ADDR.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<T extends GA_ANKETA_ADDRFindFirstOrThrowArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_ADDRFindFirstOrThrowArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_ADDRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_ADDRPayload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_ANKETA_ADDRS that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_ADDRFindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_ANKETA_ADDRS
         * const gA_ANKETA_ADDRS = await prisma.gA_ANKETA_ADDR.findMany()
         *
         * // Get first 10 GA_ANKETA_ADDRS
         * const gA_ANKETA_ADDRS = await prisma.gA_ANKETA_ADDR.findMany({ take: 10 })
         *
         * // Only select the `AAD_ABA_ID`
         * const gA_ANKETA_ADDRWithAAD_ABA_IDOnly = await prisma.gA_ANKETA_ADDR.findMany({ select: { AAD_ABA_ID: true } })
         *
         **/
        findMany<T extends GA_ANKETA_ADDRFindManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_ADDRFindManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_ANKETA_ADDRPayload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_ANKETA_ADDR.
         * @param {GA_ANKETA_ADDRCreateArgs} args - Arguments to create a GA_ANKETA_ADDR.
         * @example
         * // Create one GA_ANKETA_ADDR
         * const GA_ANKETA_ADDR = await prisma.gA_ANKETA_ADDR.create({
         *   data: {
         *     // ... data to create a GA_ANKETA_ADDR
         *   }
         * })
         *
         **/
        create<T extends GA_ANKETA_ADDRCreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_ADDRCreateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_ADDRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_ADDRPayload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_ANKETA_ADDRS.
         *     @param {GA_ANKETA_ADDRCreateManyArgs} args - Arguments to create many GA_ANKETA_ADDRS.
         *     @example
         *     // Create many GA_ANKETA_ADDRS
         *     const gA_ANKETA_ADDR = await prisma.gA_ANKETA_ADDR.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_ANKETA_ADDRCreateManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_ADDRCreateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_ANKETA_ADDR.
         * @param {GA_ANKETA_ADDRDeleteArgs} args - Arguments to delete one GA_ANKETA_ADDR.
         * @example
         * // Delete one GA_ANKETA_ADDR
         * const GA_ANKETA_ADDR = await prisma.gA_ANKETA_ADDR.delete({
         *   where: {
         *     // ... filter to delete one GA_ANKETA_ADDR
         *   }
         * })
         *
         **/
        delete<T extends GA_ANKETA_ADDRDeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_ADDRDeleteArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_ADDRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_ADDRPayload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_ANKETA_ADDR.
         * @param {GA_ANKETA_ADDRUpdateArgs} args - Arguments to update one GA_ANKETA_ADDR.
         * @example
         * // Update one GA_ANKETA_ADDR
         * const gA_ANKETA_ADDR = await prisma.gA_ANKETA_ADDR.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_ANKETA_ADDRUpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_ADDRUpdateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_ADDRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_ADDRPayload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_ANKETA_ADDRS.
         * @param {GA_ANKETA_ADDRDeleteManyArgs} args - Arguments to filter GA_ANKETA_ADDRS to delete.
         * @example
         * // Delete a few GA_ANKETA_ADDRS
         * const { count } = await prisma.gA_ANKETA_ADDR.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_ANKETA_ADDRDeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_ADDRDeleteManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_ANKETA_ADDRS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_ADDRUpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_ANKETA_ADDRS
         * const gA_ANKETA_ADDR = await prisma.gA_ANKETA_ADDR.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_ANKETA_ADDRUpdateManyArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_ADDRUpdateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_ANKETA_ADDR.
         * @param {GA_ANKETA_ADDRUpsertArgs} args - Arguments to update or create a GA_ANKETA_ADDR.
         * @example
         * // Update or create a GA_ANKETA_ADDR
         * const gA_ANKETA_ADDR = await prisma.gA_ANKETA_ADDR.upsert({
         *   create: {
         *     // ... data to create a GA_ANKETA_ADDR
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_ANKETA_ADDR we want to update
         *   }
         * })
         **/
        upsert<T extends GA_ANKETA_ADDRUpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_ADDRUpsertArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_ADDRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_ADDRPayload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_ANKETA_ADDRS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_ADDRCountArgs} args - Arguments to filter GA_ANKETA_ADDRS to count.
         * @example
         * // Count the number of GA_ANKETA_ADDRS
         * const count = await prisma.gA_ANKETA_ADDR.count({
         *   where: {
         *     // ... the filter for the GA_ANKETA_ADDRS we want to count
         *   }
         * })
         **/
        count<T extends GA_ANKETA_ADDRCountArgs>(
            args?: Subset<T, GA_ANKETA_ADDRCountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_ANKETA_ADDRCountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_ANKETA_ADDR.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_ADDRAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_ANKETA_ADDRAggregateArgs>(
            args: Subset<T, GA_ANKETA_ADDRAggregateArgs>
        ): Prisma.PrismaPromise<GetGA_ANKETA_ADDRAggregateType<T>>

        /**
         * Group by GA_ANKETA_ADDR.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_ADDRGroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_ANKETA_ADDRGroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_ANKETA_ADDRGroupByArgs['orderBy'] }
                : { orderBy?: GA_ANKETA_ADDRGroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<T, GA_ANKETA_ADDRGroupByArgs, OrderByArg> &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_ANKETA_ADDRGroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_ANKETA_ADDR model
         */
        readonly fields: GA_ANKETA_ADDRFieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_ANKETA_ADDR.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_ANKETA_ADDRClient<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_ANKETA_ADDR model
     */
    interface GA_ANKETA_ADDRFieldRefs {
        readonly AAD_ABA_ID: FieldRef<'GA_ANKETA_ADDR', 'BigInt'>
        readonly AAD_SHIROTA: FieldRef<'GA_ANKETA_ADDR', 'String'>
        readonly AAD_DOLGOTA: FieldRef<'GA_ANKETA_ADDR', 'String'>
        readonly AAD_OBLAST: FieldRef<'GA_ANKETA_ADDR', 'String'>
        readonly AAD_GOROD: FieldRef<'GA_ANKETA_ADDR', 'String'>
        readonly AAD_ADDR: FieldRef<'GA_ANKETA_ADDR', 'String'>
    }

    // Custom InputTypes

    /**
     * GA_ANKETA_ADDR findUnique
     */
    export type GA_ANKETA_ADDRFindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_ADDR
         */
        select?: GA_ANKETA_ADDRSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_ADDR to fetch.
         */
        where: GA_ANKETA_ADDRWhereUniqueInput
    }

    /**
     * GA_ANKETA_ADDR findUniqueOrThrow
     */
    export type GA_ANKETA_ADDRFindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_ADDR
         */
        select?: GA_ANKETA_ADDRSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_ADDR to fetch.
         */
        where: GA_ANKETA_ADDRWhereUniqueInput
    }

    /**
     * GA_ANKETA_ADDR findFirst
     */
    export type GA_ANKETA_ADDRFindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_ADDR
         */
        select?: GA_ANKETA_ADDRSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_ADDR to fetch.
         */
        where?: GA_ANKETA_ADDRWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_ADDRS to fetch.
         */
        orderBy?:
            | GA_ANKETA_ADDROrderByWithRelationInput
            | GA_ANKETA_ADDROrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_ADDRS.
         */
        cursor?: GA_ANKETA_ADDRWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_ADDRS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_ADDRS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_ADDRS.
         */
        distinct?:
            | GA_ANKETA_ADDRScalarFieldEnum
            | GA_ANKETA_ADDRScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_ADDR findFirstOrThrow
     */
    export type GA_ANKETA_ADDRFindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_ADDR
         */
        select?: GA_ANKETA_ADDRSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_ADDR to fetch.
         */
        where?: GA_ANKETA_ADDRWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_ADDRS to fetch.
         */
        orderBy?:
            | GA_ANKETA_ADDROrderByWithRelationInput
            | GA_ANKETA_ADDROrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_ADDRS.
         */
        cursor?: GA_ANKETA_ADDRWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_ADDRS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_ADDRS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_ADDRS.
         */
        distinct?:
            | GA_ANKETA_ADDRScalarFieldEnum
            | GA_ANKETA_ADDRScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_ADDR findMany
     */
    export type GA_ANKETA_ADDRFindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_ADDR
         */
        select?: GA_ANKETA_ADDRSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_ADDRS to fetch.
         */
        where?: GA_ANKETA_ADDRWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_ADDRS to fetch.
         */
        orderBy?:
            | GA_ANKETA_ADDROrderByWithRelationInput
            | GA_ANKETA_ADDROrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_ANKETA_ADDRS.
         */
        cursor?: GA_ANKETA_ADDRWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_ADDRS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_ADDRS.
         */
        skip?: number
        distinct?:
            | GA_ANKETA_ADDRScalarFieldEnum
            | GA_ANKETA_ADDRScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_ADDR create
     */
    export type GA_ANKETA_ADDRCreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_ADDR
         */
        select?: GA_ANKETA_ADDRSelect<ExtArgs> | null
        /**
         * The data needed to create a GA_ANKETA_ADDR.
         */
        data: XOR<GA_ANKETA_ADDRCreateInput, GA_ANKETA_ADDRUncheckedCreateInput>
    }

    /**
     * GA_ANKETA_ADDR createMany
     */
    export type GA_ANKETA_ADDRCreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_ANKETA_ADDRS.
         */
        data: GA_ANKETA_ADDRCreateManyInput | GA_ANKETA_ADDRCreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_ANKETA_ADDR update
     */
    export type GA_ANKETA_ADDRUpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_ADDR
         */
        select?: GA_ANKETA_ADDRSelect<ExtArgs> | null
        /**
         * The data needed to update a GA_ANKETA_ADDR.
         */
        data: XOR<GA_ANKETA_ADDRUpdateInput, GA_ANKETA_ADDRUncheckedUpdateInput>
        /**
         * Choose, which GA_ANKETA_ADDR to update.
         */
        where: GA_ANKETA_ADDRWhereUniqueInput
    }

    /**
     * GA_ANKETA_ADDR updateMany
     */
    export type GA_ANKETA_ADDRUpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_ANKETA_ADDRS.
         */
        data: XOR<
            GA_ANKETA_ADDRUpdateManyMutationInput,
            GA_ANKETA_ADDRUncheckedUpdateManyInput
        >
        /**
         * Filter which GA_ANKETA_ADDRS to update
         */
        where?: GA_ANKETA_ADDRWhereInput
    }

    /**
     * GA_ANKETA_ADDR upsert
     */
    export type GA_ANKETA_ADDRUpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_ADDR
         */
        select?: GA_ANKETA_ADDRSelect<ExtArgs> | null
        /**
         * The filter to search for the GA_ANKETA_ADDR to update in case it exists.
         */
        where: GA_ANKETA_ADDRWhereUniqueInput
        /**
         * In case the GA_ANKETA_ADDR found by the `where` argument doesn't exist, create a new GA_ANKETA_ADDR with this data.
         */
        create: XOR<
            GA_ANKETA_ADDRCreateInput,
            GA_ANKETA_ADDRUncheckedCreateInput
        >
        /**
         * In case the GA_ANKETA_ADDR was found with the provided `where` argument, update it with this data.
         */
        update: XOR<
            GA_ANKETA_ADDRUpdateInput,
            GA_ANKETA_ADDRUncheckedUpdateInput
        >
    }

    /**
     * GA_ANKETA_ADDR delete
     */
    export type GA_ANKETA_ADDRDeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_ADDR
         */
        select?: GA_ANKETA_ADDRSelect<ExtArgs> | null
        /**
         * Filter which GA_ANKETA_ADDR to delete.
         */
        where: GA_ANKETA_ADDRWhereUniqueInput
    }

    /**
     * GA_ANKETA_ADDR deleteMany
     */
    export type GA_ANKETA_ADDRDeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_ADDRS to delete
         */
        where?: GA_ANKETA_ADDRWhereInput
    }

    /**
     * GA_ANKETA_ADDR without action
     */
    export type GA_ANKETA_ADDRDefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_ADDR
         */
        select?: GA_ANKETA_ADDRSelect<ExtArgs> | null
    }

    /**
     * Model GA_ANKETA_BASE
     */

    export type AggregateGA_ANKETA_BASE = {
        _count: GA_ANKETA_BASECountAggregateOutputType | null
        _avg: GA_ANKETA_BASEAvgAggregateOutputType | null
        _sum: GA_ANKETA_BASESumAggregateOutputType | null
        _min: GA_ANKETA_BASEMinAggregateOutputType | null
        _max: GA_ANKETA_BASEMaxAggregateOutputType | null
    }

    export type GA_ANKETA_BASEAvgAggregateOutputType = {
        ABA_WSU_ID: number | null
        ABA_REMZONA_QTY: number | null
        ABA_ID: number | null
    }

    export type GA_ANKETA_BASESumAggregateOutputType = {
        ABA_WSU_ID: bigint | null
        ABA_REMZONA_QTY: number | null
        ABA_ID: bigint | null
    }

    export type GA_ANKETA_BASEMinAggregateOutputType = {
        ABA_WSU_ID: bigint | null
        ABA_STO_NAME: string | null
        ABA_STO_ID1: string | null
        ABA_REMZONA_QTY: number | null
        ABA_ENABLED: boolean | null
        ABA_PHONE: string | null
        ABA_INN: string | null
        ABA_DATETIME_CREATED: Date | null
        ABA_DATETIME_UPDATED: Date | null
        ABA_ID: bigint | null
        ABA_DATETIME: Date | null
        ABA_STO_ID2: string | null
        ABA_STO_NAME_FIND: string | null
    }

    export type GA_ANKETA_BASEMaxAggregateOutputType = {
        ABA_WSU_ID: bigint | null
        ABA_STO_NAME: string | null
        ABA_STO_ID1: string | null
        ABA_REMZONA_QTY: number | null
        ABA_ENABLED: boolean | null
        ABA_PHONE: string | null
        ABA_INN: string | null
        ABA_DATETIME_CREATED: Date | null
        ABA_DATETIME_UPDATED: Date | null
        ABA_ID: bigint | null
        ABA_DATETIME: Date | null
        ABA_STO_ID2: string | null
        ABA_STO_NAME_FIND: string | null
    }

    export type GA_ANKETA_BASECountAggregateOutputType = {
        ABA_WSU_ID: number
        ABA_STO_NAME: number
        ABA_STO_ID1: number
        ABA_REMZONA_QTY: number
        ABA_ENABLED: number
        ABA_PHONE: number
        ABA_INN: number
        ABA_DATETIME_CREATED: number
        ABA_DATETIME_UPDATED: number
        ABA_ID: number
        ABA_DATETIME: number
        ABA_STO_ID2: number
        ABA_STO_NAME_FIND: number
        _all: number
    }

    export type GA_ANKETA_BASEAvgAggregateInputType = {
        ABA_WSU_ID?: true
        ABA_REMZONA_QTY?: true
        ABA_ID?: true
    }

    export type GA_ANKETA_BASESumAggregateInputType = {
        ABA_WSU_ID?: true
        ABA_REMZONA_QTY?: true
        ABA_ID?: true
    }

    export type GA_ANKETA_BASEMinAggregateInputType = {
        ABA_WSU_ID?: true
        ABA_STO_NAME?: true
        ABA_STO_ID1?: true
        ABA_REMZONA_QTY?: true
        ABA_ENABLED?: true
        ABA_PHONE?: true
        ABA_INN?: true
        ABA_DATETIME_CREATED?: true
        ABA_DATETIME_UPDATED?: true
        ABA_ID?: true
        ABA_DATETIME?: true
        ABA_STO_ID2?: true
        ABA_STO_NAME_FIND?: true
    }

    export type GA_ANKETA_BASEMaxAggregateInputType = {
        ABA_WSU_ID?: true
        ABA_STO_NAME?: true
        ABA_STO_ID1?: true
        ABA_REMZONA_QTY?: true
        ABA_ENABLED?: true
        ABA_PHONE?: true
        ABA_INN?: true
        ABA_DATETIME_CREATED?: true
        ABA_DATETIME_UPDATED?: true
        ABA_ID?: true
        ABA_DATETIME?: true
        ABA_STO_ID2?: true
        ABA_STO_NAME_FIND?: true
    }

    export type GA_ANKETA_BASECountAggregateInputType = {
        ABA_WSU_ID?: true
        ABA_STO_NAME?: true
        ABA_STO_ID1?: true
        ABA_REMZONA_QTY?: true
        ABA_ENABLED?: true
        ABA_PHONE?: true
        ABA_INN?: true
        ABA_DATETIME_CREATED?: true
        ABA_DATETIME_UPDATED?: true
        ABA_ID?: true
        ABA_DATETIME?: true
        ABA_STO_ID2?: true
        ABA_STO_NAME_FIND?: true
        _all?: true
    }

    export type GA_ANKETA_BASEAggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_BASE to aggregate.
         */
        where?: GA_ANKETA_BASEWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_BASES to fetch.
         */
        orderBy?:
            | GA_ANKETA_BASEOrderByWithRelationInput
            | GA_ANKETA_BASEOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_ANKETA_BASEWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_BASES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_BASES.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_ANKETA_BASES
         **/
        _count?: true | GA_ANKETA_BASECountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_ANKETA_BASEAvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_ANKETA_BASESumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_ANKETA_BASEMinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_ANKETA_BASEMaxAggregateInputType
    }

    export type GetGA_ANKETA_BASEAggregateType<
        T extends GA_ANKETA_BASEAggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_ANKETA_BASE]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_ANKETA_BASE[P]>
            : GetScalarType<T[P], AggregateGA_ANKETA_BASE[P]>
    }

    export type GA_ANKETA_BASEGroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_ANKETA_BASEWhereInput
        orderBy?:
            | GA_ANKETA_BASEOrderByWithAggregationInput
            | GA_ANKETA_BASEOrderByWithAggregationInput[]
        by: GA_ANKETA_BASEScalarFieldEnum[] | GA_ANKETA_BASEScalarFieldEnum
        having?: GA_ANKETA_BASEScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_ANKETA_BASECountAggregateInputType | true
        _avg?: GA_ANKETA_BASEAvgAggregateInputType
        _sum?: GA_ANKETA_BASESumAggregateInputType
        _min?: GA_ANKETA_BASEMinAggregateInputType
        _max?: GA_ANKETA_BASEMaxAggregateInputType
    }

    export type GA_ANKETA_BASEGroupByOutputType = {
        ABA_WSU_ID: bigint
        ABA_STO_NAME: string
        ABA_STO_ID1: string
        ABA_REMZONA_QTY: number
        ABA_ENABLED: boolean
        ABA_PHONE: string
        ABA_INN: string
        ABA_DATETIME_CREATED: Date
        ABA_DATETIME_UPDATED: Date
        ABA_ID: bigint
        ABA_DATETIME: Date
        ABA_STO_ID2: string
        ABA_STO_NAME_FIND: string | null
        _count: GA_ANKETA_BASECountAggregateOutputType | null
        _avg: GA_ANKETA_BASEAvgAggregateOutputType | null
        _sum: GA_ANKETA_BASESumAggregateOutputType | null
        _min: GA_ANKETA_BASEMinAggregateOutputType | null
        _max: GA_ANKETA_BASEMaxAggregateOutputType | null
    }

    type GetGA_ANKETA_BASEGroupByPayload<T extends GA_ANKETA_BASEGroupByArgs> =
        Prisma.PrismaPromise<
            Array<
                PickEnumerable<GA_ANKETA_BASEGroupByOutputType, T['by']> & {
                    [P in keyof T &
                        keyof GA_ANKETA_BASEGroupByOutputType]: P extends '_count'
                        ? T[P] extends boolean
                            ? number
                            : GetScalarType<
                                  T[P],
                                  GA_ANKETA_BASEGroupByOutputType[P]
                              >
                        : GetScalarType<
                              T[P],
                              GA_ANKETA_BASEGroupByOutputType[P]
                          >
                }
            >
        >

    export type GA_ANKETA_BASESelect<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            ABA_WSU_ID?: boolean
            ABA_STO_NAME?: boolean
            ABA_STO_ID1?: boolean
            ABA_REMZONA_QTY?: boolean
            ABA_ENABLED?: boolean
            ABA_PHONE?: boolean
            ABA_INN?: boolean
            ABA_DATETIME_CREATED?: boolean
            ABA_DATETIME_UPDATED?: boolean
            ABA_ID?: boolean
            ABA_DATETIME?: boolean
            ABA_STO_ID2?: boolean
            ABA_STO_NAME_FIND?: boolean
        },
        ExtArgs['result']['gA_ANKETA_BASE']
    >

    export type GA_ANKETA_BASESelectScalar = {
        ABA_WSU_ID?: boolean
        ABA_STO_NAME?: boolean
        ABA_STO_ID1?: boolean
        ABA_REMZONA_QTY?: boolean
        ABA_ENABLED?: boolean
        ABA_PHONE?: boolean
        ABA_INN?: boolean
        ABA_DATETIME_CREATED?: boolean
        ABA_DATETIME_UPDATED?: boolean
        ABA_ID?: boolean
        ABA_DATETIME?: boolean
        ABA_STO_ID2?: boolean
        ABA_STO_NAME_FIND?: boolean
    }

    export type $GA_ANKETA_BASEPayload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_ANKETA_BASE'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                ABA_WSU_ID: bigint
                ABA_STO_NAME: string
                ABA_STO_ID1: string
                ABA_REMZONA_QTY: number
                ABA_ENABLED: boolean
                ABA_PHONE: string
                ABA_INN: string
                ABA_DATETIME_CREATED: Date
                ABA_DATETIME_UPDATED: Date
                ABA_ID: bigint
                ABA_DATETIME: Date
                ABA_STO_ID2: string
                ABA_STO_NAME_FIND: string | null
            },
            ExtArgs['result']['gA_ANKETA_BASE']
        >
        composites: {}
    }

    type GA_ANKETA_BASEGetPayload<
        S extends boolean | null | undefined | GA_ANKETA_BASEDefaultArgs,
    > = $Result.GetResult<Prisma.$GA_ANKETA_BASEPayload, S>

    type GA_ANKETA_BASECountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<GA_ANKETA_BASEFindManyArgs, 'select' | 'include' | 'distinct'> & {
        select?: GA_ANKETA_BASECountAggregateInputType | true
    }

    export interface GA_ANKETA_BASEDelegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_ANKETA_BASE']
            meta: { name: 'GA_ANKETA_BASE' }
        }
        /**
         * Find zero or one GA_ANKETA_BASE that matches the filter.
         * @param {GA_ANKETA_BASEFindUniqueArgs} args - Arguments to find a GA_ANKETA_BASE
         * @example
         * // Get one GA_ANKETA_BASE
         * const gA_ANKETA_BASE = await prisma.gA_ANKETA_BASE.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_ANKETA_BASEFindUniqueArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BASEFindUniqueArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BASEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BASEPayload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_ANKETA_BASE that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_ANKETA_BASEFindUniqueOrThrowArgs} args - Arguments to find a GA_ANKETA_BASE
         * @example
         * // Get one GA_ANKETA_BASE
         * const gA_ANKETA_BASE = await prisma.gA_ANKETA_BASE.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_ANKETA_BASEFindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<T, GA_ANKETA_BASEFindUniqueOrThrowArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BASEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BASEPayload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_BASE that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BASEFindFirstArgs} args - Arguments to find a GA_ANKETA_BASE
         * @example
         * // Get one GA_ANKETA_BASE
         * const gA_ANKETA_BASE = await prisma.gA_ANKETA_BASE.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_ANKETA_BASEFindFirstArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_BASEFindFirstArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BASEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BASEPayload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_BASE that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BASEFindFirstOrThrowArgs} args - Arguments to find a GA_ANKETA_BASE
         * @example
         * // Get one GA_ANKETA_BASE
         * const gA_ANKETA_BASE = await prisma.gA_ANKETA_BASE.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<T extends GA_ANKETA_BASEFindFirstOrThrowArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_BASEFindFirstOrThrowArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BASEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BASEPayload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_ANKETA_BASES that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BASEFindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_ANKETA_BASES
         * const gA_ANKETA_BASES = await prisma.gA_ANKETA_BASE.findMany()
         *
         * // Get first 10 GA_ANKETA_BASES
         * const gA_ANKETA_BASES = await prisma.gA_ANKETA_BASE.findMany({ take: 10 })
         *
         * // Only select the `ABA_WSU_ID`
         * const gA_ANKETA_BASEWithABA_WSU_IDOnly = await prisma.gA_ANKETA_BASE.findMany({ select: { ABA_WSU_ID: true } })
         *
         **/
        findMany<T extends GA_ANKETA_BASEFindManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_BASEFindManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BASEPayload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_ANKETA_BASE.
         * @param {GA_ANKETA_BASECreateArgs} args - Arguments to create a GA_ANKETA_BASE.
         * @example
         * // Create one GA_ANKETA_BASE
         * const GA_ANKETA_BASE = await prisma.gA_ANKETA_BASE.create({
         *   data: {
         *     // ... data to create a GA_ANKETA_BASE
         *   }
         * })
         *
         **/
        create<T extends GA_ANKETA_BASECreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BASECreateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BASEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BASEPayload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_ANKETA_BASES.
         *     @param {GA_ANKETA_BASECreateManyArgs} args - Arguments to create many GA_ANKETA_BASES.
         *     @example
         *     // Create many GA_ANKETA_BASES
         *     const gA_ANKETA_BASE = await prisma.gA_ANKETA_BASE.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_ANKETA_BASECreateManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_BASECreateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_ANKETA_BASE.
         * @param {GA_ANKETA_BASEDeleteArgs} args - Arguments to delete one GA_ANKETA_BASE.
         * @example
         * // Delete one GA_ANKETA_BASE
         * const GA_ANKETA_BASE = await prisma.gA_ANKETA_BASE.delete({
         *   where: {
         *     // ... filter to delete one GA_ANKETA_BASE
         *   }
         * })
         *
         **/
        delete<T extends GA_ANKETA_BASEDeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BASEDeleteArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BASEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BASEPayload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_ANKETA_BASE.
         * @param {GA_ANKETA_BASEUpdateArgs} args - Arguments to update one GA_ANKETA_BASE.
         * @example
         * // Update one GA_ANKETA_BASE
         * const gA_ANKETA_BASE = await prisma.gA_ANKETA_BASE.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_ANKETA_BASEUpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BASEUpdateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BASEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BASEPayload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_ANKETA_BASES.
         * @param {GA_ANKETA_BASEDeleteManyArgs} args - Arguments to filter GA_ANKETA_BASES to delete.
         * @example
         * // Delete a few GA_ANKETA_BASES
         * const { count } = await prisma.gA_ANKETA_BASE.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_ANKETA_BASEDeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_BASEDeleteManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_ANKETA_BASES.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BASEUpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_ANKETA_BASES
         * const gA_ANKETA_BASE = await prisma.gA_ANKETA_BASE.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_ANKETA_BASEUpdateManyArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BASEUpdateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_ANKETA_BASE.
         * @param {GA_ANKETA_BASEUpsertArgs} args - Arguments to update or create a GA_ANKETA_BASE.
         * @example
         * // Update or create a GA_ANKETA_BASE
         * const gA_ANKETA_BASE = await prisma.gA_ANKETA_BASE.upsert({
         *   create: {
         *     // ... data to create a GA_ANKETA_BASE
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_ANKETA_BASE we want to update
         *   }
         * })
         **/
        upsert<T extends GA_ANKETA_BASEUpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BASEUpsertArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BASEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BASEPayload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_ANKETA_BASES.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BASECountArgs} args - Arguments to filter GA_ANKETA_BASES to count.
         * @example
         * // Count the number of GA_ANKETA_BASES
         * const count = await prisma.gA_ANKETA_BASE.count({
         *   where: {
         *     // ... the filter for the GA_ANKETA_BASES we want to count
         *   }
         * })
         **/
        count<T extends GA_ANKETA_BASECountArgs>(
            args?: Subset<T, GA_ANKETA_BASECountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_ANKETA_BASECountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_ANKETA_BASE.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BASEAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_ANKETA_BASEAggregateArgs>(
            args: Subset<T, GA_ANKETA_BASEAggregateArgs>
        ): Prisma.PrismaPromise<GetGA_ANKETA_BASEAggregateType<T>>

        /**
         * Group by GA_ANKETA_BASE.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BASEGroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_ANKETA_BASEGroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_ANKETA_BASEGroupByArgs['orderBy'] }
                : { orderBy?: GA_ANKETA_BASEGroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<T, GA_ANKETA_BASEGroupByArgs, OrderByArg> &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_ANKETA_BASEGroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_ANKETA_BASE model
         */
        readonly fields: GA_ANKETA_BASEFieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_ANKETA_BASE.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_ANKETA_BASEClient<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_ANKETA_BASE model
     */
    interface GA_ANKETA_BASEFieldRefs {
        readonly ABA_WSU_ID: FieldRef<'GA_ANKETA_BASE', 'BigInt'>
        readonly ABA_STO_NAME: FieldRef<'GA_ANKETA_BASE', 'String'>
        readonly ABA_STO_ID1: FieldRef<'GA_ANKETA_BASE', 'String'>
        readonly ABA_REMZONA_QTY: FieldRef<'GA_ANKETA_BASE', 'Int'>
        readonly ABA_ENABLED: FieldRef<'GA_ANKETA_BASE', 'Boolean'>
        readonly ABA_PHONE: FieldRef<'GA_ANKETA_BASE', 'String'>
        readonly ABA_INN: FieldRef<'GA_ANKETA_BASE', 'String'>
        readonly ABA_DATETIME_CREATED: FieldRef<'GA_ANKETA_BASE', 'DateTime'>
        readonly ABA_DATETIME_UPDATED: FieldRef<'GA_ANKETA_BASE', 'DateTime'>
        readonly ABA_ID: FieldRef<'GA_ANKETA_BASE', 'BigInt'>
        readonly ABA_DATETIME: FieldRef<'GA_ANKETA_BASE', 'DateTime'>
        readonly ABA_STO_ID2: FieldRef<'GA_ANKETA_BASE', 'String'>
        readonly ABA_STO_NAME_FIND: FieldRef<'GA_ANKETA_BASE', 'String'>
    }

    // Custom InputTypes

    /**
     * GA_ANKETA_BASE findUnique
     */
    export type GA_ANKETA_BASEFindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BASE
         */
        select?: GA_ANKETA_BASESelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_BASE to fetch.
         */
        where: GA_ANKETA_BASEWhereUniqueInput
    }

    /**
     * GA_ANKETA_BASE findUniqueOrThrow
     */
    export type GA_ANKETA_BASEFindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BASE
         */
        select?: GA_ANKETA_BASESelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_BASE to fetch.
         */
        where: GA_ANKETA_BASEWhereUniqueInput
    }

    /**
     * GA_ANKETA_BASE findFirst
     */
    export type GA_ANKETA_BASEFindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BASE
         */
        select?: GA_ANKETA_BASESelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_BASE to fetch.
         */
        where?: GA_ANKETA_BASEWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_BASES to fetch.
         */
        orderBy?:
            | GA_ANKETA_BASEOrderByWithRelationInput
            | GA_ANKETA_BASEOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_BASES.
         */
        cursor?: GA_ANKETA_BASEWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_BASES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_BASES.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_BASES.
         */
        distinct?:
            | GA_ANKETA_BASEScalarFieldEnum
            | GA_ANKETA_BASEScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_BASE findFirstOrThrow
     */
    export type GA_ANKETA_BASEFindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BASE
         */
        select?: GA_ANKETA_BASESelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_BASE to fetch.
         */
        where?: GA_ANKETA_BASEWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_BASES to fetch.
         */
        orderBy?:
            | GA_ANKETA_BASEOrderByWithRelationInput
            | GA_ANKETA_BASEOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_BASES.
         */
        cursor?: GA_ANKETA_BASEWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_BASES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_BASES.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_BASES.
         */
        distinct?:
            | GA_ANKETA_BASEScalarFieldEnum
            | GA_ANKETA_BASEScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_BASE findMany
     */
    export type GA_ANKETA_BASEFindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BASE
         */
        select?: GA_ANKETA_BASESelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_BASES to fetch.
         */
        where?: GA_ANKETA_BASEWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_BASES to fetch.
         */
        orderBy?:
            | GA_ANKETA_BASEOrderByWithRelationInput
            | GA_ANKETA_BASEOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_ANKETA_BASES.
         */
        cursor?: GA_ANKETA_BASEWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_BASES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_BASES.
         */
        skip?: number
        distinct?:
            | GA_ANKETA_BASEScalarFieldEnum
            | GA_ANKETA_BASEScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_BASE create
     */
    export type GA_ANKETA_BASECreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BASE
         */
        select?: GA_ANKETA_BASESelect<ExtArgs> | null
        /**
         * The data needed to create a GA_ANKETA_BASE.
         */
        data: XOR<GA_ANKETA_BASECreateInput, GA_ANKETA_BASEUncheckedCreateInput>
    }

    /**
     * GA_ANKETA_BASE createMany
     */
    export type GA_ANKETA_BASECreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_ANKETA_BASES.
         */
        data: GA_ANKETA_BASECreateManyInput | GA_ANKETA_BASECreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_ANKETA_BASE update
     */
    export type GA_ANKETA_BASEUpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BASE
         */
        select?: GA_ANKETA_BASESelect<ExtArgs> | null
        /**
         * The data needed to update a GA_ANKETA_BASE.
         */
        data: XOR<GA_ANKETA_BASEUpdateInput, GA_ANKETA_BASEUncheckedUpdateInput>
        /**
         * Choose, which GA_ANKETA_BASE to update.
         */
        where: GA_ANKETA_BASEWhereUniqueInput
    }

    /**
     * GA_ANKETA_BASE updateMany
     */
    export type GA_ANKETA_BASEUpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_ANKETA_BASES.
         */
        data: XOR<
            GA_ANKETA_BASEUpdateManyMutationInput,
            GA_ANKETA_BASEUncheckedUpdateManyInput
        >
        /**
         * Filter which GA_ANKETA_BASES to update
         */
        where?: GA_ANKETA_BASEWhereInput
    }

    /**
     * GA_ANKETA_BASE upsert
     */
    export type GA_ANKETA_BASEUpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BASE
         */
        select?: GA_ANKETA_BASESelect<ExtArgs> | null
        /**
         * The filter to search for the GA_ANKETA_BASE to update in case it exists.
         */
        where: GA_ANKETA_BASEWhereUniqueInput
        /**
         * In case the GA_ANKETA_BASE found by the `where` argument doesn't exist, create a new GA_ANKETA_BASE with this data.
         */
        create: XOR<
            GA_ANKETA_BASECreateInput,
            GA_ANKETA_BASEUncheckedCreateInput
        >
        /**
         * In case the GA_ANKETA_BASE was found with the provided `where` argument, update it with this data.
         */
        update: XOR<
            GA_ANKETA_BASEUpdateInput,
            GA_ANKETA_BASEUncheckedUpdateInput
        >
    }

    /**
     * GA_ANKETA_BASE delete
     */
    export type GA_ANKETA_BASEDeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BASE
         */
        select?: GA_ANKETA_BASESelect<ExtArgs> | null
        /**
         * Filter which GA_ANKETA_BASE to delete.
         */
        where: GA_ANKETA_BASEWhereUniqueInput
    }

    /**
     * GA_ANKETA_BASE deleteMany
     */
    export type GA_ANKETA_BASEDeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_BASES to delete
         */
        where?: GA_ANKETA_BASEWhereInput
    }

    /**
     * GA_ANKETA_BASE without action
     */
    export type GA_ANKETA_BASEDefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BASE
         */
        select?: GA_ANKETA_BASESelect<ExtArgs> | null
    }

    /**
     * Model GA_ANKETA_BILETS
     */

    export type AggregateGA_ANKETA_BILETS = {
        _count: GA_ANKETA_BILETSCountAggregateOutputType | null
        _avg: GA_ANKETA_BILETSAvgAggregateOutputType | null
        _sum: GA_ANKETA_BILETSSumAggregateOutputType | null
        _min: GA_ANKETA_BILETSMinAggregateOutputType | null
        _max: GA_ANKETA_BILETSMaxAggregateOutputType | null
    }

    export type GA_ANKETA_BILETSAvgAggregateOutputType = {
        BIL_WSU_ID: number | null
        BIL_ABA_ID: number | null
    }

    export type GA_ANKETA_BILETSSumAggregateOutputType = {
        BIL_WSU_ID: bigint | null
        BIL_ABA_ID: bigint | null
    }

    export type GA_ANKETA_BILETSMinAggregateOutputType = {
        BIL_INN: string | null
        BIL_LOGIN: string | null
        BIL_N1: string | null
        BIL_N2: string | null
        BIL_N3: string | null
        BIL_N4: string | null
        BIL_N5: string | null
        BIL_N6: string | null
        BIL_N7: string | null
        BIL_WSU_ID: bigint | null
        BIL_N8: string | null
        BIL_ABA_ID: bigint | null
        BIL_DATETIME: Date | null
    }

    export type GA_ANKETA_BILETSMaxAggregateOutputType = {
        BIL_INN: string | null
        BIL_LOGIN: string | null
        BIL_N1: string | null
        BIL_N2: string | null
        BIL_N3: string | null
        BIL_N4: string | null
        BIL_N5: string | null
        BIL_N6: string | null
        BIL_N7: string | null
        BIL_WSU_ID: bigint | null
        BIL_N8: string | null
        BIL_ABA_ID: bigint | null
        BIL_DATETIME: Date | null
    }

    export type GA_ANKETA_BILETSCountAggregateOutputType = {
        BIL_INN: number
        BIL_LOGIN: number
        BIL_N1: number
        BIL_N2: number
        BIL_N3: number
        BIL_N4: number
        BIL_N5: number
        BIL_N6: number
        BIL_N7: number
        BIL_WSU_ID: number
        BIL_N8: number
        BIL_ABA_ID: number
        BIL_DATETIME: number
        _all: number
    }

    export type GA_ANKETA_BILETSAvgAggregateInputType = {
        BIL_WSU_ID?: true
        BIL_ABA_ID?: true
    }

    export type GA_ANKETA_BILETSSumAggregateInputType = {
        BIL_WSU_ID?: true
        BIL_ABA_ID?: true
    }

    export type GA_ANKETA_BILETSMinAggregateInputType = {
        BIL_INN?: true
        BIL_LOGIN?: true
        BIL_N1?: true
        BIL_N2?: true
        BIL_N3?: true
        BIL_N4?: true
        BIL_N5?: true
        BIL_N6?: true
        BIL_N7?: true
        BIL_WSU_ID?: true
        BIL_N8?: true
        BIL_ABA_ID?: true
        BIL_DATETIME?: true
    }

    export type GA_ANKETA_BILETSMaxAggregateInputType = {
        BIL_INN?: true
        BIL_LOGIN?: true
        BIL_N1?: true
        BIL_N2?: true
        BIL_N3?: true
        BIL_N4?: true
        BIL_N5?: true
        BIL_N6?: true
        BIL_N7?: true
        BIL_WSU_ID?: true
        BIL_N8?: true
        BIL_ABA_ID?: true
        BIL_DATETIME?: true
    }

    export type GA_ANKETA_BILETSCountAggregateInputType = {
        BIL_INN?: true
        BIL_LOGIN?: true
        BIL_N1?: true
        BIL_N2?: true
        BIL_N3?: true
        BIL_N4?: true
        BIL_N5?: true
        BIL_N6?: true
        BIL_N7?: true
        BIL_WSU_ID?: true
        BIL_N8?: true
        BIL_ABA_ID?: true
        BIL_DATETIME?: true
        _all?: true
    }

    export type GA_ANKETA_BILETSAggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_BILETS to aggregate.
         */
        where?: GA_ANKETA_BILETSWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_BILETS to fetch.
         */
        orderBy?:
            | GA_ANKETA_BILETSOrderByWithRelationInput
            | GA_ANKETA_BILETSOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_ANKETA_BILETSWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_BILETS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_BILETS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_ANKETA_BILETS
         **/
        _count?: true | GA_ANKETA_BILETSCountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_ANKETA_BILETSAvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_ANKETA_BILETSSumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_ANKETA_BILETSMinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_ANKETA_BILETSMaxAggregateInputType
    }

    export type GetGA_ANKETA_BILETSAggregateType<
        T extends GA_ANKETA_BILETSAggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_ANKETA_BILETS]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_ANKETA_BILETS[P]>
            : GetScalarType<T[P], AggregateGA_ANKETA_BILETS[P]>
    }

    export type GA_ANKETA_BILETSGroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_ANKETA_BILETSWhereInput
        orderBy?:
            | GA_ANKETA_BILETSOrderByWithAggregationInput
            | GA_ANKETA_BILETSOrderByWithAggregationInput[]
        by: GA_ANKETA_BILETSScalarFieldEnum[] | GA_ANKETA_BILETSScalarFieldEnum
        having?: GA_ANKETA_BILETSScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_ANKETA_BILETSCountAggregateInputType | true
        _avg?: GA_ANKETA_BILETSAvgAggregateInputType
        _sum?: GA_ANKETA_BILETSSumAggregateInputType
        _min?: GA_ANKETA_BILETSMinAggregateInputType
        _max?: GA_ANKETA_BILETSMaxAggregateInputType
    }

    export type GA_ANKETA_BILETSGroupByOutputType = {
        BIL_INN: string
        BIL_LOGIN: string
        BIL_N1: string
        BIL_N2: string
        BIL_N3: string
        BIL_N4: string
        BIL_N5: string
        BIL_N6: string
        BIL_N7: string
        BIL_WSU_ID: bigint
        BIL_N8: string
        BIL_ABA_ID: bigint
        BIL_DATETIME: Date
        _count: GA_ANKETA_BILETSCountAggregateOutputType | null
        _avg: GA_ANKETA_BILETSAvgAggregateOutputType | null
        _sum: GA_ANKETA_BILETSSumAggregateOutputType | null
        _min: GA_ANKETA_BILETSMinAggregateOutputType | null
        _max: GA_ANKETA_BILETSMaxAggregateOutputType | null
    }

    type GetGA_ANKETA_BILETSGroupByPayload<
        T extends GA_ANKETA_BILETSGroupByArgs,
    > = Prisma.PrismaPromise<
        Array<
            PickEnumerable<GA_ANKETA_BILETSGroupByOutputType, T['by']> & {
                [P in keyof T &
                    keyof GA_ANKETA_BILETSGroupByOutputType]: P extends '_count'
                    ? T[P] extends boolean
                        ? number
                        : GetScalarType<
                              T[P],
                              GA_ANKETA_BILETSGroupByOutputType[P]
                          >
                    : GetScalarType<T[P], GA_ANKETA_BILETSGroupByOutputType[P]>
            }
        >
    >

    export type GA_ANKETA_BILETSSelect<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            BIL_INN?: boolean
            BIL_LOGIN?: boolean
            BIL_N1?: boolean
            BIL_N2?: boolean
            BIL_N3?: boolean
            BIL_N4?: boolean
            BIL_N5?: boolean
            BIL_N6?: boolean
            BIL_N7?: boolean
            BIL_WSU_ID?: boolean
            BIL_N8?: boolean
            BIL_ABA_ID?: boolean
            BIL_DATETIME?: boolean
        },
        ExtArgs['result']['gA_ANKETA_BILETS']
    >

    export type GA_ANKETA_BILETSSelectScalar = {
        BIL_INN?: boolean
        BIL_LOGIN?: boolean
        BIL_N1?: boolean
        BIL_N2?: boolean
        BIL_N3?: boolean
        BIL_N4?: boolean
        BIL_N5?: boolean
        BIL_N6?: boolean
        BIL_N7?: boolean
        BIL_WSU_ID?: boolean
        BIL_N8?: boolean
        BIL_ABA_ID?: boolean
        BIL_DATETIME?: boolean
    }

    export type $GA_ANKETA_BILETSPayload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_ANKETA_BILETS'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                BIL_INN: string
                BIL_LOGIN: string
                BIL_N1: string
                BIL_N2: string
                BIL_N3: string
                BIL_N4: string
                BIL_N5: string
                BIL_N6: string
                BIL_N7: string
                BIL_WSU_ID: bigint
                BIL_N8: string
                BIL_ABA_ID: bigint
                BIL_DATETIME: Date
            },
            ExtArgs['result']['gA_ANKETA_BILETS']
        >
        composites: {}
    }

    type GA_ANKETA_BILETSGetPayload<
        S extends boolean | null | undefined | GA_ANKETA_BILETSDefaultArgs,
    > = $Result.GetResult<Prisma.$GA_ANKETA_BILETSPayload, S>

    type GA_ANKETA_BILETSCountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<
        GA_ANKETA_BILETSFindManyArgs,
        'select' | 'include' | 'distinct'
    > & {
        select?: GA_ANKETA_BILETSCountAggregateInputType | true
    }

    export interface GA_ANKETA_BILETSDelegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_ANKETA_BILETS']
            meta: { name: 'GA_ANKETA_BILETS' }
        }
        /**
         * Find zero or one GA_ANKETA_BILETS that matches the filter.
         * @param {GA_ANKETA_BILETSFindUniqueArgs} args - Arguments to find a GA_ANKETA_BILETS
         * @example
         * // Get one GA_ANKETA_BILETS
         * const gA_ANKETA_BILETS = await prisma.gA_ANKETA_BILETS.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_ANKETA_BILETSFindUniqueArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BILETSFindUniqueArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BILETSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BILETSPayload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_ANKETA_BILETS that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_ANKETA_BILETSFindUniqueOrThrowArgs} args - Arguments to find a GA_ANKETA_BILETS
         * @example
         * // Get one GA_ANKETA_BILETS
         * const gA_ANKETA_BILETS = await prisma.gA_ANKETA_BILETS.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_ANKETA_BILETSFindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_BILETSFindUniqueOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_BILETSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BILETSPayload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_BILETS that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BILETSFindFirstArgs} args - Arguments to find a GA_ANKETA_BILETS
         * @example
         * // Get one GA_ANKETA_BILETS
         * const gA_ANKETA_BILETS = await prisma.gA_ANKETA_BILETS.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_ANKETA_BILETSFindFirstArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_BILETSFindFirstArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BILETSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BILETSPayload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_BILETS that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BILETSFindFirstOrThrowArgs} args - Arguments to find a GA_ANKETA_BILETS
         * @example
         * // Get one GA_ANKETA_BILETS
         * const gA_ANKETA_BILETS = await prisma.gA_ANKETA_BILETS.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<
            T extends GA_ANKETA_BILETSFindFirstOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_BILETSFindFirstOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_BILETSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BILETSPayload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_ANKETA_BILETS that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BILETSFindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_ANKETA_BILETS
         * const gA_ANKETA_BILETS = await prisma.gA_ANKETA_BILETS.findMany()
         *
         * // Get first 10 GA_ANKETA_BILETS
         * const gA_ANKETA_BILETS = await prisma.gA_ANKETA_BILETS.findMany({ take: 10 })
         *
         * // Only select the `BIL_INN`
         * const gA_ANKETA_BILETSWithBIL_INNOnly = await prisma.gA_ANKETA_BILETS.findMany({ select: { BIL_INN: true } })
         *
         **/
        findMany<T extends GA_ANKETA_BILETSFindManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_BILETSFindManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BILETSPayload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_ANKETA_BILETS.
         * @param {GA_ANKETA_BILETSCreateArgs} args - Arguments to create a GA_ANKETA_BILETS.
         * @example
         * // Create one GA_ANKETA_BILETS
         * const GA_ANKETA_BILETS = await prisma.gA_ANKETA_BILETS.create({
         *   data: {
         *     // ... data to create a GA_ANKETA_BILETS
         *   }
         * })
         *
         **/
        create<T extends GA_ANKETA_BILETSCreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BILETSCreateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BILETSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BILETSPayload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_ANKETA_BILETS.
         *     @param {GA_ANKETA_BILETSCreateManyArgs} args - Arguments to create many GA_ANKETA_BILETS.
         *     @example
         *     // Create many GA_ANKETA_BILETS
         *     const gA_ANKETA_BILETS = await prisma.gA_ANKETA_BILETS.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_ANKETA_BILETSCreateManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_BILETSCreateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_ANKETA_BILETS.
         * @param {GA_ANKETA_BILETSDeleteArgs} args - Arguments to delete one GA_ANKETA_BILETS.
         * @example
         * // Delete one GA_ANKETA_BILETS
         * const GA_ANKETA_BILETS = await prisma.gA_ANKETA_BILETS.delete({
         *   where: {
         *     // ... filter to delete one GA_ANKETA_BILETS
         *   }
         * })
         *
         **/
        delete<T extends GA_ANKETA_BILETSDeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BILETSDeleteArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BILETSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BILETSPayload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_ANKETA_BILETS.
         * @param {GA_ANKETA_BILETSUpdateArgs} args - Arguments to update one GA_ANKETA_BILETS.
         * @example
         * // Update one GA_ANKETA_BILETS
         * const gA_ANKETA_BILETS = await prisma.gA_ANKETA_BILETS.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_ANKETA_BILETSUpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BILETSUpdateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BILETSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BILETSPayload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_ANKETA_BILETS.
         * @param {GA_ANKETA_BILETSDeleteManyArgs} args - Arguments to filter GA_ANKETA_BILETS to delete.
         * @example
         * // Delete a few GA_ANKETA_BILETS
         * const { count } = await prisma.gA_ANKETA_BILETS.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_ANKETA_BILETSDeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_BILETSDeleteManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_ANKETA_BILETS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BILETSUpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_ANKETA_BILETS
         * const gA_ANKETA_BILETS = await prisma.gA_ANKETA_BILETS.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_ANKETA_BILETSUpdateManyArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BILETSUpdateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_ANKETA_BILETS.
         * @param {GA_ANKETA_BILETSUpsertArgs} args - Arguments to update or create a GA_ANKETA_BILETS.
         * @example
         * // Update or create a GA_ANKETA_BILETS
         * const gA_ANKETA_BILETS = await prisma.gA_ANKETA_BILETS.upsert({
         *   create: {
         *     // ... data to create a GA_ANKETA_BILETS
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_ANKETA_BILETS we want to update
         *   }
         * })
         **/
        upsert<T extends GA_ANKETA_BILETSUpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BILETSUpsertArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BILETSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BILETSPayload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_ANKETA_BILETS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BILETSCountArgs} args - Arguments to filter GA_ANKETA_BILETS to count.
         * @example
         * // Count the number of GA_ANKETA_BILETS
         * const count = await prisma.gA_ANKETA_BILETS.count({
         *   where: {
         *     // ... the filter for the GA_ANKETA_BILETS we want to count
         *   }
         * })
         **/
        count<T extends GA_ANKETA_BILETSCountArgs>(
            args?: Subset<T, GA_ANKETA_BILETSCountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_ANKETA_BILETSCountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_ANKETA_BILETS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BILETSAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_ANKETA_BILETSAggregateArgs>(
            args: Subset<T, GA_ANKETA_BILETSAggregateArgs>
        ): Prisma.PrismaPromise<GetGA_ANKETA_BILETSAggregateType<T>>

        /**
         * Group by GA_ANKETA_BILETS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BILETSGroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_ANKETA_BILETSGroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_ANKETA_BILETSGroupByArgs['orderBy'] }
                : { orderBy?: GA_ANKETA_BILETSGroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<
                T,
                GA_ANKETA_BILETSGroupByArgs,
                OrderByArg
            > &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_ANKETA_BILETSGroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_ANKETA_BILETS model
         */
        readonly fields: GA_ANKETA_BILETSFieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_ANKETA_BILETS.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_ANKETA_BILETSClient<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_ANKETA_BILETS model
     */
    interface GA_ANKETA_BILETSFieldRefs {
        readonly BIL_INN: FieldRef<'GA_ANKETA_BILETS', 'String'>
        readonly BIL_LOGIN: FieldRef<'GA_ANKETA_BILETS', 'String'>
        readonly BIL_N1: FieldRef<'GA_ANKETA_BILETS', 'String'>
        readonly BIL_N2: FieldRef<'GA_ANKETA_BILETS', 'String'>
        readonly BIL_N3: FieldRef<'GA_ANKETA_BILETS', 'String'>
        readonly BIL_N4: FieldRef<'GA_ANKETA_BILETS', 'String'>
        readonly BIL_N5: FieldRef<'GA_ANKETA_BILETS', 'String'>
        readonly BIL_N6: FieldRef<'GA_ANKETA_BILETS', 'String'>
        readonly BIL_N7: FieldRef<'GA_ANKETA_BILETS', 'String'>
        readonly BIL_WSU_ID: FieldRef<'GA_ANKETA_BILETS', 'BigInt'>
        readonly BIL_N8: FieldRef<'GA_ANKETA_BILETS', 'String'>
        readonly BIL_ABA_ID: FieldRef<'GA_ANKETA_BILETS', 'BigInt'>
        readonly BIL_DATETIME: FieldRef<'GA_ANKETA_BILETS', 'DateTime'>
    }

    // Custom InputTypes

    /**
     * GA_ANKETA_BILETS findUnique
     */
    export type GA_ANKETA_BILETSFindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BILETS
         */
        select?: GA_ANKETA_BILETSSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_BILETS to fetch.
         */
        where: GA_ANKETA_BILETSWhereUniqueInput
    }

    /**
     * GA_ANKETA_BILETS findUniqueOrThrow
     */
    export type GA_ANKETA_BILETSFindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BILETS
         */
        select?: GA_ANKETA_BILETSSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_BILETS to fetch.
         */
        where: GA_ANKETA_BILETSWhereUniqueInput
    }

    /**
     * GA_ANKETA_BILETS findFirst
     */
    export type GA_ANKETA_BILETSFindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BILETS
         */
        select?: GA_ANKETA_BILETSSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_BILETS to fetch.
         */
        where?: GA_ANKETA_BILETSWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_BILETS to fetch.
         */
        orderBy?:
            | GA_ANKETA_BILETSOrderByWithRelationInput
            | GA_ANKETA_BILETSOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_BILETS.
         */
        cursor?: GA_ANKETA_BILETSWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_BILETS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_BILETS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_BILETS.
         */
        distinct?:
            | GA_ANKETA_BILETSScalarFieldEnum
            | GA_ANKETA_BILETSScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_BILETS findFirstOrThrow
     */
    export type GA_ANKETA_BILETSFindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BILETS
         */
        select?: GA_ANKETA_BILETSSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_BILETS to fetch.
         */
        where?: GA_ANKETA_BILETSWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_BILETS to fetch.
         */
        orderBy?:
            | GA_ANKETA_BILETSOrderByWithRelationInput
            | GA_ANKETA_BILETSOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_BILETS.
         */
        cursor?: GA_ANKETA_BILETSWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_BILETS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_BILETS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_BILETS.
         */
        distinct?:
            | GA_ANKETA_BILETSScalarFieldEnum
            | GA_ANKETA_BILETSScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_BILETS findMany
     */
    export type GA_ANKETA_BILETSFindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BILETS
         */
        select?: GA_ANKETA_BILETSSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_BILETS to fetch.
         */
        where?: GA_ANKETA_BILETSWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_BILETS to fetch.
         */
        orderBy?:
            | GA_ANKETA_BILETSOrderByWithRelationInput
            | GA_ANKETA_BILETSOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_ANKETA_BILETS.
         */
        cursor?: GA_ANKETA_BILETSWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_BILETS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_BILETS.
         */
        skip?: number
        distinct?:
            | GA_ANKETA_BILETSScalarFieldEnum
            | GA_ANKETA_BILETSScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_BILETS create
     */
    export type GA_ANKETA_BILETSCreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BILETS
         */
        select?: GA_ANKETA_BILETSSelect<ExtArgs> | null
        /**
         * The data needed to create a GA_ANKETA_BILETS.
         */
        data: XOR<
            GA_ANKETA_BILETSCreateInput,
            GA_ANKETA_BILETSUncheckedCreateInput
        >
    }

    /**
     * GA_ANKETA_BILETS createMany
     */
    export type GA_ANKETA_BILETSCreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_ANKETA_BILETS.
         */
        data:
            | GA_ANKETA_BILETSCreateManyInput
            | GA_ANKETA_BILETSCreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_ANKETA_BILETS update
     */
    export type GA_ANKETA_BILETSUpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BILETS
         */
        select?: GA_ANKETA_BILETSSelect<ExtArgs> | null
        /**
         * The data needed to update a GA_ANKETA_BILETS.
         */
        data: XOR<
            GA_ANKETA_BILETSUpdateInput,
            GA_ANKETA_BILETSUncheckedUpdateInput
        >
        /**
         * Choose, which GA_ANKETA_BILETS to update.
         */
        where: GA_ANKETA_BILETSWhereUniqueInput
    }

    /**
     * GA_ANKETA_BILETS updateMany
     */
    export type GA_ANKETA_BILETSUpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_ANKETA_BILETS.
         */
        data: XOR<
            GA_ANKETA_BILETSUpdateManyMutationInput,
            GA_ANKETA_BILETSUncheckedUpdateManyInput
        >
        /**
         * Filter which GA_ANKETA_BILETS to update
         */
        where?: GA_ANKETA_BILETSWhereInput
    }

    /**
     * GA_ANKETA_BILETS upsert
     */
    export type GA_ANKETA_BILETSUpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BILETS
         */
        select?: GA_ANKETA_BILETSSelect<ExtArgs> | null
        /**
         * The filter to search for the GA_ANKETA_BILETS to update in case it exists.
         */
        where: GA_ANKETA_BILETSWhereUniqueInput
        /**
         * In case the GA_ANKETA_BILETS found by the `where` argument doesn't exist, create a new GA_ANKETA_BILETS with this data.
         */
        create: XOR<
            GA_ANKETA_BILETSCreateInput,
            GA_ANKETA_BILETSUncheckedCreateInput
        >
        /**
         * In case the GA_ANKETA_BILETS was found with the provided `where` argument, update it with this data.
         */
        update: XOR<
            GA_ANKETA_BILETSUpdateInput,
            GA_ANKETA_BILETSUncheckedUpdateInput
        >
    }

    /**
     * GA_ANKETA_BILETS delete
     */
    export type GA_ANKETA_BILETSDeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BILETS
         */
        select?: GA_ANKETA_BILETSSelect<ExtArgs> | null
        /**
         * Filter which GA_ANKETA_BILETS to delete.
         */
        where: GA_ANKETA_BILETSWhereUniqueInput
    }

    /**
     * GA_ANKETA_BILETS deleteMany
     */
    export type GA_ANKETA_BILETSDeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_BILETS to delete
         */
        where?: GA_ANKETA_BILETSWhereInput
    }

    /**
     * GA_ANKETA_BILETS without action
     */
    export type GA_ANKETA_BILETSDefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BILETS
         */
        select?: GA_ANKETA_BILETSSelect<ExtArgs> | null
    }

    /**
     * Model GA_ANKETA_BRAND_IMG
     */

    export type AggregateGA_ANKETA_BRAND_IMG = {
        _count: GA_ANKETA_BRAND_IMGCountAggregateOutputType | null
        _avg: GA_ANKETA_BRAND_IMGAvgAggregateOutputType | null
        _sum: GA_ANKETA_BRAND_IMGSumAggregateOutputType | null
        _min: GA_ANKETA_BRAND_IMGMinAggregateOutputType | null
        _max: GA_ANKETA_BRAND_IMGMaxAggregateOutputType | null
    }

    export type GA_ANKETA_BRAND_IMGAvgAggregateOutputType = {
        ABI_ABA_ID: number | null
        ABI_NUM: number | null
    }

    export type GA_ANKETA_BRAND_IMGSumAggregateOutputType = {
        ABI_ABA_ID: bigint | null
        ABI_NUM: number | null
    }

    export type GA_ANKETA_BRAND_IMGMinAggregateOutputType = {
        ABI_ABA_ID: bigint | null
        ABI_NUM: number | null
        ABI_NAME: string | null
        ABI_PATH: string | null
    }

    export type GA_ANKETA_BRAND_IMGMaxAggregateOutputType = {
        ABI_ABA_ID: bigint | null
        ABI_NUM: number | null
        ABI_NAME: string | null
        ABI_PATH: string | null
    }

    export type GA_ANKETA_BRAND_IMGCountAggregateOutputType = {
        ABI_ABA_ID: number
        ABI_NUM: number
        ABI_NAME: number
        ABI_PATH: number
        _all: number
    }

    export type GA_ANKETA_BRAND_IMGAvgAggregateInputType = {
        ABI_ABA_ID?: true
        ABI_NUM?: true
    }

    export type GA_ANKETA_BRAND_IMGSumAggregateInputType = {
        ABI_ABA_ID?: true
        ABI_NUM?: true
    }

    export type GA_ANKETA_BRAND_IMGMinAggregateInputType = {
        ABI_ABA_ID?: true
        ABI_NUM?: true
        ABI_NAME?: true
        ABI_PATH?: true
    }

    export type GA_ANKETA_BRAND_IMGMaxAggregateInputType = {
        ABI_ABA_ID?: true
        ABI_NUM?: true
        ABI_NAME?: true
        ABI_PATH?: true
    }

    export type GA_ANKETA_BRAND_IMGCountAggregateInputType = {
        ABI_ABA_ID?: true
        ABI_NUM?: true
        ABI_NAME?: true
        ABI_PATH?: true
        _all?: true
    }

    export type GA_ANKETA_BRAND_IMGAggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_BRAND_IMG to aggregate.
         */
        where?: GA_ANKETA_BRAND_IMGWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_BRAND_IMGS to fetch.
         */
        orderBy?:
            | GA_ANKETA_BRAND_IMGOrderByWithRelationInput
            | GA_ANKETA_BRAND_IMGOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_ANKETA_BRAND_IMGWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_BRAND_IMGS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_BRAND_IMGS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_ANKETA_BRAND_IMGS
         **/
        _count?: true | GA_ANKETA_BRAND_IMGCountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_ANKETA_BRAND_IMGAvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_ANKETA_BRAND_IMGSumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_ANKETA_BRAND_IMGMinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_ANKETA_BRAND_IMGMaxAggregateInputType
    }

    export type GetGA_ANKETA_BRAND_IMGAggregateType<
        T extends GA_ANKETA_BRAND_IMGAggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_ANKETA_BRAND_IMG]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_ANKETA_BRAND_IMG[P]>
            : GetScalarType<T[P], AggregateGA_ANKETA_BRAND_IMG[P]>
    }

    export type GA_ANKETA_BRAND_IMGGroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_ANKETA_BRAND_IMGWhereInput
        orderBy?:
            | GA_ANKETA_BRAND_IMGOrderByWithAggregationInput
            | GA_ANKETA_BRAND_IMGOrderByWithAggregationInput[]
        by:
            | GA_ANKETA_BRAND_IMGScalarFieldEnum[]
            | GA_ANKETA_BRAND_IMGScalarFieldEnum
        having?: GA_ANKETA_BRAND_IMGScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_ANKETA_BRAND_IMGCountAggregateInputType | true
        _avg?: GA_ANKETA_BRAND_IMGAvgAggregateInputType
        _sum?: GA_ANKETA_BRAND_IMGSumAggregateInputType
        _min?: GA_ANKETA_BRAND_IMGMinAggregateInputType
        _max?: GA_ANKETA_BRAND_IMGMaxAggregateInputType
    }

    export type GA_ANKETA_BRAND_IMGGroupByOutputType = {
        ABI_ABA_ID: bigint
        ABI_NUM: number
        ABI_NAME: string
        ABI_PATH: string
        _count: GA_ANKETA_BRAND_IMGCountAggregateOutputType | null
        _avg: GA_ANKETA_BRAND_IMGAvgAggregateOutputType | null
        _sum: GA_ANKETA_BRAND_IMGSumAggregateOutputType | null
        _min: GA_ANKETA_BRAND_IMGMinAggregateOutputType | null
        _max: GA_ANKETA_BRAND_IMGMaxAggregateOutputType | null
    }

    type GetGA_ANKETA_BRAND_IMGGroupByPayload<
        T extends GA_ANKETA_BRAND_IMGGroupByArgs,
    > = Prisma.PrismaPromise<
        Array<
            PickEnumerable<GA_ANKETA_BRAND_IMGGroupByOutputType, T['by']> & {
                [P in keyof T &
                    keyof GA_ANKETA_BRAND_IMGGroupByOutputType]: P extends '_count'
                    ? T[P] extends boolean
                        ? number
                        : GetScalarType<
                              T[P],
                              GA_ANKETA_BRAND_IMGGroupByOutputType[P]
                          >
                    : GetScalarType<
                          T[P],
                          GA_ANKETA_BRAND_IMGGroupByOutputType[P]
                      >
            }
        >
    >

    export type GA_ANKETA_BRAND_IMGSelect<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            ABI_ABA_ID?: boolean
            ABI_NUM?: boolean
            ABI_NAME?: boolean
            ABI_PATH?: boolean
        },
        ExtArgs['result']['gA_ANKETA_BRAND_IMG']
    >

    export type GA_ANKETA_BRAND_IMGSelectScalar = {
        ABI_ABA_ID?: boolean
        ABI_NUM?: boolean
        ABI_NAME?: boolean
        ABI_PATH?: boolean
    }

    export type $GA_ANKETA_BRAND_IMGPayload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_ANKETA_BRAND_IMG'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                ABI_ABA_ID: bigint
                ABI_NUM: number
                ABI_NAME: string
                ABI_PATH: string
            },
            ExtArgs['result']['gA_ANKETA_BRAND_IMG']
        >
        composites: {}
    }

    type GA_ANKETA_BRAND_IMGGetPayload<
        S extends boolean | null | undefined | GA_ANKETA_BRAND_IMGDefaultArgs,
    > = $Result.GetResult<Prisma.$GA_ANKETA_BRAND_IMGPayload, S>

    type GA_ANKETA_BRAND_IMGCountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<
        GA_ANKETA_BRAND_IMGFindManyArgs,
        'select' | 'include' | 'distinct'
    > & {
        select?: GA_ANKETA_BRAND_IMGCountAggregateInputType | true
    }

    export interface GA_ANKETA_BRAND_IMGDelegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_ANKETA_BRAND_IMG']
            meta: { name: 'GA_ANKETA_BRAND_IMG' }
        }
        /**
         * Find zero or one GA_ANKETA_BRAND_IMG that matches the filter.
         * @param {GA_ANKETA_BRAND_IMGFindUniqueArgs} args - Arguments to find a GA_ANKETA_BRAND_IMG
         * @example
         * // Get one GA_ANKETA_BRAND_IMG
         * const gA_ANKETA_BRAND_IMG = await prisma.gA_ANKETA_BRAND_IMG.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_ANKETA_BRAND_IMGFindUniqueArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BRAND_IMGFindUniqueArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BRAND_IMGClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BRAND_IMGPayload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_ANKETA_BRAND_IMG that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_ANKETA_BRAND_IMGFindUniqueOrThrowArgs} args - Arguments to find a GA_ANKETA_BRAND_IMG
         * @example
         * // Get one GA_ANKETA_BRAND_IMG
         * const gA_ANKETA_BRAND_IMG = await prisma.gA_ANKETA_BRAND_IMG.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_ANKETA_BRAND_IMGFindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_BRAND_IMGFindUniqueOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_BRAND_IMGClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BRAND_IMGPayload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_BRAND_IMG that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BRAND_IMGFindFirstArgs} args - Arguments to find a GA_ANKETA_BRAND_IMG
         * @example
         * // Get one GA_ANKETA_BRAND_IMG
         * const gA_ANKETA_BRAND_IMG = await prisma.gA_ANKETA_BRAND_IMG.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_ANKETA_BRAND_IMGFindFirstArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_BRAND_IMGFindFirstArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BRAND_IMGClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BRAND_IMGPayload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_BRAND_IMG that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BRAND_IMGFindFirstOrThrowArgs} args - Arguments to find a GA_ANKETA_BRAND_IMG
         * @example
         * // Get one GA_ANKETA_BRAND_IMG
         * const gA_ANKETA_BRAND_IMG = await prisma.gA_ANKETA_BRAND_IMG.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<
            T extends GA_ANKETA_BRAND_IMGFindFirstOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_BRAND_IMGFindFirstOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_BRAND_IMGClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BRAND_IMGPayload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_ANKETA_BRAND_IMGS that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BRAND_IMGFindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_ANKETA_BRAND_IMGS
         * const gA_ANKETA_BRAND_IMGS = await prisma.gA_ANKETA_BRAND_IMG.findMany()
         *
         * // Get first 10 GA_ANKETA_BRAND_IMGS
         * const gA_ANKETA_BRAND_IMGS = await prisma.gA_ANKETA_BRAND_IMG.findMany({ take: 10 })
         *
         * // Only select the `ABI_ABA_ID`
         * const gA_ANKETA_BRAND_IMGWithABI_ABA_IDOnly = await prisma.gA_ANKETA_BRAND_IMG.findMany({ select: { ABI_ABA_ID: true } })
         *
         **/
        findMany<T extends GA_ANKETA_BRAND_IMGFindManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_BRAND_IMGFindManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BRAND_IMGPayload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_ANKETA_BRAND_IMG.
         * @param {GA_ANKETA_BRAND_IMGCreateArgs} args - Arguments to create a GA_ANKETA_BRAND_IMG.
         * @example
         * // Create one GA_ANKETA_BRAND_IMG
         * const GA_ANKETA_BRAND_IMG = await prisma.gA_ANKETA_BRAND_IMG.create({
         *   data: {
         *     // ... data to create a GA_ANKETA_BRAND_IMG
         *   }
         * })
         *
         **/
        create<T extends GA_ANKETA_BRAND_IMGCreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BRAND_IMGCreateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BRAND_IMGClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BRAND_IMGPayload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_ANKETA_BRAND_IMGS.
         *     @param {GA_ANKETA_BRAND_IMGCreateManyArgs} args - Arguments to create many GA_ANKETA_BRAND_IMGS.
         *     @example
         *     // Create many GA_ANKETA_BRAND_IMGS
         *     const gA_ANKETA_BRAND_IMG = await prisma.gA_ANKETA_BRAND_IMG.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_ANKETA_BRAND_IMGCreateManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_BRAND_IMGCreateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_ANKETA_BRAND_IMG.
         * @param {GA_ANKETA_BRAND_IMGDeleteArgs} args - Arguments to delete one GA_ANKETA_BRAND_IMG.
         * @example
         * // Delete one GA_ANKETA_BRAND_IMG
         * const GA_ANKETA_BRAND_IMG = await prisma.gA_ANKETA_BRAND_IMG.delete({
         *   where: {
         *     // ... filter to delete one GA_ANKETA_BRAND_IMG
         *   }
         * })
         *
         **/
        delete<T extends GA_ANKETA_BRAND_IMGDeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BRAND_IMGDeleteArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BRAND_IMGClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BRAND_IMGPayload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_ANKETA_BRAND_IMG.
         * @param {GA_ANKETA_BRAND_IMGUpdateArgs} args - Arguments to update one GA_ANKETA_BRAND_IMG.
         * @example
         * // Update one GA_ANKETA_BRAND_IMG
         * const gA_ANKETA_BRAND_IMG = await prisma.gA_ANKETA_BRAND_IMG.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_ANKETA_BRAND_IMGUpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BRAND_IMGUpdateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BRAND_IMGClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BRAND_IMGPayload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_ANKETA_BRAND_IMGS.
         * @param {GA_ANKETA_BRAND_IMGDeleteManyArgs} args - Arguments to filter GA_ANKETA_BRAND_IMGS to delete.
         * @example
         * // Delete a few GA_ANKETA_BRAND_IMGS
         * const { count } = await prisma.gA_ANKETA_BRAND_IMG.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_ANKETA_BRAND_IMGDeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_BRAND_IMGDeleteManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_ANKETA_BRAND_IMGS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BRAND_IMGUpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_ANKETA_BRAND_IMGS
         * const gA_ANKETA_BRAND_IMG = await prisma.gA_ANKETA_BRAND_IMG.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_ANKETA_BRAND_IMGUpdateManyArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BRAND_IMGUpdateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_ANKETA_BRAND_IMG.
         * @param {GA_ANKETA_BRAND_IMGUpsertArgs} args - Arguments to update or create a GA_ANKETA_BRAND_IMG.
         * @example
         * // Update or create a GA_ANKETA_BRAND_IMG
         * const gA_ANKETA_BRAND_IMG = await prisma.gA_ANKETA_BRAND_IMG.upsert({
         *   create: {
         *     // ... data to create a GA_ANKETA_BRAND_IMG
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_ANKETA_BRAND_IMG we want to update
         *   }
         * })
         **/
        upsert<T extends GA_ANKETA_BRAND_IMGUpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_BRAND_IMGUpsertArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_BRAND_IMGClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_BRAND_IMGPayload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_ANKETA_BRAND_IMGS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BRAND_IMGCountArgs} args - Arguments to filter GA_ANKETA_BRAND_IMGS to count.
         * @example
         * // Count the number of GA_ANKETA_BRAND_IMGS
         * const count = await prisma.gA_ANKETA_BRAND_IMG.count({
         *   where: {
         *     // ... the filter for the GA_ANKETA_BRAND_IMGS we want to count
         *   }
         * })
         **/
        count<T extends GA_ANKETA_BRAND_IMGCountArgs>(
            args?: Subset<T, GA_ANKETA_BRAND_IMGCountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_ANKETA_BRAND_IMGCountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_ANKETA_BRAND_IMG.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BRAND_IMGAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_ANKETA_BRAND_IMGAggregateArgs>(
            args: Subset<T, GA_ANKETA_BRAND_IMGAggregateArgs>
        ): Prisma.PrismaPromise<GetGA_ANKETA_BRAND_IMGAggregateType<T>>

        /**
         * Group by GA_ANKETA_BRAND_IMG.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_BRAND_IMGGroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_ANKETA_BRAND_IMGGroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_ANKETA_BRAND_IMGGroupByArgs['orderBy'] }
                : { orderBy?: GA_ANKETA_BRAND_IMGGroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<
                T,
                GA_ANKETA_BRAND_IMGGroupByArgs,
                OrderByArg
            > &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_ANKETA_BRAND_IMGGroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_ANKETA_BRAND_IMG model
         */
        readonly fields: GA_ANKETA_BRAND_IMGFieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_ANKETA_BRAND_IMG.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_ANKETA_BRAND_IMGClient<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_ANKETA_BRAND_IMG model
     */
    interface GA_ANKETA_BRAND_IMGFieldRefs {
        readonly ABI_ABA_ID: FieldRef<'GA_ANKETA_BRAND_IMG', 'BigInt'>
        readonly ABI_NUM: FieldRef<'GA_ANKETA_BRAND_IMG', 'Int'>
        readonly ABI_NAME: FieldRef<'GA_ANKETA_BRAND_IMG', 'String'>
        readonly ABI_PATH: FieldRef<'GA_ANKETA_BRAND_IMG', 'String'>
    }

    // Custom InputTypes

    /**
     * GA_ANKETA_BRAND_IMG findUnique
     */
    export type GA_ANKETA_BRAND_IMGFindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BRAND_IMG
         */
        select?: GA_ANKETA_BRAND_IMGSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_BRAND_IMG to fetch.
         */
        where: GA_ANKETA_BRAND_IMGWhereUniqueInput
    }

    /**
     * GA_ANKETA_BRAND_IMG findUniqueOrThrow
     */
    export type GA_ANKETA_BRAND_IMGFindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BRAND_IMG
         */
        select?: GA_ANKETA_BRAND_IMGSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_BRAND_IMG to fetch.
         */
        where: GA_ANKETA_BRAND_IMGWhereUniqueInput
    }

    /**
     * GA_ANKETA_BRAND_IMG findFirst
     */
    export type GA_ANKETA_BRAND_IMGFindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BRAND_IMG
         */
        select?: GA_ANKETA_BRAND_IMGSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_BRAND_IMG to fetch.
         */
        where?: GA_ANKETA_BRAND_IMGWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_BRAND_IMGS to fetch.
         */
        orderBy?:
            | GA_ANKETA_BRAND_IMGOrderByWithRelationInput
            | GA_ANKETA_BRAND_IMGOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_BRAND_IMGS.
         */
        cursor?: GA_ANKETA_BRAND_IMGWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_BRAND_IMGS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_BRAND_IMGS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_BRAND_IMGS.
         */
        distinct?:
            | GA_ANKETA_BRAND_IMGScalarFieldEnum
            | GA_ANKETA_BRAND_IMGScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_BRAND_IMG findFirstOrThrow
     */
    export type GA_ANKETA_BRAND_IMGFindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BRAND_IMG
         */
        select?: GA_ANKETA_BRAND_IMGSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_BRAND_IMG to fetch.
         */
        where?: GA_ANKETA_BRAND_IMGWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_BRAND_IMGS to fetch.
         */
        orderBy?:
            | GA_ANKETA_BRAND_IMGOrderByWithRelationInput
            | GA_ANKETA_BRAND_IMGOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_BRAND_IMGS.
         */
        cursor?: GA_ANKETA_BRAND_IMGWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_BRAND_IMGS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_BRAND_IMGS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_BRAND_IMGS.
         */
        distinct?:
            | GA_ANKETA_BRAND_IMGScalarFieldEnum
            | GA_ANKETA_BRAND_IMGScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_BRAND_IMG findMany
     */
    export type GA_ANKETA_BRAND_IMGFindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BRAND_IMG
         */
        select?: GA_ANKETA_BRAND_IMGSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_BRAND_IMGS to fetch.
         */
        where?: GA_ANKETA_BRAND_IMGWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_BRAND_IMGS to fetch.
         */
        orderBy?:
            | GA_ANKETA_BRAND_IMGOrderByWithRelationInput
            | GA_ANKETA_BRAND_IMGOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_ANKETA_BRAND_IMGS.
         */
        cursor?: GA_ANKETA_BRAND_IMGWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_BRAND_IMGS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_BRAND_IMGS.
         */
        skip?: number
        distinct?:
            | GA_ANKETA_BRAND_IMGScalarFieldEnum
            | GA_ANKETA_BRAND_IMGScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_BRAND_IMG create
     */
    export type GA_ANKETA_BRAND_IMGCreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BRAND_IMG
         */
        select?: GA_ANKETA_BRAND_IMGSelect<ExtArgs> | null
        /**
         * The data needed to create a GA_ANKETA_BRAND_IMG.
         */
        data: XOR<
            GA_ANKETA_BRAND_IMGCreateInput,
            GA_ANKETA_BRAND_IMGUncheckedCreateInput
        >
    }

    /**
     * GA_ANKETA_BRAND_IMG createMany
     */
    export type GA_ANKETA_BRAND_IMGCreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_ANKETA_BRAND_IMGS.
         */
        data:
            | GA_ANKETA_BRAND_IMGCreateManyInput
            | GA_ANKETA_BRAND_IMGCreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_ANKETA_BRAND_IMG update
     */
    export type GA_ANKETA_BRAND_IMGUpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BRAND_IMG
         */
        select?: GA_ANKETA_BRAND_IMGSelect<ExtArgs> | null
        /**
         * The data needed to update a GA_ANKETA_BRAND_IMG.
         */
        data: XOR<
            GA_ANKETA_BRAND_IMGUpdateInput,
            GA_ANKETA_BRAND_IMGUncheckedUpdateInput
        >
        /**
         * Choose, which GA_ANKETA_BRAND_IMG to update.
         */
        where: GA_ANKETA_BRAND_IMGWhereUniqueInput
    }

    /**
     * GA_ANKETA_BRAND_IMG updateMany
     */
    export type GA_ANKETA_BRAND_IMGUpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_ANKETA_BRAND_IMGS.
         */
        data: XOR<
            GA_ANKETA_BRAND_IMGUpdateManyMutationInput,
            GA_ANKETA_BRAND_IMGUncheckedUpdateManyInput
        >
        /**
         * Filter which GA_ANKETA_BRAND_IMGS to update
         */
        where?: GA_ANKETA_BRAND_IMGWhereInput
    }

    /**
     * GA_ANKETA_BRAND_IMG upsert
     */
    export type GA_ANKETA_BRAND_IMGUpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BRAND_IMG
         */
        select?: GA_ANKETA_BRAND_IMGSelect<ExtArgs> | null
        /**
         * The filter to search for the GA_ANKETA_BRAND_IMG to update in case it exists.
         */
        where: GA_ANKETA_BRAND_IMGWhereUniqueInput
        /**
         * In case the GA_ANKETA_BRAND_IMG found by the `where` argument doesn't exist, create a new GA_ANKETA_BRAND_IMG with this data.
         */
        create: XOR<
            GA_ANKETA_BRAND_IMGCreateInput,
            GA_ANKETA_BRAND_IMGUncheckedCreateInput
        >
        /**
         * In case the GA_ANKETA_BRAND_IMG was found with the provided `where` argument, update it with this data.
         */
        update: XOR<
            GA_ANKETA_BRAND_IMGUpdateInput,
            GA_ANKETA_BRAND_IMGUncheckedUpdateInput
        >
    }

    /**
     * GA_ANKETA_BRAND_IMG delete
     */
    export type GA_ANKETA_BRAND_IMGDeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BRAND_IMG
         */
        select?: GA_ANKETA_BRAND_IMGSelect<ExtArgs> | null
        /**
         * Filter which GA_ANKETA_BRAND_IMG to delete.
         */
        where: GA_ANKETA_BRAND_IMGWhereUniqueInput
    }

    /**
     * GA_ANKETA_BRAND_IMG deleteMany
     */
    export type GA_ANKETA_BRAND_IMGDeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_BRAND_IMGS to delete
         */
        where?: GA_ANKETA_BRAND_IMGWhereInput
    }

    /**
     * GA_ANKETA_BRAND_IMG without action
     */
    export type GA_ANKETA_BRAND_IMGDefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_BRAND_IMG
         */
        select?: GA_ANKETA_BRAND_IMGSelect<ExtArgs> | null
    }

    /**
     * Model GA_ANKETA_DIR
     */

    export type AggregateGA_ANKETA_DIR = {
        _count: GA_ANKETA_DIRCountAggregateOutputType | null
        _avg: GA_ANKETA_DIRAvgAggregateOutputType | null
        _sum: GA_ANKETA_DIRSumAggregateOutputType | null
        _min: GA_ANKETA_DIRMinAggregateOutputType | null
        _max: GA_ANKETA_DIRMaxAggregateOutputType | null
    }

    export type GA_ANKETA_DIRAvgAggregateOutputType = {
        AIR_ABA_ID: number | null
    }

    export type GA_ANKETA_DIRSumAggregateOutputType = {
        AIR_ABA_ID: bigint | null
    }

    export type GA_ANKETA_DIRMinAggregateOutputType = {
        AIR_ABA_ID: bigint | null
        AIR_NAME1: string | null
        AIR_NAME2: string | null
        AIR_NAME3: string | null
        AIR_PHONE: string | null
        AIR_EMAIL: string | null
    }

    export type GA_ANKETA_DIRMaxAggregateOutputType = {
        AIR_ABA_ID: bigint | null
        AIR_NAME1: string | null
        AIR_NAME2: string | null
        AIR_NAME3: string | null
        AIR_PHONE: string | null
        AIR_EMAIL: string | null
    }

    export type GA_ANKETA_DIRCountAggregateOutputType = {
        AIR_ABA_ID: number
        AIR_NAME1: number
        AIR_NAME2: number
        AIR_NAME3: number
        AIR_PHONE: number
        AIR_EMAIL: number
        _all: number
    }

    export type GA_ANKETA_DIRAvgAggregateInputType = {
        AIR_ABA_ID?: true
    }

    export type GA_ANKETA_DIRSumAggregateInputType = {
        AIR_ABA_ID?: true
    }

    export type GA_ANKETA_DIRMinAggregateInputType = {
        AIR_ABA_ID?: true
        AIR_NAME1?: true
        AIR_NAME2?: true
        AIR_NAME3?: true
        AIR_PHONE?: true
        AIR_EMAIL?: true
    }

    export type GA_ANKETA_DIRMaxAggregateInputType = {
        AIR_ABA_ID?: true
        AIR_NAME1?: true
        AIR_NAME2?: true
        AIR_NAME3?: true
        AIR_PHONE?: true
        AIR_EMAIL?: true
    }

    export type GA_ANKETA_DIRCountAggregateInputType = {
        AIR_ABA_ID?: true
        AIR_NAME1?: true
        AIR_NAME2?: true
        AIR_NAME3?: true
        AIR_PHONE?: true
        AIR_EMAIL?: true
        _all?: true
    }

    export type GA_ANKETA_DIRAggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_DIR to aggregate.
         */
        where?: GA_ANKETA_DIRWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_DIRS to fetch.
         */
        orderBy?:
            | GA_ANKETA_DIROrderByWithRelationInput
            | GA_ANKETA_DIROrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_ANKETA_DIRWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_DIRS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_DIRS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_ANKETA_DIRS
         **/
        _count?: true | GA_ANKETA_DIRCountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_ANKETA_DIRAvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_ANKETA_DIRSumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_ANKETA_DIRMinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_ANKETA_DIRMaxAggregateInputType
    }

    export type GetGA_ANKETA_DIRAggregateType<
        T extends GA_ANKETA_DIRAggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_ANKETA_DIR]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_ANKETA_DIR[P]>
            : GetScalarType<T[P], AggregateGA_ANKETA_DIR[P]>
    }

    export type GA_ANKETA_DIRGroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_ANKETA_DIRWhereInput
        orderBy?:
            | GA_ANKETA_DIROrderByWithAggregationInput
            | GA_ANKETA_DIROrderByWithAggregationInput[]
        by: GA_ANKETA_DIRScalarFieldEnum[] | GA_ANKETA_DIRScalarFieldEnum
        having?: GA_ANKETA_DIRScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_ANKETA_DIRCountAggregateInputType | true
        _avg?: GA_ANKETA_DIRAvgAggregateInputType
        _sum?: GA_ANKETA_DIRSumAggregateInputType
        _min?: GA_ANKETA_DIRMinAggregateInputType
        _max?: GA_ANKETA_DIRMaxAggregateInputType
    }

    export type GA_ANKETA_DIRGroupByOutputType = {
        AIR_ABA_ID: bigint
        AIR_NAME1: string
        AIR_NAME2: string
        AIR_NAME3: string
        AIR_PHONE: string
        AIR_EMAIL: string
        _count: GA_ANKETA_DIRCountAggregateOutputType | null
        _avg: GA_ANKETA_DIRAvgAggregateOutputType | null
        _sum: GA_ANKETA_DIRSumAggregateOutputType | null
        _min: GA_ANKETA_DIRMinAggregateOutputType | null
        _max: GA_ANKETA_DIRMaxAggregateOutputType | null
    }

    type GetGA_ANKETA_DIRGroupByPayload<T extends GA_ANKETA_DIRGroupByArgs> =
        Prisma.PrismaPromise<
            Array<
                PickEnumerable<GA_ANKETA_DIRGroupByOutputType, T['by']> & {
                    [P in keyof T &
                        keyof GA_ANKETA_DIRGroupByOutputType]: P extends '_count'
                        ? T[P] extends boolean
                            ? number
                            : GetScalarType<
                                  T[P],
                                  GA_ANKETA_DIRGroupByOutputType[P]
                              >
                        : GetScalarType<T[P], GA_ANKETA_DIRGroupByOutputType[P]>
                }
            >
        >

    export type GA_ANKETA_DIRSelect<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            AIR_ABA_ID?: boolean
            AIR_NAME1?: boolean
            AIR_NAME2?: boolean
            AIR_NAME3?: boolean
            AIR_PHONE?: boolean
            AIR_EMAIL?: boolean
        },
        ExtArgs['result']['gA_ANKETA_DIR']
    >

    export type GA_ANKETA_DIRSelectScalar = {
        AIR_ABA_ID?: boolean
        AIR_NAME1?: boolean
        AIR_NAME2?: boolean
        AIR_NAME3?: boolean
        AIR_PHONE?: boolean
        AIR_EMAIL?: boolean
    }

    export type $GA_ANKETA_DIRPayload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_ANKETA_DIR'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                AIR_ABA_ID: bigint
                AIR_NAME1: string
                AIR_NAME2: string
                AIR_NAME3: string
                AIR_PHONE: string
                AIR_EMAIL: string
            },
            ExtArgs['result']['gA_ANKETA_DIR']
        >
        composites: {}
    }

    type GA_ANKETA_DIRGetPayload<
        S extends boolean | null | undefined | GA_ANKETA_DIRDefaultArgs,
    > = $Result.GetResult<Prisma.$GA_ANKETA_DIRPayload, S>

    type GA_ANKETA_DIRCountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<GA_ANKETA_DIRFindManyArgs, 'select' | 'include' | 'distinct'> & {
        select?: GA_ANKETA_DIRCountAggregateInputType | true
    }

    export interface GA_ANKETA_DIRDelegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_ANKETA_DIR']
            meta: { name: 'GA_ANKETA_DIR' }
        }
        /**
         * Find zero or one GA_ANKETA_DIR that matches the filter.
         * @param {GA_ANKETA_DIRFindUniqueArgs} args - Arguments to find a GA_ANKETA_DIR
         * @example
         * // Get one GA_ANKETA_DIR
         * const gA_ANKETA_DIR = await prisma.gA_ANKETA_DIR.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_ANKETA_DIRFindUniqueArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_DIRFindUniqueArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_DIRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DIRPayload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_ANKETA_DIR that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_ANKETA_DIRFindUniqueOrThrowArgs} args - Arguments to find a GA_ANKETA_DIR
         * @example
         * // Get one GA_ANKETA_DIR
         * const gA_ANKETA_DIR = await prisma.gA_ANKETA_DIR.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_ANKETA_DIRFindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<T, GA_ANKETA_DIRFindUniqueOrThrowArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_DIRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DIRPayload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_DIR that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_DIRFindFirstArgs} args - Arguments to find a GA_ANKETA_DIR
         * @example
         * // Get one GA_ANKETA_DIR
         * const gA_ANKETA_DIR = await prisma.gA_ANKETA_DIR.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_ANKETA_DIRFindFirstArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_DIRFindFirstArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_DIRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DIRPayload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_DIR that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_DIRFindFirstOrThrowArgs} args - Arguments to find a GA_ANKETA_DIR
         * @example
         * // Get one GA_ANKETA_DIR
         * const gA_ANKETA_DIR = await prisma.gA_ANKETA_DIR.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<T extends GA_ANKETA_DIRFindFirstOrThrowArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_DIRFindFirstOrThrowArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_DIRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DIRPayload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_ANKETA_DIRS that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_DIRFindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_ANKETA_DIRS
         * const gA_ANKETA_DIRS = await prisma.gA_ANKETA_DIR.findMany()
         *
         * // Get first 10 GA_ANKETA_DIRS
         * const gA_ANKETA_DIRS = await prisma.gA_ANKETA_DIR.findMany({ take: 10 })
         *
         * // Only select the `AIR_ABA_ID`
         * const gA_ANKETA_DIRWithAIR_ABA_IDOnly = await prisma.gA_ANKETA_DIR.findMany({ select: { AIR_ABA_ID: true } })
         *
         **/
        findMany<T extends GA_ANKETA_DIRFindManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_DIRFindManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DIRPayload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_ANKETA_DIR.
         * @param {GA_ANKETA_DIRCreateArgs} args - Arguments to create a GA_ANKETA_DIR.
         * @example
         * // Create one GA_ANKETA_DIR
         * const GA_ANKETA_DIR = await prisma.gA_ANKETA_DIR.create({
         *   data: {
         *     // ... data to create a GA_ANKETA_DIR
         *   }
         * })
         *
         **/
        create<T extends GA_ANKETA_DIRCreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_DIRCreateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_DIRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DIRPayload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_ANKETA_DIRS.
         *     @param {GA_ANKETA_DIRCreateManyArgs} args - Arguments to create many GA_ANKETA_DIRS.
         *     @example
         *     // Create many GA_ANKETA_DIRS
         *     const gA_ANKETA_DIR = await prisma.gA_ANKETA_DIR.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_ANKETA_DIRCreateManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_DIRCreateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_ANKETA_DIR.
         * @param {GA_ANKETA_DIRDeleteArgs} args - Arguments to delete one GA_ANKETA_DIR.
         * @example
         * // Delete one GA_ANKETA_DIR
         * const GA_ANKETA_DIR = await prisma.gA_ANKETA_DIR.delete({
         *   where: {
         *     // ... filter to delete one GA_ANKETA_DIR
         *   }
         * })
         *
         **/
        delete<T extends GA_ANKETA_DIRDeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_DIRDeleteArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_DIRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DIRPayload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_ANKETA_DIR.
         * @param {GA_ANKETA_DIRUpdateArgs} args - Arguments to update one GA_ANKETA_DIR.
         * @example
         * // Update one GA_ANKETA_DIR
         * const gA_ANKETA_DIR = await prisma.gA_ANKETA_DIR.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_ANKETA_DIRUpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_DIRUpdateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_DIRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DIRPayload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_ANKETA_DIRS.
         * @param {GA_ANKETA_DIRDeleteManyArgs} args - Arguments to filter GA_ANKETA_DIRS to delete.
         * @example
         * // Delete a few GA_ANKETA_DIRS
         * const { count } = await prisma.gA_ANKETA_DIR.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_ANKETA_DIRDeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_DIRDeleteManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_ANKETA_DIRS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_DIRUpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_ANKETA_DIRS
         * const gA_ANKETA_DIR = await prisma.gA_ANKETA_DIR.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_ANKETA_DIRUpdateManyArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_DIRUpdateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_ANKETA_DIR.
         * @param {GA_ANKETA_DIRUpsertArgs} args - Arguments to update or create a GA_ANKETA_DIR.
         * @example
         * // Update or create a GA_ANKETA_DIR
         * const gA_ANKETA_DIR = await prisma.gA_ANKETA_DIR.upsert({
         *   create: {
         *     // ... data to create a GA_ANKETA_DIR
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_ANKETA_DIR we want to update
         *   }
         * })
         **/
        upsert<T extends GA_ANKETA_DIRUpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_DIRUpsertArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_DIRClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DIRPayload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_ANKETA_DIRS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_DIRCountArgs} args - Arguments to filter GA_ANKETA_DIRS to count.
         * @example
         * // Count the number of GA_ANKETA_DIRS
         * const count = await prisma.gA_ANKETA_DIR.count({
         *   where: {
         *     // ... the filter for the GA_ANKETA_DIRS we want to count
         *   }
         * })
         **/
        count<T extends GA_ANKETA_DIRCountArgs>(
            args?: Subset<T, GA_ANKETA_DIRCountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_ANKETA_DIRCountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_ANKETA_DIR.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_DIRAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_ANKETA_DIRAggregateArgs>(
            args: Subset<T, GA_ANKETA_DIRAggregateArgs>
        ): Prisma.PrismaPromise<GetGA_ANKETA_DIRAggregateType<T>>

        /**
         * Group by GA_ANKETA_DIR.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_DIRGroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_ANKETA_DIRGroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_ANKETA_DIRGroupByArgs['orderBy'] }
                : { orderBy?: GA_ANKETA_DIRGroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<T, GA_ANKETA_DIRGroupByArgs, OrderByArg> &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_ANKETA_DIRGroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_ANKETA_DIR model
         */
        readonly fields: GA_ANKETA_DIRFieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_ANKETA_DIR.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_ANKETA_DIRClient<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_ANKETA_DIR model
     */
    interface GA_ANKETA_DIRFieldRefs {
        readonly AIR_ABA_ID: FieldRef<'GA_ANKETA_DIR', 'BigInt'>
        readonly AIR_NAME1: FieldRef<'GA_ANKETA_DIR', 'String'>
        readonly AIR_NAME2: FieldRef<'GA_ANKETA_DIR', 'String'>
        readonly AIR_NAME3: FieldRef<'GA_ANKETA_DIR', 'String'>
        readonly AIR_PHONE: FieldRef<'GA_ANKETA_DIR', 'String'>
        readonly AIR_EMAIL: FieldRef<'GA_ANKETA_DIR', 'String'>
    }

    // Custom InputTypes

    /**
     * GA_ANKETA_DIR findUnique
     */
    export type GA_ANKETA_DIRFindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DIR
         */
        select?: GA_ANKETA_DIRSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_DIR to fetch.
         */
        where: GA_ANKETA_DIRWhereUniqueInput
    }

    /**
     * GA_ANKETA_DIR findUniqueOrThrow
     */
    export type GA_ANKETA_DIRFindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DIR
         */
        select?: GA_ANKETA_DIRSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_DIR to fetch.
         */
        where: GA_ANKETA_DIRWhereUniqueInput
    }

    /**
     * GA_ANKETA_DIR findFirst
     */
    export type GA_ANKETA_DIRFindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DIR
         */
        select?: GA_ANKETA_DIRSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_DIR to fetch.
         */
        where?: GA_ANKETA_DIRWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_DIRS to fetch.
         */
        orderBy?:
            | GA_ANKETA_DIROrderByWithRelationInput
            | GA_ANKETA_DIROrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_DIRS.
         */
        cursor?: GA_ANKETA_DIRWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_DIRS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_DIRS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_DIRS.
         */
        distinct?: GA_ANKETA_DIRScalarFieldEnum | GA_ANKETA_DIRScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_DIR findFirstOrThrow
     */
    export type GA_ANKETA_DIRFindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DIR
         */
        select?: GA_ANKETA_DIRSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_DIR to fetch.
         */
        where?: GA_ANKETA_DIRWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_DIRS to fetch.
         */
        orderBy?:
            | GA_ANKETA_DIROrderByWithRelationInput
            | GA_ANKETA_DIROrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_DIRS.
         */
        cursor?: GA_ANKETA_DIRWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_DIRS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_DIRS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_DIRS.
         */
        distinct?: GA_ANKETA_DIRScalarFieldEnum | GA_ANKETA_DIRScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_DIR findMany
     */
    export type GA_ANKETA_DIRFindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DIR
         */
        select?: GA_ANKETA_DIRSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_DIRS to fetch.
         */
        where?: GA_ANKETA_DIRWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_DIRS to fetch.
         */
        orderBy?:
            | GA_ANKETA_DIROrderByWithRelationInput
            | GA_ANKETA_DIROrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_ANKETA_DIRS.
         */
        cursor?: GA_ANKETA_DIRWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_DIRS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_DIRS.
         */
        skip?: number
        distinct?: GA_ANKETA_DIRScalarFieldEnum | GA_ANKETA_DIRScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_DIR create
     */
    export type GA_ANKETA_DIRCreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DIR
         */
        select?: GA_ANKETA_DIRSelect<ExtArgs> | null
        /**
         * The data needed to create a GA_ANKETA_DIR.
         */
        data: XOR<GA_ANKETA_DIRCreateInput, GA_ANKETA_DIRUncheckedCreateInput>
    }

    /**
     * GA_ANKETA_DIR createMany
     */
    export type GA_ANKETA_DIRCreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_ANKETA_DIRS.
         */
        data: GA_ANKETA_DIRCreateManyInput | GA_ANKETA_DIRCreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_ANKETA_DIR update
     */
    export type GA_ANKETA_DIRUpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DIR
         */
        select?: GA_ANKETA_DIRSelect<ExtArgs> | null
        /**
         * The data needed to update a GA_ANKETA_DIR.
         */
        data: XOR<GA_ANKETA_DIRUpdateInput, GA_ANKETA_DIRUncheckedUpdateInput>
        /**
         * Choose, which GA_ANKETA_DIR to update.
         */
        where: GA_ANKETA_DIRWhereUniqueInput
    }

    /**
     * GA_ANKETA_DIR updateMany
     */
    export type GA_ANKETA_DIRUpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_ANKETA_DIRS.
         */
        data: XOR<
            GA_ANKETA_DIRUpdateManyMutationInput,
            GA_ANKETA_DIRUncheckedUpdateManyInput
        >
        /**
         * Filter which GA_ANKETA_DIRS to update
         */
        where?: GA_ANKETA_DIRWhereInput
    }

    /**
     * GA_ANKETA_DIR upsert
     */
    export type GA_ANKETA_DIRUpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DIR
         */
        select?: GA_ANKETA_DIRSelect<ExtArgs> | null
        /**
         * The filter to search for the GA_ANKETA_DIR to update in case it exists.
         */
        where: GA_ANKETA_DIRWhereUniqueInput
        /**
         * In case the GA_ANKETA_DIR found by the `where` argument doesn't exist, create a new GA_ANKETA_DIR with this data.
         */
        create: XOR<GA_ANKETA_DIRCreateInput, GA_ANKETA_DIRUncheckedCreateInput>
        /**
         * In case the GA_ANKETA_DIR was found with the provided `where` argument, update it with this data.
         */
        update: XOR<GA_ANKETA_DIRUpdateInput, GA_ANKETA_DIRUncheckedUpdateInput>
    }

    /**
     * GA_ANKETA_DIR delete
     */
    export type GA_ANKETA_DIRDeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DIR
         */
        select?: GA_ANKETA_DIRSelect<ExtArgs> | null
        /**
         * Filter which GA_ANKETA_DIR to delete.
         */
        where: GA_ANKETA_DIRWhereUniqueInput
    }

    /**
     * GA_ANKETA_DIR deleteMany
     */
    export type GA_ANKETA_DIRDeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_DIRS to delete
         */
        where?: GA_ANKETA_DIRWhereInput
    }

    /**
     * GA_ANKETA_DIR without action
     */
    export type GA_ANKETA_DIRDefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DIR
         */
        select?: GA_ANKETA_DIRSelect<ExtArgs> | null
    }

    /**
     * Model GA_ANKETA_DOGOVOR
     */

    export type AggregateGA_ANKETA_DOGOVOR = {
        _count: GA_ANKETA_DOGOVORCountAggregateOutputType | null
        _avg: GA_ANKETA_DOGOVORAvgAggregateOutputType | null
        _sum: GA_ANKETA_DOGOVORSumAggregateOutputType | null
        _min: GA_ANKETA_DOGOVORMinAggregateOutputType | null
        _max: GA_ANKETA_DOGOVORMaxAggregateOutputType | null
    }

    export type GA_ANKETA_DOGOVORAvgAggregateOutputType = {
        ADO_ABA_ID: number | null
    }

    export type GA_ANKETA_DOGOVORSumAggregateOutputType = {
        ADO_ABA_ID: bigint | null
    }

    export type GA_ANKETA_DOGOVORMinAggregateOutputType = {
        ADO_ABA_ID: bigint | null
        ADO_NAME1: string | null
        ADO_NAME2: string | null
        ADO_NAME3: string | null
        ADO_PHONE: string | null
        ADO_EMAIL: string | null
        ADO_DATETIME: Date | null
        ADO_STATUS: boolean | null
    }

    export type GA_ANKETA_DOGOVORMaxAggregateOutputType = {
        ADO_ABA_ID: bigint | null
        ADO_NAME1: string | null
        ADO_NAME2: string | null
        ADO_NAME3: string | null
        ADO_PHONE: string | null
        ADO_EMAIL: string | null
        ADO_DATETIME: Date | null
        ADO_STATUS: boolean | null
    }

    export type GA_ANKETA_DOGOVORCountAggregateOutputType = {
        ADO_ABA_ID: number
        ADO_NAME1: number
        ADO_NAME2: number
        ADO_NAME3: number
        ADO_PHONE: number
        ADO_EMAIL: number
        ADO_DATETIME: number
        ADO_STATUS: number
        _all: number
    }

    export type GA_ANKETA_DOGOVORAvgAggregateInputType = {
        ADO_ABA_ID?: true
    }

    export type GA_ANKETA_DOGOVORSumAggregateInputType = {
        ADO_ABA_ID?: true
    }

    export type GA_ANKETA_DOGOVORMinAggregateInputType = {
        ADO_ABA_ID?: true
        ADO_NAME1?: true
        ADO_NAME2?: true
        ADO_NAME3?: true
        ADO_PHONE?: true
        ADO_EMAIL?: true
        ADO_DATETIME?: true
        ADO_STATUS?: true
    }

    export type GA_ANKETA_DOGOVORMaxAggregateInputType = {
        ADO_ABA_ID?: true
        ADO_NAME1?: true
        ADO_NAME2?: true
        ADO_NAME3?: true
        ADO_PHONE?: true
        ADO_EMAIL?: true
        ADO_DATETIME?: true
        ADO_STATUS?: true
    }

    export type GA_ANKETA_DOGOVORCountAggregateInputType = {
        ADO_ABA_ID?: true
        ADO_NAME1?: true
        ADO_NAME2?: true
        ADO_NAME3?: true
        ADO_PHONE?: true
        ADO_EMAIL?: true
        ADO_DATETIME?: true
        ADO_STATUS?: true
        _all?: true
    }

    export type GA_ANKETA_DOGOVORAggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_DOGOVOR to aggregate.
         */
        where?: GA_ANKETA_DOGOVORWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_DOGOVORS to fetch.
         */
        orderBy?:
            | GA_ANKETA_DOGOVOROrderByWithRelationInput
            | GA_ANKETA_DOGOVOROrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_ANKETA_DOGOVORWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_DOGOVORS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_DOGOVORS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_ANKETA_DOGOVORS
         **/
        _count?: true | GA_ANKETA_DOGOVORCountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_ANKETA_DOGOVORAvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_ANKETA_DOGOVORSumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_ANKETA_DOGOVORMinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_ANKETA_DOGOVORMaxAggregateInputType
    }

    export type GetGA_ANKETA_DOGOVORAggregateType<
        T extends GA_ANKETA_DOGOVORAggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_ANKETA_DOGOVOR]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_ANKETA_DOGOVOR[P]>
            : GetScalarType<T[P], AggregateGA_ANKETA_DOGOVOR[P]>
    }

    export type GA_ANKETA_DOGOVORGroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_ANKETA_DOGOVORWhereInput
        orderBy?:
            | GA_ANKETA_DOGOVOROrderByWithAggregationInput
            | GA_ANKETA_DOGOVOROrderByWithAggregationInput[]
        by:
            | GA_ANKETA_DOGOVORScalarFieldEnum[]
            | GA_ANKETA_DOGOVORScalarFieldEnum
        having?: GA_ANKETA_DOGOVORScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_ANKETA_DOGOVORCountAggregateInputType | true
        _avg?: GA_ANKETA_DOGOVORAvgAggregateInputType
        _sum?: GA_ANKETA_DOGOVORSumAggregateInputType
        _min?: GA_ANKETA_DOGOVORMinAggregateInputType
        _max?: GA_ANKETA_DOGOVORMaxAggregateInputType
    }

    export type GA_ANKETA_DOGOVORGroupByOutputType = {
        ADO_ABA_ID: bigint
        ADO_NAME1: string
        ADO_NAME2: string
        ADO_NAME3: string
        ADO_PHONE: string
        ADO_EMAIL: string
        ADO_DATETIME: Date
        ADO_STATUS: boolean
        _count: GA_ANKETA_DOGOVORCountAggregateOutputType | null
        _avg: GA_ANKETA_DOGOVORAvgAggregateOutputType | null
        _sum: GA_ANKETA_DOGOVORSumAggregateOutputType | null
        _min: GA_ANKETA_DOGOVORMinAggregateOutputType | null
        _max: GA_ANKETA_DOGOVORMaxAggregateOutputType | null
    }

    type GetGA_ANKETA_DOGOVORGroupByPayload<
        T extends GA_ANKETA_DOGOVORGroupByArgs,
    > = Prisma.PrismaPromise<
        Array<
            PickEnumerable<GA_ANKETA_DOGOVORGroupByOutputType, T['by']> & {
                [P in keyof T &
                    keyof GA_ANKETA_DOGOVORGroupByOutputType]: P extends '_count'
                    ? T[P] extends boolean
                        ? number
                        : GetScalarType<
                              T[P],
                              GA_ANKETA_DOGOVORGroupByOutputType[P]
                          >
                    : GetScalarType<T[P], GA_ANKETA_DOGOVORGroupByOutputType[P]>
            }
        >
    >

    export type GA_ANKETA_DOGOVORSelect<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            ADO_ABA_ID?: boolean
            ADO_NAME1?: boolean
            ADO_NAME2?: boolean
            ADO_NAME3?: boolean
            ADO_PHONE?: boolean
            ADO_EMAIL?: boolean
            ADO_DATETIME?: boolean
            ADO_STATUS?: boolean
        },
        ExtArgs['result']['gA_ANKETA_DOGOVOR']
    >

    export type GA_ANKETA_DOGOVORSelectScalar = {
        ADO_ABA_ID?: boolean
        ADO_NAME1?: boolean
        ADO_NAME2?: boolean
        ADO_NAME3?: boolean
        ADO_PHONE?: boolean
        ADO_EMAIL?: boolean
        ADO_DATETIME?: boolean
        ADO_STATUS?: boolean
    }

    export type $GA_ANKETA_DOGOVORPayload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_ANKETA_DOGOVOR'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                ADO_ABA_ID: bigint
                ADO_NAME1: string
                ADO_NAME2: string
                ADO_NAME3: string
                ADO_PHONE: string
                ADO_EMAIL: string
                ADO_DATETIME: Date
                ADO_STATUS: boolean
            },
            ExtArgs['result']['gA_ANKETA_DOGOVOR']
        >
        composites: {}
    }

    type GA_ANKETA_DOGOVORGetPayload<
        S extends boolean | null | undefined | GA_ANKETA_DOGOVORDefaultArgs,
    > = $Result.GetResult<Prisma.$GA_ANKETA_DOGOVORPayload, S>

    type GA_ANKETA_DOGOVORCountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<
        GA_ANKETA_DOGOVORFindManyArgs,
        'select' | 'include' | 'distinct'
    > & {
        select?: GA_ANKETA_DOGOVORCountAggregateInputType | true
    }

    export interface GA_ANKETA_DOGOVORDelegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_ANKETA_DOGOVOR']
            meta: { name: 'GA_ANKETA_DOGOVOR' }
        }
        /**
         * Find zero or one GA_ANKETA_DOGOVOR that matches the filter.
         * @param {GA_ANKETA_DOGOVORFindUniqueArgs} args - Arguments to find a GA_ANKETA_DOGOVOR
         * @example
         * // Get one GA_ANKETA_DOGOVOR
         * const gA_ANKETA_DOGOVOR = await prisma.gA_ANKETA_DOGOVOR.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_ANKETA_DOGOVORFindUniqueArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_DOGOVORFindUniqueArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_DOGOVORClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DOGOVORPayload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_ANKETA_DOGOVOR that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_ANKETA_DOGOVORFindUniqueOrThrowArgs} args - Arguments to find a GA_ANKETA_DOGOVOR
         * @example
         * // Get one GA_ANKETA_DOGOVOR
         * const gA_ANKETA_DOGOVOR = await prisma.gA_ANKETA_DOGOVOR.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_ANKETA_DOGOVORFindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_DOGOVORFindUniqueOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_DOGOVORClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DOGOVORPayload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_DOGOVOR that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_DOGOVORFindFirstArgs} args - Arguments to find a GA_ANKETA_DOGOVOR
         * @example
         * // Get one GA_ANKETA_DOGOVOR
         * const gA_ANKETA_DOGOVOR = await prisma.gA_ANKETA_DOGOVOR.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_ANKETA_DOGOVORFindFirstArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_DOGOVORFindFirstArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_DOGOVORClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DOGOVORPayload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_DOGOVOR that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_DOGOVORFindFirstOrThrowArgs} args - Arguments to find a GA_ANKETA_DOGOVOR
         * @example
         * // Get one GA_ANKETA_DOGOVOR
         * const gA_ANKETA_DOGOVOR = await prisma.gA_ANKETA_DOGOVOR.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<
            T extends GA_ANKETA_DOGOVORFindFirstOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_DOGOVORFindFirstOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_DOGOVORClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DOGOVORPayload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_ANKETA_DOGOVORS that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_DOGOVORFindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_ANKETA_DOGOVORS
         * const gA_ANKETA_DOGOVORS = await prisma.gA_ANKETA_DOGOVOR.findMany()
         *
         * // Get first 10 GA_ANKETA_DOGOVORS
         * const gA_ANKETA_DOGOVORS = await prisma.gA_ANKETA_DOGOVOR.findMany({ take: 10 })
         *
         * // Only select the `ADO_ABA_ID`
         * const gA_ANKETA_DOGOVORWithADO_ABA_IDOnly = await prisma.gA_ANKETA_DOGOVOR.findMany({ select: { ADO_ABA_ID: true } })
         *
         **/
        findMany<T extends GA_ANKETA_DOGOVORFindManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_DOGOVORFindManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DOGOVORPayload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_ANKETA_DOGOVOR.
         * @param {GA_ANKETA_DOGOVORCreateArgs} args - Arguments to create a GA_ANKETA_DOGOVOR.
         * @example
         * // Create one GA_ANKETA_DOGOVOR
         * const GA_ANKETA_DOGOVOR = await prisma.gA_ANKETA_DOGOVOR.create({
         *   data: {
         *     // ... data to create a GA_ANKETA_DOGOVOR
         *   }
         * })
         *
         **/
        create<T extends GA_ANKETA_DOGOVORCreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_DOGOVORCreateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_DOGOVORClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DOGOVORPayload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_ANKETA_DOGOVORS.
         *     @param {GA_ANKETA_DOGOVORCreateManyArgs} args - Arguments to create many GA_ANKETA_DOGOVORS.
         *     @example
         *     // Create many GA_ANKETA_DOGOVORS
         *     const gA_ANKETA_DOGOVOR = await prisma.gA_ANKETA_DOGOVOR.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_ANKETA_DOGOVORCreateManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_DOGOVORCreateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_ANKETA_DOGOVOR.
         * @param {GA_ANKETA_DOGOVORDeleteArgs} args - Arguments to delete one GA_ANKETA_DOGOVOR.
         * @example
         * // Delete one GA_ANKETA_DOGOVOR
         * const GA_ANKETA_DOGOVOR = await prisma.gA_ANKETA_DOGOVOR.delete({
         *   where: {
         *     // ... filter to delete one GA_ANKETA_DOGOVOR
         *   }
         * })
         *
         **/
        delete<T extends GA_ANKETA_DOGOVORDeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_DOGOVORDeleteArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_DOGOVORClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DOGOVORPayload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_ANKETA_DOGOVOR.
         * @param {GA_ANKETA_DOGOVORUpdateArgs} args - Arguments to update one GA_ANKETA_DOGOVOR.
         * @example
         * // Update one GA_ANKETA_DOGOVOR
         * const gA_ANKETA_DOGOVOR = await prisma.gA_ANKETA_DOGOVOR.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_ANKETA_DOGOVORUpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_DOGOVORUpdateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_DOGOVORClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DOGOVORPayload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_ANKETA_DOGOVORS.
         * @param {GA_ANKETA_DOGOVORDeleteManyArgs} args - Arguments to filter GA_ANKETA_DOGOVORS to delete.
         * @example
         * // Delete a few GA_ANKETA_DOGOVORS
         * const { count } = await prisma.gA_ANKETA_DOGOVOR.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_ANKETA_DOGOVORDeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_DOGOVORDeleteManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_ANKETA_DOGOVORS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_DOGOVORUpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_ANKETA_DOGOVORS
         * const gA_ANKETA_DOGOVOR = await prisma.gA_ANKETA_DOGOVOR.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_ANKETA_DOGOVORUpdateManyArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_DOGOVORUpdateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_ANKETA_DOGOVOR.
         * @param {GA_ANKETA_DOGOVORUpsertArgs} args - Arguments to update or create a GA_ANKETA_DOGOVOR.
         * @example
         * // Update or create a GA_ANKETA_DOGOVOR
         * const gA_ANKETA_DOGOVOR = await prisma.gA_ANKETA_DOGOVOR.upsert({
         *   create: {
         *     // ... data to create a GA_ANKETA_DOGOVOR
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_ANKETA_DOGOVOR we want to update
         *   }
         * })
         **/
        upsert<T extends GA_ANKETA_DOGOVORUpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_DOGOVORUpsertArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_DOGOVORClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_DOGOVORPayload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_ANKETA_DOGOVORS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_DOGOVORCountArgs} args - Arguments to filter GA_ANKETA_DOGOVORS to count.
         * @example
         * // Count the number of GA_ANKETA_DOGOVORS
         * const count = await prisma.gA_ANKETA_DOGOVOR.count({
         *   where: {
         *     // ... the filter for the GA_ANKETA_DOGOVORS we want to count
         *   }
         * })
         **/
        count<T extends GA_ANKETA_DOGOVORCountArgs>(
            args?: Subset<T, GA_ANKETA_DOGOVORCountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_ANKETA_DOGOVORCountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_ANKETA_DOGOVOR.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_DOGOVORAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_ANKETA_DOGOVORAggregateArgs>(
            args: Subset<T, GA_ANKETA_DOGOVORAggregateArgs>
        ): Prisma.PrismaPromise<GetGA_ANKETA_DOGOVORAggregateType<T>>

        /**
         * Group by GA_ANKETA_DOGOVOR.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_DOGOVORGroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_ANKETA_DOGOVORGroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_ANKETA_DOGOVORGroupByArgs['orderBy'] }
                : { orderBy?: GA_ANKETA_DOGOVORGroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<
                T,
                GA_ANKETA_DOGOVORGroupByArgs,
                OrderByArg
            > &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_ANKETA_DOGOVORGroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_ANKETA_DOGOVOR model
         */
        readonly fields: GA_ANKETA_DOGOVORFieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_ANKETA_DOGOVOR.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_ANKETA_DOGOVORClient<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_ANKETA_DOGOVOR model
     */
    interface GA_ANKETA_DOGOVORFieldRefs {
        readonly ADO_ABA_ID: FieldRef<'GA_ANKETA_DOGOVOR', 'BigInt'>
        readonly ADO_NAME1: FieldRef<'GA_ANKETA_DOGOVOR', 'String'>
        readonly ADO_NAME2: FieldRef<'GA_ANKETA_DOGOVOR', 'String'>
        readonly ADO_NAME3: FieldRef<'GA_ANKETA_DOGOVOR', 'String'>
        readonly ADO_PHONE: FieldRef<'GA_ANKETA_DOGOVOR', 'String'>
        readonly ADO_EMAIL: FieldRef<'GA_ANKETA_DOGOVOR', 'String'>
        readonly ADO_DATETIME: FieldRef<'GA_ANKETA_DOGOVOR', 'DateTime'>
        readonly ADO_STATUS: FieldRef<'GA_ANKETA_DOGOVOR', 'Boolean'>
    }

    // Custom InputTypes

    /**
     * GA_ANKETA_DOGOVOR findUnique
     */
    export type GA_ANKETA_DOGOVORFindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DOGOVOR
         */
        select?: GA_ANKETA_DOGOVORSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_DOGOVOR to fetch.
         */
        where: GA_ANKETA_DOGOVORWhereUniqueInput
    }

    /**
     * GA_ANKETA_DOGOVOR findUniqueOrThrow
     */
    export type GA_ANKETA_DOGOVORFindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DOGOVOR
         */
        select?: GA_ANKETA_DOGOVORSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_DOGOVOR to fetch.
         */
        where: GA_ANKETA_DOGOVORWhereUniqueInput
    }

    /**
     * GA_ANKETA_DOGOVOR findFirst
     */
    export type GA_ANKETA_DOGOVORFindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DOGOVOR
         */
        select?: GA_ANKETA_DOGOVORSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_DOGOVOR to fetch.
         */
        where?: GA_ANKETA_DOGOVORWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_DOGOVORS to fetch.
         */
        orderBy?:
            | GA_ANKETA_DOGOVOROrderByWithRelationInput
            | GA_ANKETA_DOGOVOROrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_DOGOVORS.
         */
        cursor?: GA_ANKETA_DOGOVORWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_DOGOVORS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_DOGOVORS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_DOGOVORS.
         */
        distinct?:
            | GA_ANKETA_DOGOVORScalarFieldEnum
            | GA_ANKETA_DOGOVORScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_DOGOVOR findFirstOrThrow
     */
    export type GA_ANKETA_DOGOVORFindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DOGOVOR
         */
        select?: GA_ANKETA_DOGOVORSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_DOGOVOR to fetch.
         */
        where?: GA_ANKETA_DOGOVORWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_DOGOVORS to fetch.
         */
        orderBy?:
            | GA_ANKETA_DOGOVOROrderByWithRelationInput
            | GA_ANKETA_DOGOVOROrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_DOGOVORS.
         */
        cursor?: GA_ANKETA_DOGOVORWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_DOGOVORS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_DOGOVORS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_DOGOVORS.
         */
        distinct?:
            | GA_ANKETA_DOGOVORScalarFieldEnum
            | GA_ANKETA_DOGOVORScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_DOGOVOR findMany
     */
    export type GA_ANKETA_DOGOVORFindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DOGOVOR
         */
        select?: GA_ANKETA_DOGOVORSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_DOGOVORS to fetch.
         */
        where?: GA_ANKETA_DOGOVORWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_DOGOVORS to fetch.
         */
        orderBy?:
            | GA_ANKETA_DOGOVOROrderByWithRelationInput
            | GA_ANKETA_DOGOVOROrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_ANKETA_DOGOVORS.
         */
        cursor?: GA_ANKETA_DOGOVORWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_DOGOVORS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_DOGOVORS.
         */
        skip?: number
        distinct?:
            | GA_ANKETA_DOGOVORScalarFieldEnum
            | GA_ANKETA_DOGOVORScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_DOGOVOR create
     */
    export type GA_ANKETA_DOGOVORCreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DOGOVOR
         */
        select?: GA_ANKETA_DOGOVORSelect<ExtArgs> | null
        /**
         * The data needed to create a GA_ANKETA_DOGOVOR.
         */
        data: XOR<
            GA_ANKETA_DOGOVORCreateInput,
            GA_ANKETA_DOGOVORUncheckedCreateInput
        >
    }

    /**
     * GA_ANKETA_DOGOVOR createMany
     */
    export type GA_ANKETA_DOGOVORCreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_ANKETA_DOGOVORS.
         */
        data:
            | GA_ANKETA_DOGOVORCreateManyInput
            | GA_ANKETA_DOGOVORCreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_ANKETA_DOGOVOR update
     */
    export type GA_ANKETA_DOGOVORUpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DOGOVOR
         */
        select?: GA_ANKETA_DOGOVORSelect<ExtArgs> | null
        /**
         * The data needed to update a GA_ANKETA_DOGOVOR.
         */
        data: XOR<
            GA_ANKETA_DOGOVORUpdateInput,
            GA_ANKETA_DOGOVORUncheckedUpdateInput
        >
        /**
         * Choose, which GA_ANKETA_DOGOVOR to update.
         */
        where: GA_ANKETA_DOGOVORWhereUniqueInput
    }

    /**
     * GA_ANKETA_DOGOVOR updateMany
     */
    export type GA_ANKETA_DOGOVORUpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_ANKETA_DOGOVORS.
         */
        data: XOR<
            GA_ANKETA_DOGOVORUpdateManyMutationInput,
            GA_ANKETA_DOGOVORUncheckedUpdateManyInput
        >
        /**
         * Filter which GA_ANKETA_DOGOVORS to update
         */
        where?: GA_ANKETA_DOGOVORWhereInput
    }

    /**
     * GA_ANKETA_DOGOVOR upsert
     */
    export type GA_ANKETA_DOGOVORUpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DOGOVOR
         */
        select?: GA_ANKETA_DOGOVORSelect<ExtArgs> | null
        /**
         * The filter to search for the GA_ANKETA_DOGOVOR to update in case it exists.
         */
        where: GA_ANKETA_DOGOVORWhereUniqueInput
        /**
         * In case the GA_ANKETA_DOGOVOR found by the `where` argument doesn't exist, create a new GA_ANKETA_DOGOVOR with this data.
         */
        create: XOR<
            GA_ANKETA_DOGOVORCreateInput,
            GA_ANKETA_DOGOVORUncheckedCreateInput
        >
        /**
         * In case the GA_ANKETA_DOGOVOR was found with the provided `where` argument, update it with this data.
         */
        update: XOR<
            GA_ANKETA_DOGOVORUpdateInput,
            GA_ANKETA_DOGOVORUncheckedUpdateInput
        >
    }

    /**
     * GA_ANKETA_DOGOVOR delete
     */
    export type GA_ANKETA_DOGOVORDeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DOGOVOR
         */
        select?: GA_ANKETA_DOGOVORSelect<ExtArgs> | null
        /**
         * Filter which GA_ANKETA_DOGOVOR to delete.
         */
        where: GA_ANKETA_DOGOVORWhereUniqueInput
    }

    /**
     * GA_ANKETA_DOGOVOR deleteMany
     */
    export type GA_ANKETA_DOGOVORDeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_DOGOVORS to delete
         */
        where?: GA_ANKETA_DOGOVORWhereInput
    }

    /**
     * GA_ANKETA_DOGOVOR without action
     */
    export type GA_ANKETA_DOGOVORDefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_DOGOVOR
         */
        select?: GA_ANKETA_DOGOVORSelect<ExtArgs> | null
    }

    /**
     * Model GA_ANKETA_OBOROT
     */

    export type AggregateGA_ANKETA_OBOROT = {
        _count: GA_ANKETA_OBOROTCountAggregateOutputType | null
        _avg: GA_ANKETA_OBOROTAvgAggregateOutputType | null
        _sum: GA_ANKETA_OBOROTSumAggregateOutputType | null
        _min: GA_ANKETA_OBOROTMinAggregateOutputType | null
        _max: GA_ANKETA_OBOROTMaxAggregateOutputType | null
    }

    export type GA_ANKETA_OBOROTAvgAggregateOutputType = {
        ABO_ABA_ID: number | null
        ABO_OBOROT_ALL: number | null
        ABO_OBOROT_BRANDS_MONTH: number | null
        ABO_OBOROT_AE: number | null
        ABO_OBOROT_ROSSKO: number | null
        ABO_OBOROT_ARKONA: number | null
        ABO_OBOROT_AUTORUS: number | null
        ABO_SCORES_MONTH_PLAN: number | null
        ABO_SCORES_MONTH_FAKT: number | null
        ABO_COUNT_ROSSKO: number | null
        ABO_COUNT_AE: number | null
        ABO_COUNT_ARKONA: number | null
        ABO_COUNT_AUTORUS: number | null
        ABO_OBOROT_BRANDS: number | null
        ABO_OBOROT_BRAND_LOOK1: number | null
        ABO_SCORES: number | null
        ABO_OBOROT_BRAND_LOOK2: number | null
        ABO_OBOROT_BRAND_LOOK2_ROSSKO: number | null
        ABO_OBOROT_BRAND_LOOK2_AE: number | null
        ABO_OBOROT_BRAND_LOOK2_ARKONA: number | null
        ABO_OBOROT_BRAND_LOOK2_AUTORUS: number | null
        ABO_OBOROT_BRANDS_MONTH_ROSSKO: number | null
        ABO_OBOROT_BRANDS_MONTH_AE: number | null
        ABO_OBOROT_BRANDS_MONTH_ARKONA: number | null
        ABO_OBOROT_BRANDS_MONTH_AUTORUS: number | null
        ABO_OBOROT_BRAND1: number | null
        ABO_OBOROT_BRAND2: number | null
        ABO_OBOROT_BRAND3: number | null
        ABO_OBOROT_BRAND4: number | null
        ABO_OBOROT_BRAND5: number | null
        ABO_OBOROT_BRAND6: number | null
        ABO_OBOROT_NEXT: number | null
        ABO_SCORES_MONTH_PLAN_NEXT: number | null
        ABO_ABA_REMZONA_QTY: number | null
    }

    export type GA_ANKETA_OBOROTSumAggregateOutputType = {
        ABO_ABA_ID: bigint | null
        ABO_OBOROT_ALL: number | null
        ABO_OBOROT_BRANDS_MONTH: number | null
        ABO_OBOROT_AE: number | null
        ABO_OBOROT_ROSSKO: number | null
        ABO_OBOROT_ARKONA: number | null
        ABO_OBOROT_AUTORUS: number | null
        ABO_SCORES_MONTH_PLAN: number | null
        ABO_SCORES_MONTH_FAKT: number | null
        ABO_COUNT_ROSSKO: number | null
        ABO_COUNT_AE: number | null
        ABO_COUNT_ARKONA: number | null
        ABO_COUNT_AUTORUS: number | null
        ABO_OBOROT_BRANDS: number | null
        ABO_OBOROT_BRAND_LOOK1: number | null
        ABO_SCORES: number | null
        ABO_OBOROT_BRAND_LOOK2: number | null
        ABO_OBOROT_BRAND_LOOK2_ROSSKO: number | null
        ABO_OBOROT_BRAND_LOOK2_AE: number | null
        ABO_OBOROT_BRAND_LOOK2_ARKONA: number | null
        ABO_OBOROT_BRAND_LOOK2_AUTORUS: number | null
        ABO_OBOROT_BRANDS_MONTH_ROSSKO: number | null
        ABO_OBOROT_BRANDS_MONTH_AE: number | null
        ABO_OBOROT_BRANDS_MONTH_ARKONA: number | null
        ABO_OBOROT_BRANDS_MONTH_AUTORUS: number | null
        ABO_OBOROT_BRAND1: number | null
        ABO_OBOROT_BRAND2: number | null
        ABO_OBOROT_BRAND3: number | null
        ABO_OBOROT_BRAND4: number | null
        ABO_OBOROT_BRAND5: number | null
        ABO_OBOROT_BRAND6: number | null
        ABO_OBOROT_NEXT: number | null
        ABO_SCORES_MONTH_PLAN_NEXT: number | null
        ABO_ABA_REMZONA_QTY: number | null
    }

    export type GA_ANKETA_OBOROTMinAggregateOutputType = {
        ABO_ABA_ID: bigint | null
        ABO_DATETIME: Date | null
        ABO_OBOROT_ALL: number | null
        ABO_OBOROT_BRANDS_MONTH: number | null
        ABO_OBOROT_AE: number | null
        ABO_OBOROT_ROSSKO: number | null
        ABO_OBOROT_ARKONA: number | null
        ABO_OBOROT_AUTORUS: number | null
        ABO_SCORES_MONTH_PLAN: number | null
        ABO_SCORES_MONTH_FAKT: number | null
        ABO_COUNT_ROSSKO: number | null
        ABO_COUNT_AE: number | null
        ABO_COUNT_ARKONA: number | null
        ABO_COUNT_AUTORUS: number | null
        ABO_OBOROT_BRANDS: number | null
        ABO_OBOROT_BRAND_LOOK1: number | null
        ABO_SCORES: number | null
        ABO_OBOROT_BRAND_LOOK2: number | null
        ABO_OBOROT_BRAND_LOOK2_ROSSKO: number | null
        ABO_OBOROT_BRAND_LOOK2_AE: number | null
        ABO_OBOROT_BRAND_LOOK2_ARKONA: number | null
        ABO_OBOROT_BRAND_LOOK2_AUTORUS: number | null
        ABO_OBOROT_BRANDS_MONTH_ROSSKO: number | null
        ABO_OBOROT_BRANDS_MONTH_AE: number | null
        ABO_OBOROT_BRANDS_MONTH_ARKONA: number | null
        ABO_OBOROT_BRANDS_MONTH_AUTORUS: number | null
        ABO_OBOROT_BRAND1: number | null
        ABO_OBOROT_BRAND2: number | null
        ABO_OBOROT_BRAND3: number | null
        ABO_OBOROT_BRAND4: number | null
        ABO_OBOROT_BRAND5: number | null
        ABO_OBOROT_BRAND6: number | null
        ABO_OBOROT_NEXT: number | null
        ABO_SCORES_MONTH_PLAN_NEXT: number | null
        ABO_ABA_REMZONA_QTY: number | null
    }

    export type GA_ANKETA_OBOROTMaxAggregateOutputType = {
        ABO_ABA_ID: bigint | null
        ABO_DATETIME: Date | null
        ABO_OBOROT_ALL: number | null
        ABO_OBOROT_BRANDS_MONTH: number | null
        ABO_OBOROT_AE: number | null
        ABO_OBOROT_ROSSKO: number | null
        ABO_OBOROT_ARKONA: number | null
        ABO_OBOROT_AUTORUS: number | null
        ABO_SCORES_MONTH_PLAN: number | null
        ABO_SCORES_MONTH_FAKT: number | null
        ABO_COUNT_ROSSKO: number | null
        ABO_COUNT_AE: number | null
        ABO_COUNT_ARKONA: number | null
        ABO_COUNT_AUTORUS: number | null
        ABO_OBOROT_BRANDS: number | null
        ABO_OBOROT_BRAND_LOOK1: number | null
        ABO_SCORES: number | null
        ABO_OBOROT_BRAND_LOOK2: number | null
        ABO_OBOROT_BRAND_LOOK2_ROSSKO: number | null
        ABO_OBOROT_BRAND_LOOK2_AE: number | null
        ABO_OBOROT_BRAND_LOOK2_ARKONA: number | null
        ABO_OBOROT_BRAND_LOOK2_AUTORUS: number | null
        ABO_OBOROT_BRANDS_MONTH_ROSSKO: number | null
        ABO_OBOROT_BRANDS_MONTH_AE: number | null
        ABO_OBOROT_BRANDS_MONTH_ARKONA: number | null
        ABO_OBOROT_BRANDS_MONTH_AUTORUS: number | null
        ABO_OBOROT_BRAND1: number | null
        ABO_OBOROT_BRAND2: number | null
        ABO_OBOROT_BRAND3: number | null
        ABO_OBOROT_BRAND4: number | null
        ABO_OBOROT_BRAND5: number | null
        ABO_OBOROT_BRAND6: number | null
        ABO_OBOROT_NEXT: number | null
        ABO_SCORES_MONTH_PLAN_NEXT: number | null
        ABO_ABA_REMZONA_QTY: number | null
    }

    export type GA_ANKETA_OBOROTCountAggregateOutputType = {
        ABO_ABA_ID: number
        ABO_DATETIME: number
        ABO_OBOROT_ALL: number
        ABO_OBOROT_BRANDS_MONTH: number
        ABO_OBOROT_AE: number
        ABO_OBOROT_ROSSKO: number
        ABO_OBOROT_ARKONA: number
        ABO_OBOROT_AUTORUS: number
        ABO_SCORES_MONTH_PLAN: number
        ABO_SCORES_MONTH_FAKT: number
        ABO_COUNT_ROSSKO: number
        ABO_COUNT_AE: number
        ABO_COUNT_ARKONA: number
        ABO_COUNT_AUTORUS: number
        ABO_OBOROT_BRANDS: number
        ABO_OBOROT_BRAND_LOOK1: number
        ABO_SCORES: number
        ABO_OBOROT_BRAND_LOOK2: number
        ABO_OBOROT_BRAND_LOOK2_ROSSKO: number
        ABO_OBOROT_BRAND_LOOK2_AE: number
        ABO_OBOROT_BRAND_LOOK2_ARKONA: number
        ABO_OBOROT_BRAND_LOOK2_AUTORUS: number
        ABO_OBOROT_BRANDS_MONTH_ROSSKO: number
        ABO_OBOROT_BRANDS_MONTH_AE: number
        ABO_OBOROT_BRANDS_MONTH_ARKONA: number
        ABO_OBOROT_BRANDS_MONTH_AUTORUS: number
        ABO_OBOROT_BRAND1: number
        ABO_OBOROT_BRAND2: number
        ABO_OBOROT_BRAND3: number
        ABO_OBOROT_BRAND4: number
        ABO_OBOROT_BRAND5: number
        ABO_OBOROT_BRAND6: number
        ABO_OBOROT_NEXT: number
        ABO_SCORES_MONTH_PLAN_NEXT: number
        ABO_ABA_REMZONA_QTY: number
        _all: number
    }

    export type GA_ANKETA_OBOROTAvgAggregateInputType = {
        ABO_ABA_ID?: true
        ABO_OBOROT_ALL?: true
        ABO_OBOROT_BRANDS_MONTH?: true
        ABO_OBOROT_AE?: true
        ABO_OBOROT_ROSSKO?: true
        ABO_OBOROT_ARKONA?: true
        ABO_OBOROT_AUTORUS?: true
        ABO_SCORES_MONTH_PLAN?: true
        ABO_SCORES_MONTH_FAKT?: true
        ABO_COUNT_ROSSKO?: true
        ABO_COUNT_AE?: true
        ABO_COUNT_ARKONA?: true
        ABO_COUNT_AUTORUS?: true
        ABO_OBOROT_BRANDS?: true
        ABO_OBOROT_BRAND_LOOK1?: true
        ABO_SCORES?: true
        ABO_OBOROT_BRAND_LOOK2?: true
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: true
        ABO_OBOROT_BRAND_LOOK2_AE?: true
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: true
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: true
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: true
        ABO_OBOROT_BRANDS_MONTH_AE?: true
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: true
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: true
        ABO_OBOROT_BRAND1?: true
        ABO_OBOROT_BRAND2?: true
        ABO_OBOROT_BRAND3?: true
        ABO_OBOROT_BRAND4?: true
        ABO_OBOROT_BRAND5?: true
        ABO_OBOROT_BRAND6?: true
        ABO_OBOROT_NEXT?: true
        ABO_SCORES_MONTH_PLAN_NEXT?: true
        ABO_ABA_REMZONA_QTY?: true
    }

    export type GA_ANKETA_OBOROTSumAggregateInputType = {
        ABO_ABA_ID?: true
        ABO_OBOROT_ALL?: true
        ABO_OBOROT_BRANDS_MONTH?: true
        ABO_OBOROT_AE?: true
        ABO_OBOROT_ROSSKO?: true
        ABO_OBOROT_ARKONA?: true
        ABO_OBOROT_AUTORUS?: true
        ABO_SCORES_MONTH_PLAN?: true
        ABO_SCORES_MONTH_FAKT?: true
        ABO_COUNT_ROSSKO?: true
        ABO_COUNT_AE?: true
        ABO_COUNT_ARKONA?: true
        ABO_COUNT_AUTORUS?: true
        ABO_OBOROT_BRANDS?: true
        ABO_OBOROT_BRAND_LOOK1?: true
        ABO_SCORES?: true
        ABO_OBOROT_BRAND_LOOK2?: true
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: true
        ABO_OBOROT_BRAND_LOOK2_AE?: true
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: true
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: true
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: true
        ABO_OBOROT_BRANDS_MONTH_AE?: true
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: true
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: true
        ABO_OBOROT_BRAND1?: true
        ABO_OBOROT_BRAND2?: true
        ABO_OBOROT_BRAND3?: true
        ABO_OBOROT_BRAND4?: true
        ABO_OBOROT_BRAND5?: true
        ABO_OBOROT_BRAND6?: true
        ABO_OBOROT_NEXT?: true
        ABO_SCORES_MONTH_PLAN_NEXT?: true
        ABO_ABA_REMZONA_QTY?: true
    }

    export type GA_ANKETA_OBOROTMinAggregateInputType = {
        ABO_ABA_ID?: true
        ABO_DATETIME?: true
        ABO_OBOROT_ALL?: true
        ABO_OBOROT_BRANDS_MONTH?: true
        ABO_OBOROT_AE?: true
        ABO_OBOROT_ROSSKO?: true
        ABO_OBOROT_ARKONA?: true
        ABO_OBOROT_AUTORUS?: true
        ABO_SCORES_MONTH_PLAN?: true
        ABO_SCORES_MONTH_FAKT?: true
        ABO_COUNT_ROSSKO?: true
        ABO_COUNT_AE?: true
        ABO_COUNT_ARKONA?: true
        ABO_COUNT_AUTORUS?: true
        ABO_OBOROT_BRANDS?: true
        ABO_OBOROT_BRAND_LOOK1?: true
        ABO_SCORES?: true
        ABO_OBOROT_BRAND_LOOK2?: true
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: true
        ABO_OBOROT_BRAND_LOOK2_AE?: true
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: true
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: true
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: true
        ABO_OBOROT_BRANDS_MONTH_AE?: true
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: true
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: true
        ABO_OBOROT_BRAND1?: true
        ABO_OBOROT_BRAND2?: true
        ABO_OBOROT_BRAND3?: true
        ABO_OBOROT_BRAND4?: true
        ABO_OBOROT_BRAND5?: true
        ABO_OBOROT_BRAND6?: true
        ABO_OBOROT_NEXT?: true
        ABO_SCORES_MONTH_PLAN_NEXT?: true
        ABO_ABA_REMZONA_QTY?: true
    }

    export type GA_ANKETA_OBOROTMaxAggregateInputType = {
        ABO_ABA_ID?: true
        ABO_DATETIME?: true
        ABO_OBOROT_ALL?: true
        ABO_OBOROT_BRANDS_MONTH?: true
        ABO_OBOROT_AE?: true
        ABO_OBOROT_ROSSKO?: true
        ABO_OBOROT_ARKONA?: true
        ABO_OBOROT_AUTORUS?: true
        ABO_SCORES_MONTH_PLAN?: true
        ABO_SCORES_MONTH_FAKT?: true
        ABO_COUNT_ROSSKO?: true
        ABO_COUNT_AE?: true
        ABO_COUNT_ARKONA?: true
        ABO_COUNT_AUTORUS?: true
        ABO_OBOROT_BRANDS?: true
        ABO_OBOROT_BRAND_LOOK1?: true
        ABO_SCORES?: true
        ABO_OBOROT_BRAND_LOOK2?: true
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: true
        ABO_OBOROT_BRAND_LOOK2_AE?: true
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: true
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: true
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: true
        ABO_OBOROT_BRANDS_MONTH_AE?: true
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: true
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: true
        ABO_OBOROT_BRAND1?: true
        ABO_OBOROT_BRAND2?: true
        ABO_OBOROT_BRAND3?: true
        ABO_OBOROT_BRAND4?: true
        ABO_OBOROT_BRAND5?: true
        ABO_OBOROT_BRAND6?: true
        ABO_OBOROT_NEXT?: true
        ABO_SCORES_MONTH_PLAN_NEXT?: true
        ABO_ABA_REMZONA_QTY?: true
    }

    export type GA_ANKETA_OBOROTCountAggregateInputType = {
        ABO_ABA_ID?: true
        ABO_DATETIME?: true
        ABO_OBOROT_ALL?: true
        ABO_OBOROT_BRANDS_MONTH?: true
        ABO_OBOROT_AE?: true
        ABO_OBOROT_ROSSKO?: true
        ABO_OBOROT_ARKONA?: true
        ABO_OBOROT_AUTORUS?: true
        ABO_SCORES_MONTH_PLAN?: true
        ABO_SCORES_MONTH_FAKT?: true
        ABO_COUNT_ROSSKO?: true
        ABO_COUNT_AE?: true
        ABO_COUNT_ARKONA?: true
        ABO_COUNT_AUTORUS?: true
        ABO_OBOROT_BRANDS?: true
        ABO_OBOROT_BRAND_LOOK1?: true
        ABO_SCORES?: true
        ABO_OBOROT_BRAND_LOOK2?: true
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: true
        ABO_OBOROT_BRAND_LOOK2_AE?: true
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: true
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: true
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: true
        ABO_OBOROT_BRANDS_MONTH_AE?: true
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: true
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: true
        ABO_OBOROT_BRAND1?: true
        ABO_OBOROT_BRAND2?: true
        ABO_OBOROT_BRAND3?: true
        ABO_OBOROT_BRAND4?: true
        ABO_OBOROT_BRAND5?: true
        ABO_OBOROT_BRAND6?: true
        ABO_OBOROT_NEXT?: true
        ABO_SCORES_MONTH_PLAN_NEXT?: true
        ABO_ABA_REMZONA_QTY?: true
        _all?: true
    }

    export type GA_ANKETA_OBOROTAggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_OBOROT to aggregate.
         */
        where?: GA_ANKETA_OBOROTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROTS to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROTOrderByWithRelationInput
            | GA_ANKETA_OBOROTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_ANKETA_OBOROTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROTS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_ANKETA_OBOROTS
         **/
        _count?: true | GA_ANKETA_OBOROTCountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_ANKETA_OBOROTAvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_ANKETA_OBOROTSumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_ANKETA_OBOROTMinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_ANKETA_OBOROTMaxAggregateInputType
    }

    export type GetGA_ANKETA_OBOROTAggregateType<
        T extends GA_ANKETA_OBOROTAggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_ANKETA_OBOROT]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_ANKETA_OBOROT[P]>
            : GetScalarType<T[P], AggregateGA_ANKETA_OBOROT[P]>
    }

    export type GA_ANKETA_OBOROTGroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_ANKETA_OBOROTWhereInput
        orderBy?:
            | GA_ANKETA_OBOROTOrderByWithAggregationInput
            | GA_ANKETA_OBOROTOrderByWithAggregationInput[]
        by: GA_ANKETA_OBOROTScalarFieldEnum[] | GA_ANKETA_OBOROTScalarFieldEnum
        having?: GA_ANKETA_OBOROTScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_ANKETA_OBOROTCountAggregateInputType | true
        _avg?: GA_ANKETA_OBOROTAvgAggregateInputType
        _sum?: GA_ANKETA_OBOROTSumAggregateInputType
        _min?: GA_ANKETA_OBOROTMinAggregateInputType
        _max?: GA_ANKETA_OBOROTMaxAggregateInputType
    }

    export type GA_ANKETA_OBOROTGroupByOutputType = {
        ABO_ABA_ID: bigint
        ABO_DATETIME: Date
        ABO_OBOROT_ALL: number
        ABO_OBOROT_BRANDS_MONTH: number
        ABO_OBOROT_AE: number
        ABO_OBOROT_ROSSKO: number
        ABO_OBOROT_ARKONA: number
        ABO_OBOROT_AUTORUS: number
        ABO_SCORES_MONTH_PLAN: number
        ABO_SCORES_MONTH_FAKT: number
        ABO_COUNT_ROSSKO: number
        ABO_COUNT_AE: number
        ABO_COUNT_ARKONA: number
        ABO_COUNT_AUTORUS: number
        ABO_OBOROT_BRANDS: number
        ABO_OBOROT_BRAND_LOOK1: number
        ABO_SCORES: number
        ABO_OBOROT_BRAND_LOOK2: number | null
        ABO_OBOROT_BRAND_LOOK2_ROSSKO: number | null
        ABO_OBOROT_BRAND_LOOK2_AE: number | null
        ABO_OBOROT_BRAND_LOOK2_ARKONA: number | null
        ABO_OBOROT_BRAND_LOOK2_AUTORUS: number | null
        ABO_OBOROT_BRANDS_MONTH_ROSSKO: number | null
        ABO_OBOROT_BRANDS_MONTH_AE: number | null
        ABO_OBOROT_BRANDS_MONTH_ARKONA: number | null
        ABO_OBOROT_BRANDS_MONTH_AUTORUS: number | null
        ABO_OBOROT_BRAND1: number | null
        ABO_OBOROT_BRAND2: number | null
        ABO_OBOROT_BRAND3: number | null
        ABO_OBOROT_BRAND4: number | null
        ABO_OBOROT_BRAND5: number | null
        ABO_OBOROT_BRAND6: number | null
        ABO_OBOROT_NEXT: number | null
        ABO_SCORES_MONTH_PLAN_NEXT: number
        ABO_ABA_REMZONA_QTY: number | null
        _count: GA_ANKETA_OBOROTCountAggregateOutputType | null
        _avg: GA_ANKETA_OBOROTAvgAggregateOutputType | null
        _sum: GA_ANKETA_OBOROTSumAggregateOutputType | null
        _min: GA_ANKETA_OBOROTMinAggregateOutputType | null
        _max: GA_ANKETA_OBOROTMaxAggregateOutputType | null
    }

    type GetGA_ANKETA_OBOROTGroupByPayload<
        T extends GA_ANKETA_OBOROTGroupByArgs,
    > = Prisma.PrismaPromise<
        Array<
            PickEnumerable<GA_ANKETA_OBOROTGroupByOutputType, T['by']> & {
                [P in keyof T &
                    keyof GA_ANKETA_OBOROTGroupByOutputType]: P extends '_count'
                    ? T[P] extends boolean
                        ? number
                        : GetScalarType<
                              T[P],
                              GA_ANKETA_OBOROTGroupByOutputType[P]
                          >
                    : GetScalarType<T[P], GA_ANKETA_OBOROTGroupByOutputType[P]>
            }
        >
    >

    export type GA_ANKETA_OBOROTSelect<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            ABO_ABA_ID?: boolean
            ABO_DATETIME?: boolean
            ABO_OBOROT_ALL?: boolean
            ABO_OBOROT_BRANDS_MONTH?: boolean
            ABO_OBOROT_AE?: boolean
            ABO_OBOROT_ROSSKO?: boolean
            ABO_OBOROT_ARKONA?: boolean
            ABO_OBOROT_AUTORUS?: boolean
            ABO_SCORES_MONTH_PLAN?: boolean
            ABO_SCORES_MONTH_FAKT?: boolean
            ABO_COUNT_ROSSKO?: boolean
            ABO_COUNT_AE?: boolean
            ABO_COUNT_ARKONA?: boolean
            ABO_COUNT_AUTORUS?: boolean
            ABO_OBOROT_BRANDS?: boolean
            ABO_OBOROT_BRAND_LOOK1?: boolean
            ABO_SCORES?: boolean
            ABO_OBOROT_BRAND_LOOK2?: boolean
            ABO_OBOROT_BRAND_LOOK2_ROSSKO?: boolean
            ABO_OBOROT_BRAND_LOOK2_AE?: boolean
            ABO_OBOROT_BRAND_LOOK2_ARKONA?: boolean
            ABO_OBOROT_BRAND_LOOK2_AUTORUS?: boolean
            ABO_OBOROT_BRANDS_MONTH_ROSSKO?: boolean
            ABO_OBOROT_BRANDS_MONTH_AE?: boolean
            ABO_OBOROT_BRANDS_MONTH_ARKONA?: boolean
            ABO_OBOROT_BRANDS_MONTH_AUTORUS?: boolean
            ABO_OBOROT_BRAND1?: boolean
            ABO_OBOROT_BRAND2?: boolean
            ABO_OBOROT_BRAND3?: boolean
            ABO_OBOROT_BRAND4?: boolean
            ABO_OBOROT_BRAND5?: boolean
            ABO_OBOROT_BRAND6?: boolean
            ABO_OBOROT_NEXT?: boolean
            ABO_SCORES_MONTH_PLAN_NEXT?: boolean
            ABO_ABA_REMZONA_QTY?: boolean
        },
        ExtArgs['result']['gA_ANKETA_OBOROT']
    >

    export type GA_ANKETA_OBOROTSelectScalar = {
        ABO_ABA_ID?: boolean
        ABO_DATETIME?: boolean
        ABO_OBOROT_ALL?: boolean
        ABO_OBOROT_BRANDS_MONTH?: boolean
        ABO_OBOROT_AE?: boolean
        ABO_OBOROT_ROSSKO?: boolean
        ABO_OBOROT_ARKONA?: boolean
        ABO_OBOROT_AUTORUS?: boolean
        ABO_SCORES_MONTH_PLAN?: boolean
        ABO_SCORES_MONTH_FAKT?: boolean
        ABO_COUNT_ROSSKO?: boolean
        ABO_COUNT_AE?: boolean
        ABO_COUNT_ARKONA?: boolean
        ABO_COUNT_AUTORUS?: boolean
        ABO_OBOROT_BRANDS?: boolean
        ABO_OBOROT_BRAND_LOOK1?: boolean
        ABO_SCORES?: boolean
        ABO_OBOROT_BRAND_LOOK2?: boolean
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: boolean
        ABO_OBOROT_BRAND_LOOK2_AE?: boolean
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: boolean
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: boolean
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: boolean
        ABO_OBOROT_BRANDS_MONTH_AE?: boolean
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: boolean
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: boolean
        ABO_OBOROT_BRAND1?: boolean
        ABO_OBOROT_BRAND2?: boolean
        ABO_OBOROT_BRAND3?: boolean
        ABO_OBOROT_BRAND4?: boolean
        ABO_OBOROT_BRAND5?: boolean
        ABO_OBOROT_BRAND6?: boolean
        ABO_OBOROT_NEXT?: boolean
        ABO_SCORES_MONTH_PLAN_NEXT?: boolean
        ABO_ABA_REMZONA_QTY?: boolean
    }

    export type $GA_ANKETA_OBOROTPayload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_ANKETA_OBOROT'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                ABO_ABA_ID: bigint
                ABO_DATETIME: Date
                ABO_OBOROT_ALL: number
                ABO_OBOROT_BRANDS_MONTH: number
                ABO_OBOROT_AE: number
                ABO_OBOROT_ROSSKO: number
                ABO_OBOROT_ARKONA: number
                ABO_OBOROT_AUTORUS: number
                ABO_SCORES_MONTH_PLAN: number
                ABO_SCORES_MONTH_FAKT: number
                ABO_COUNT_ROSSKO: number
                ABO_COUNT_AE: number
                ABO_COUNT_ARKONA: number
                ABO_COUNT_AUTORUS: number
                ABO_OBOROT_BRANDS: number
                ABO_OBOROT_BRAND_LOOK1: number
                ABO_SCORES: number
                ABO_OBOROT_BRAND_LOOK2: number | null
                ABO_OBOROT_BRAND_LOOK2_ROSSKO: number | null
                ABO_OBOROT_BRAND_LOOK2_AE: number | null
                ABO_OBOROT_BRAND_LOOK2_ARKONA: number | null
                ABO_OBOROT_BRAND_LOOK2_AUTORUS: number | null
                ABO_OBOROT_BRANDS_MONTH_ROSSKO: number | null
                ABO_OBOROT_BRANDS_MONTH_AE: number | null
                ABO_OBOROT_BRANDS_MONTH_ARKONA: number | null
                ABO_OBOROT_BRANDS_MONTH_AUTORUS: number | null
                ABO_OBOROT_BRAND1: number | null
                ABO_OBOROT_BRAND2: number | null
                ABO_OBOROT_BRAND3: number | null
                ABO_OBOROT_BRAND4: number | null
                ABO_OBOROT_BRAND5: number | null
                ABO_OBOROT_BRAND6: number | null
                ABO_OBOROT_NEXT: number | null
                ABO_SCORES_MONTH_PLAN_NEXT: number
                ABO_ABA_REMZONA_QTY: number | null
            },
            ExtArgs['result']['gA_ANKETA_OBOROT']
        >
        composites: {}
    }

    type GA_ANKETA_OBOROTGetPayload<
        S extends boolean | null | undefined | GA_ANKETA_OBOROTDefaultArgs,
    > = $Result.GetResult<Prisma.$GA_ANKETA_OBOROTPayload, S>

    type GA_ANKETA_OBOROTCountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<
        GA_ANKETA_OBOROTFindManyArgs,
        'select' | 'include' | 'distinct'
    > & {
        select?: GA_ANKETA_OBOROTCountAggregateInputType | true
    }

    export interface GA_ANKETA_OBOROTDelegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_ANKETA_OBOROT']
            meta: { name: 'GA_ANKETA_OBOROT' }
        }
        /**
         * Find zero or one GA_ANKETA_OBOROT that matches the filter.
         * @param {GA_ANKETA_OBOROTFindUniqueArgs} args - Arguments to find a GA_ANKETA_OBOROT
         * @example
         * // Get one GA_ANKETA_OBOROT
         * const gA_ANKETA_OBOROT = await prisma.gA_ANKETA_OBOROT.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_ANKETA_OBOROTFindUniqueArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROTFindUniqueArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROTClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROTPayload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_ANKETA_OBOROT that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_ANKETA_OBOROTFindUniqueOrThrowArgs} args - Arguments to find a GA_ANKETA_OBOROT
         * @example
         * // Get one GA_ANKETA_OBOROT
         * const gA_ANKETA_OBOROT = await prisma.gA_ANKETA_OBOROT.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_ANKETA_OBOROTFindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROTFindUniqueOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_OBOROTClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROTPayload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_OBOROT that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROTFindFirstArgs} args - Arguments to find a GA_ANKETA_OBOROT
         * @example
         * // Get one GA_ANKETA_OBOROT
         * const gA_ANKETA_OBOROT = await prisma.gA_ANKETA_OBOROT.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_ANKETA_OBOROTFindFirstArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_OBOROTFindFirstArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROTClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROTPayload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_OBOROT that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROTFindFirstOrThrowArgs} args - Arguments to find a GA_ANKETA_OBOROT
         * @example
         * // Get one GA_ANKETA_OBOROT
         * const gA_ANKETA_OBOROT = await prisma.gA_ANKETA_OBOROT.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<
            T extends GA_ANKETA_OBOROTFindFirstOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROTFindFirstOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_OBOROTClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROTPayload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_ANKETA_OBOROTS that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROTFindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_ANKETA_OBOROTS
         * const gA_ANKETA_OBOROTS = await prisma.gA_ANKETA_OBOROT.findMany()
         *
         * // Get first 10 GA_ANKETA_OBOROTS
         * const gA_ANKETA_OBOROTS = await prisma.gA_ANKETA_OBOROT.findMany({ take: 10 })
         *
         * // Only select the `ABO_ABA_ID`
         * const gA_ANKETA_OBOROTWithABO_ABA_IDOnly = await prisma.gA_ANKETA_OBOROT.findMany({ select: { ABO_ABA_ID: true } })
         *
         **/
        findMany<T extends GA_ANKETA_OBOROTFindManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_OBOROTFindManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROTPayload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_ANKETA_OBOROT.
         * @param {GA_ANKETA_OBOROTCreateArgs} args - Arguments to create a GA_ANKETA_OBOROT.
         * @example
         * // Create one GA_ANKETA_OBOROT
         * const GA_ANKETA_OBOROT = await prisma.gA_ANKETA_OBOROT.create({
         *   data: {
         *     // ... data to create a GA_ANKETA_OBOROT
         *   }
         * })
         *
         **/
        create<T extends GA_ANKETA_OBOROTCreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROTCreateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROTClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROTPayload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_ANKETA_OBOROTS.
         *     @param {GA_ANKETA_OBOROTCreateManyArgs} args - Arguments to create many GA_ANKETA_OBOROTS.
         *     @example
         *     // Create many GA_ANKETA_OBOROTS
         *     const gA_ANKETA_OBOROT = await prisma.gA_ANKETA_OBOROT.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_ANKETA_OBOROTCreateManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_OBOROTCreateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_ANKETA_OBOROT.
         * @param {GA_ANKETA_OBOROTDeleteArgs} args - Arguments to delete one GA_ANKETA_OBOROT.
         * @example
         * // Delete one GA_ANKETA_OBOROT
         * const GA_ANKETA_OBOROT = await prisma.gA_ANKETA_OBOROT.delete({
         *   where: {
         *     // ... filter to delete one GA_ANKETA_OBOROT
         *   }
         * })
         *
         **/
        delete<T extends GA_ANKETA_OBOROTDeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROTDeleteArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROTClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROTPayload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_ANKETA_OBOROT.
         * @param {GA_ANKETA_OBOROTUpdateArgs} args - Arguments to update one GA_ANKETA_OBOROT.
         * @example
         * // Update one GA_ANKETA_OBOROT
         * const gA_ANKETA_OBOROT = await prisma.gA_ANKETA_OBOROT.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_ANKETA_OBOROTUpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROTUpdateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROTClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROTPayload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_ANKETA_OBOROTS.
         * @param {GA_ANKETA_OBOROTDeleteManyArgs} args - Arguments to filter GA_ANKETA_OBOROTS to delete.
         * @example
         * // Delete a few GA_ANKETA_OBOROTS
         * const { count } = await prisma.gA_ANKETA_OBOROT.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_ANKETA_OBOROTDeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_OBOROTDeleteManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_ANKETA_OBOROTS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROTUpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_ANKETA_OBOROTS
         * const gA_ANKETA_OBOROT = await prisma.gA_ANKETA_OBOROT.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_ANKETA_OBOROTUpdateManyArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROTUpdateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_ANKETA_OBOROT.
         * @param {GA_ANKETA_OBOROTUpsertArgs} args - Arguments to update or create a GA_ANKETA_OBOROT.
         * @example
         * // Update or create a GA_ANKETA_OBOROT
         * const gA_ANKETA_OBOROT = await prisma.gA_ANKETA_OBOROT.upsert({
         *   create: {
         *     // ... data to create a GA_ANKETA_OBOROT
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_ANKETA_OBOROT we want to update
         *   }
         * })
         **/
        upsert<T extends GA_ANKETA_OBOROTUpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROTUpsertArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROTClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROTPayload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_ANKETA_OBOROTS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROTCountArgs} args - Arguments to filter GA_ANKETA_OBOROTS to count.
         * @example
         * // Count the number of GA_ANKETA_OBOROTS
         * const count = await prisma.gA_ANKETA_OBOROT.count({
         *   where: {
         *     // ... the filter for the GA_ANKETA_OBOROTS we want to count
         *   }
         * })
         **/
        count<T extends GA_ANKETA_OBOROTCountArgs>(
            args?: Subset<T, GA_ANKETA_OBOROTCountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_ANKETA_OBOROTCountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_ANKETA_OBOROT.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROTAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_ANKETA_OBOROTAggregateArgs>(
            args: Subset<T, GA_ANKETA_OBOROTAggregateArgs>
        ): Prisma.PrismaPromise<GetGA_ANKETA_OBOROTAggregateType<T>>

        /**
         * Group by GA_ANKETA_OBOROT.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROTGroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_ANKETA_OBOROTGroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_ANKETA_OBOROTGroupByArgs['orderBy'] }
                : { orderBy?: GA_ANKETA_OBOROTGroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<
                T,
                GA_ANKETA_OBOROTGroupByArgs,
                OrderByArg
            > &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_ANKETA_OBOROTGroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_ANKETA_OBOROT model
         */
        readonly fields: GA_ANKETA_OBOROTFieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_ANKETA_OBOROT.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_ANKETA_OBOROTClient<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_ANKETA_OBOROT model
     */
    interface GA_ANKETA_OBOROTFieldRefs {
        readonly ABO_ABA_ID: FieldRef<'GA_ANKETA_OBOROT', 'BigInt'>
        readonly ABO_DATETIME: FieldRef<'GA_ANKETA_OBOROT', 'DateTime'>
        readonly ABO_OBOROT_ALL: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_OBOROT_BRANDS_MONTH: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_OBOROT_AE: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_OBOROT_ROSSKO: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_OBOROT_ARKONA: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_OBOROT_AUTORUS: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_SCORES_MONTH_PLAN: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_SCORES_MONTH_FAKT: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_COUNT_ROSSKO: FieldRef<'GA_ANKETA_OBOROT', 'Int'>
        readonly ABO_COUNT_AE: FieldRef<'GA_ANKETA_OBOROT', 'Int'>
        readonly ABO_COUNT_ARKONA: FieldRef<'GA_ANKETA_OBOROT', 'Int'>
        readonly ABO_COUNT_AUTORUS: FieldRef<'GA_ANKETA_OBOROT', 'Int'>
        readonly ABO_OBOROT_BRANDS: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_OBOROT_BRAND_LOOK1: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_SCORES: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_OBOROT_BRAND_LOOK2: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_OBOROT_BRAND_LOOK2_ROSSKO: FieldRef<
            'GA_ANKETA_OBOROT',
            'Float'
        >
        readonly ABO_OBOROT_BRAND_LOOK2_AE: FieldRef<
            'GA_ANKETA_OBOROT',
            'Float'
        >
        readonly ABO_OBOROT_BRAND_LOOK2_ARKONA: FieldRef<
            'GA_ANKETA_OBOROT',
            'Float'
        >
        readonly ABO_OBOROT_BRAND_LOOK2_AUTORUS: FieldRef<
            'GA_ANKETA_OBOROT',
            'Float'
        >
        readonly ABO_OBOROT_BRANDS_MONTH_ROSSKO: FieldRef<
            'GA_ANKETA_OBOROT',
            'Float'
        >
        readonly ABO_OBOROT_BRANDS_MONTH_AE: FieldRef<
            'GA_ANKETA_OBOROT',
            'Float'
        >
        readonly ABO_OBOROT_BRANDS_MONTH_ARKONA: FieldRef<
            'GA_ANKETA_OBOROT',
            'Float'
        >
        readonly ABO_OBOROT_BRANDS_MONTH_AUTORUS: FieldRef<
            'GA_ANKETA_OBOROT',
            'Float'
        >
        readonly ABO_OBOROT_BRAND1: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_OBOROT_BRAND2: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_OBOROT_BRAND3: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_OBOROT_BRAND4: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_OBOROT_BRAND5: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_OBOROT_BRAND6: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_OBOROT_NEXT: FieldRef<'GA_ANKETA_OBOROT', 'Float'>
        readonly ABO_SCORES_MONTH_PLAN_NEXT: FieldRef<
            'GA_ANKETA_OBOROT',
            'Float'
        >
        readonly ABO_ABA_REMZONA_QTY: FieldRef<'GA_ANKETA_OBOROT', 'Int'>
    }

    // Custom InputTypes

    /**
     * GA_ANKETA_OBOROT findUnique
     */
    export type GA_ANKETA_OBOROTFindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT
         */
        select?: GA_ANKETA_OBOROTSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT to fetch.
         */
        where: GA_ANKETA_OBOROTWhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT findUniqueOrThrow
     */
    export type GA_ANKETA_OBOROTFindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT
         */
        select?: GA_ANKETA_OBOROTSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT to fetch.
         */
        where: GA_ANKETA_OBOROTWhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT findFirst
     */
    export type GA_ANKETA_OBOROTFindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT
         */
        select?: GA_ANKETA_OBOROTSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT to fetch.
         */
        where?: GA_ANKETA_OBOROTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROTS to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROTOrderByWithRelationInput
            | GA_ANKETA_OBOROTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_OBOROTS.
         */
        cursor?: GA_ANKETA_OBOROTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROTS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_OBOROTS.
         */
        distinct?:
            | GA_ANKETA_OBOROTScalarFieldEnum
            | GA_ANKETA_OBOROTScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_OBOROT findFirstOrThrow
     */
    export type GA_ANKETA_OBOROTFindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT
         */
        select?: GA_ANKETA_OBOROTSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT to fetch.
         */
        where?: GA_ANKETA_OBOROTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROTS to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROTOrderByWithRelationInput
            | GA_ANKETA_OBOROTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_OBOROTS.
         */
        cursor?: GA_ANKETA_OBOROTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROTS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_OBOROTS.
         */
        distinct?:
            | GA_ANKETA_OBOROTScalarFieldEnum
            | GA_ANKETA_OBOROTScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_OBOROT findMany
     */
    export type GA_ANKETA_OBOROTFindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT
         */
        select?: GA_ANKETA_OBOROTSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROTS to fetch.
         */
        where?: GA_ANKETA_OBOROTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROTS to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROTOrderByWithRelationInput
            | GA_ANKETA_OBOROTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_ANKETA_OBOROTS.
         */
        cursor?: GA_ANKETA_OBOROTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROTS.
         */
        skip?: number
        distinct?:
            | GA_ANKETA_OBOROTScalarFieldEnum
            | GA_ANKETA_OBOROTScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_OBOROT create
     */
    export type GA_ANKETA_OBOROTCreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT
         */
        select?: GA_ANKETA_OBOROTSelect<ExtArgs> | null
        /**
         * The data needed to create a GA_ANKETA_OBOROT.
         */
        data: XOR<
            GA_ANKETA_OBOROTCreateInput,
            GA_ANKETA_OBOROTUncheckedCreateInput
        >
    }

    /**
     * GA_ANKETA_OBOROT createMany
     */
    export type GA_ANKETA_OBOROTCreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_ANKETA_OBOROTS.
         */
        data:
            | GA_ANKETA_OBOROTCreateManyInput
            | GA_ANKETA_OBOROTCreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_ANKETA_OBOROT update
     */
    export type GA_ANKETA_OBOROTUpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT
         */
        select?: GA_ANKETA_OBOROTSelect<ExtArgs> | null
        /**
         * The data needed to update a GA_ANKETA_OBOROT.
         */
        data: XOR<
            GA_ANKETA_OBOROTUpdateInput,
            GA_ANKETA_OBOROTUncheckedUpdateInput
        >
        /**
         * Choose, which GA_ANKETA_OBOROT to update.
         */
        where: GA_ANKETA_OBOROTWhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT updateMany
     */
    export type GA_ANKETA_OBOROTUpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_ANKETA_OBOROTS.
         */
        data: XOR<
            GA_ANKETA_OBOROTUpdateManyMutationInput,
            GA_ANKETA_OBOROTUncheckedUpdateManyInput
        >
        /**
         * Filter which GA_ANKETA_OBOROTS to update
         */
        where?: GA_ANKETA_OBOROTWhereInput
    }

    /**
     * GA_ANKETA_OBOROT upsert
     */
    export type GA_ANKETA_OBOROTUpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT
         */
        select?: GA_ANKETA_OBOROTSelect<ExtArgs> | null
        /**
         * The filter to search for the GA_ANKETA_OBOROT to update in case it exists.
         */
        where: GA_ANKETA_OBOROTWhereUniqueInput
        /**
         * In case the GA_ANKETA_OBOROT found by the `where` argument doesn't exist, create a new GA_ANKETA_OBOROT with this data.
         */
        create: XOR<
            GA_ANKETA_OBOROTCreateInput,
            GA_ANKETA_OBOROTUncheckedCreateInput
        >
        /**
         * In case the GA_ANKETA_OBOROT was found with the provided `where` argument, update it with this data.
         */
        update: XOR<
            GA_ANKETA_OBOROTUpdateInput,
            GA_ANKETA_OBOROTUncheckedUpdateInput
        >
    }

    /**
     * GA_ANKETA_OBOROT delete
     */
    export type GA_ANKETA_OBOROTDeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT
         */
        select?: GA_ANKETA_OBOROTSelect<ExtArgs> | null
        /**
         * Filter which GA_ANKETA_OBOROT to delete.
         */
        where: GA_ANKETA_OBOROTWhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT deleteMany
     */
    export type GA_ANKETA_OBOROTDeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_OBOROTS to delete
         */
        where?: GA_ANKETA_OBOROTWhereInput
    }

    /**
     * GA_ANKETA_OBOROT without action
     */
    export type GA_ANKETA_OBOROTDefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT
         */
        select?: GA_ANKETA_OBOROTSelect<ExtArgs> | null
    }

    /**
     * Model GA_ANKETA_OBOROT_BRANDS
     */

    export type AggregateGA_ANKETA_OBOROT_BRANDS = {
        _count: GA_ANKETA_OBOROT_BRANDSCountAggregateOutputType | null
        _avg: GA_ANKETA_OBOROT_BRANDSAvgAggregateOutputType | null
        _sum: GA_ANKETA_OBOROT_BRANDSSumAggregateOutputType | null
        _min: GA_ANKETA_OBOROT_BRANDSMinAggregateOutputType | null
        _max: GA_ANKETA_OBOROT_BRANDSMaxAggregateOutputType | null
    }

    export type GA_ANKETA_OBOROT_BRANDSAvgAggregateOutputType = {
        AOB_ABA_ID: number | null
        AOB_ALL_24189: number | null
        AOB_50011_24189: number | null
        AOB_50012_24189: number | null
        AOB_50013_24189: number | null
        AOB_50014_24189: number | null
        AOB_ALL_10566: number | null
        AOB_50011_10566: number | null
        AOB_50012_10566: number | null
        AOB_50013_10566: number | null
        AOB_50014_10566: number | null
        AOB_ALL_20079: number | null
        AOB_50011_20079: number | null
        AOB_50012_20079: number | null
        AOB_50013_20079: number | null
        AOB_50014_20079: number | null
        AOB_ALL_7251: number | null
        AOB_50011_7251: number | null
        AOB_50012_7251: number | null
        AOB_50013_7251: number | null
        AOB_50014_7251: number | null
        AOB_ALL_24191: number | null
        AOB_50011_24191: number | null
        AOB_50012_24191: number | null
        AOB_50013_24191: number | null
        AOB_50014_24191: number | null
        AOB_ALL_193: number | null
        AOB_50011_193: number | null
        AOB_50012_193: number | null
        AOB_50013_193: number | null
        AOB_50014_193: number | null
        AOB_ALL_7610: number | null
        AOB_50011_7610: number | null
        AOB_50012_7610: number | null
        AOB_50013_7610: number | null
        AOB_50014_7610: number | null
        AOB_ALL_10180: number | null
        AOB_50011_10180: number | null
        AOB_50012_10180: number | null
        AOB_50013_10180: number | null
        AOB_50014_10180: number | null
        AOB_ALL_177: number | null
        AOB_50011_177: number | null
        AOB_50012_177: number | null
        AOB_50013_177: number | null
        AOB_50014_177: number | null
        AOB_ALL_10223: number | null
        AOB_50011_10223: number | null
        AOB_50012_10223: number | null
        AOB_50013_10223: number | null
        AOB_50014_10223: number | null
        AOB_ALL_7230: number | null
        AOB_50011_7230: number | null
        AOB_50012_7230: number | null
        AOB_50013_7230: number | null
        AOB_50014_7230: number | null
        AOB_ALL_1359: number | null
        AOB_50011_1359: number | null
        AOB_50012_1359: number | null
        AOB_50013_1359: number | null
        AOB_50014_1359: number | null
        AOB_ALL_110: number | null
        AOB_50011_110: number | null
        AOB_50012_110: number | null
        AOB_50013_110: number | null
        AOB_50014_110: number | null
        AOB_ALL_20182: number | null
        AOB_50011_20182: number | null
        AOB_50012_20182: number | null
        AOB_50013_20182: number | null
        AOB_50014_20182: number | null
        AOB_ALL_20203: number | null
        AOB_50011_20203: number | null
        AOB_50012_20203: number | null
        AOB_50013_20203: number | null
        AOB_50014_20203: number | null
        AOB_ALL_24155: number | null
        AOB_50011_24155: number | null
        AOB_50012_24155: number | null
        AOB_50013_24155: number | null
        AOB_50014_24155: number | null
        AOB_ALL_24198: number | null
        AOB_50011_24198: number | null
        AOB_50012_24198: number | null
        AOB_50013_24198: number | null
        AOB_50014_24198: number | null
        AOB_ALL_135: number | null
        AOB_50011_135: number | null
        AOB_50012_135: number | null
        AOB_50013_135: number | null
        AOB_50014_135: number | null
        AOB_ALL_24196: number | null
        AOB_50011_24196: number | null
        AOB_50012_24196: number | null
        AOB_50013_24196: number | null
        AOB_50014_24196: number | null
        AOB_ALL_24197: number | null
        AOB_50011_24197: number | null
        AOB_50012_24197: number | null
        AOB_50013_24197: number | null
        AOB_50014_24197: number | null
        AOB_ALL_21: number | null
        AOB_50011_21: number | null
        AOB_50012_21: number | null
        AOB_50013_21: number | null
        AOB_50014_21: number | null
    }

    export type GA_ANKETA_OBOROT_BRANDSSumAggregateOutputType = {
        AOB_ABA_ID: bigint | null
        AOB_ALL_24189: number | null
        AOB_50011_24189: number | null
        AOB_50012_24189: number | null
        AOB_50013_24189: number | null
        AOB_50014_24189: number | null
        AOB_ALL_10566: number | null
        AOB_50011_10566: number | null
        AOB_50012_10566: number | null
        AOB_50013_10566: number | null
        AOB_50014_10566: number | null
        AOB_ALL_20079: number | null
        AOB_50011_20079: number | null
        AOB_50012_20079: number | null
        AOB_50013_20079: number | null
        AOB_50014_20079: number | null
        AOB_ALL_7251: number | null
        AOB_50011_7251: number | null
        AOB_50012_7251: number | null
        AOB_50013_7251: number | null
        AOB_50014_7251: number | null
        AOB_ALL_24191: number | null
        AOB_50011_24191: number | null
        AOB_50012_24191: number | null
        AOB_50013_24191: number | null
        AOB_50014_24191: number | null
        AOB_ALL_193: number | null
        AOB_50011_193: number | null
        AOB_50012_193: number | null
        AOB_50013_193: number | null
        AOB_50014_193: number | null
        AOB_ALL_7610: number | null
        AOB_50011_7610: number | null
        AOB_50012_7610: number | null
        AOB_50013_7610: number | null
        AOB_50014_7610: number | null
        AOB_ALL_10180: number | null
        AOB_50011_10180: number | null
        AOB_50012_10180: number | null
        AOB_50013_10180: number | null
        AOB_50014_10180: number | null
        AOB_ALL_177: number | null
        AOB_50011_177: number | null
        AOB_50012_177: number | null
        AOB_50013_177: number | null
        AOB_50014_177: number | null
        AOB_ALL_10223: number | null
        AOB_50011_10223: number | null
        AOB_50012_10223: number | null
        AOB_50013_10223: number | null
        AOB_50014_10223: number | null
        AOB_ALL_7230: number | null
        AOB_50011_7230: number | null
        AOB_50012_7230: number | null
        AOB_50013_7230: number | null
        AOB_50014_7230: number | null
        AOB_ALL_1359: number | null
        AOB_50011_1359: number | null
        AOB_50012_1359: number | null
        AOB_50013_1359: number | null
        AOB_50014_1359: number | null
        AOB_ALL_110: number | null
        AOB_50011_110: number | null
        AOB_50012_110: number | null
        AOB_50013_110: number | null
        AOB_50014_110: number | null
        AOB_ALL_20182: number | null
        AOB_50011_20182: number | null
        AOB_50012_20182: number | null
        AOB_50013_20182: number | null
        AOB_50014_20182: number | null
        AOB_ALL_20203: number | null
        AOB_50011_20203: number | null
        AOB_50012_20203: number | null
        AOB_50013_20203: number | null
        AOB_50014_20203: number | null
        AOB_ALL_24155: number | null
        AOB_50011_24155: number | null
        AOB_50012_24155: number | null
        AOB_50013_24155: number | null
        AOB_50014_24155: number | null
        AOB_ALL_24198: number | null
        AOB_50011_24198: number | null
        AOB_50012_24198: number | null
        AOB_50013_24198: number | null
        AOB_50014_24198: number | null
        AOB_ALL_135: number | null
        AOB_50011_135: number | null
        AOB_50012_135: number | null
        AOB_50013_135: number | null
        AOB_50014_135: number | null
        AOB_ALL_24196: number | null
        AOB_50011_24196: number | null
        AOB_50012_24196: number | null
        AOB_50013_24196: number | null
        AOB_50014_24196: number | null
        AOB_ALL_24197: number | null
        AOB_50011_24197: number | null
        AOB_50012_24197: number | null
        AOB_50013_24197: number | null
        AOB_50014_24197: number | null
        AOB_ALL_21: number | null
        AOB_50011_21: number | null
        AOB_50012_21: number | null
        AOB_50013_21: number | null
        AOB_50014_21: number | null
    }

    export type GA_ANKETA_OBOROT_BRANDSMinAggregateOutputType = {
        AOB_ABA_ID: bigint | null
        AOB_DATETIME: Date | null
        AOB_ALL_24189: number | null
        AOB_50011_24189: number | null
        AOB_50012_24189: number | null
        AOB_50013_24189: number | null
        AOB_50014_24189: number | null
        AOB_ALL_10566: number | null
        AOB_50011_10566: number | null
        AOB_50012_10566: number | null
        AOB_50013_10566: number | null
        AOB_50014_10566: number | null
        AOB_ALL_20079: number | null
        AOB_50011_20079: number | null
        AOB_50012_20079: number | null
        AOB_50013_20079: number | null
        AOB_50014_20079: number | null
        AOB_ALL_7251: number | null
        AOB_50011_7251: number | null
        AOB_50012_7251: number | null
        AOB_50013_7251: number | null
        AOB_50014_7251: number | null
        AOB_ALL_24191: number | null
        AOB_50011_24191: number | null
        AOB_50012_24191: number | null
        AOB_50013_24191: number | null
        AOB_50014_24191: number | null
        AOB_ALL_193: number | null
        AOB_50011_193: number | null
        AOB_50012_193: number | null
        AOB_50013_193: number | null
        AOB_50014_193: number | null
        AOB_ALL_7610: number | null
        AOB_50011_7610: number | null
        AOB_50012_7610: number | null
        AOB_50013_7610: number | null
        AOB_50014_7610: number | null
        AOB_ALL_10180: number | null
        AOB_50011_10180: number | null
        AOB_50012_10180: number | null
        AOB_50013_10180: number | null
        AOB_50014_10180: number | null
        AOB_ALL_177: number | null
        AOB_50011_177: number | null
        AOB_50012_177: number | null
        AOB_50013_177: number | null
        AOB_50014_177: number | null
        AOB_ALL_10223: number | null
        AOB_50011_10223: number | null
        AOB_50012_10223: number | null
        AOB_50013_10223: number | null
        AOB_50014_10223: number | null
        AOB_ALL_7230: number | null
        AOB_50011_7230: number | null
        AOB_50012_7230: number | null
        AOB_50013_7230: number | null
        AOB_50014_7230: number | null
        AOB_ALL_1359: number | null
        AOB_50011_1359: number | null
        AOB_50012_1359: number | null
        AOB_50013_1359: number | null
        AOB_50014_1359: number | null
        AOB_ALL_110: number | null
        AOB_50011_110: number | null
        AOB_50012_110: number | null
        AOB_50013_110: number | null
        AOB_50014_110: number | null
        AOB_ALL_20182: number | null
        AOB_50011_20182: number | null
        AOB_50012_20182: number | null
        AOB_50013_20182: number | null
        AOB_50014_20182: number | null
        AOB_ALL_20203: number | null
        AOB_50011_20203: number | null
        AOB_50012_20203: number | null
        AOB_50013_20203: number | null
        AOB_50014_20203: number | null
        AOB_ALL_24155: number | null
        AOB_50011_24155: number | null
        AOB_50012_24155: number | null
        AOB_50013_24155: number | null
        AOB_50014_24155: number | null
        AOB_ALL_24198: number | null
        AOB_50011_24198: number | null
        AOB_50012_24198: number | null
        AOB_50013_24198: number | null
        AOB_50014_24198: number | null
        AOB_ALL_135: number | null
        AOB_50011_135: number | null
        AOB_50012_135: number | null
        AOB_50013_135: number | null
        AOB_50014_135: number | null
        AOB_ALL_24196: number | null
        AOB_50011_24196: number | null
        AOB_50012_24196: number | null
        AOB_50013_24196: number | null
        AOB_50014_24196: number | null
        AOB_ALL_24197: number | null
        AOB_50011_24197: number | null
        AOB_50012_24197: number | null
        AOB_50013_24197: number | null
        AOB_50014_24197: number | null
        AOB_ALL_21: number | null
        AOB_50011_21: number | null
        AOB_50012_21: number | null
        AOB_50013_21: number | null
        AOB_50014_21: number | null
    }

    export type GA_ANKETA_OBOROT_BRANDSMaxAggregateOutputType = {
        AOB_ABA_ID: bigint | null
        AOB_DATETIME: Date | null
        AOB_ALL_24189: number | null
        AOB_50011_24189: number | null
        AOB_50012_24189: number | null
        AOB_50013_24189: number | null
        AOB_50014_24189: number | null
        AOB_ALL_10566: number | null
        AOB_50011_10566: number | null
        AOB_50012_10566: number | null
        AOB_50013_10566: number | null
        AOB_50014_10566: number | null
        AOB_ALL_20079: number | null
        AOB_50011_20079: number | null
        AOB_50012_20079: number | null
        AOB_50013_20079: number | null
        AOB_50014_20079: number | null
        AOB_ALL_7251: number | null
        AOB_50011_7251: number | null
        AOB_50012_7251: number | null
        AOB_50013_7251: number | null
        AOB_50014_7251: number | null
        AOB_ALL_24191: number | null
        AOB_50011_24191: number | null
        AOB_50012_24191: number | null
        AOB_50013_24191: number | null
        AOB_50014_24191: number | null
        AOB_ALL_193: number | null
        AOB_50011_193: number | null
        AOB_50012_193: number | null
        AOB_50013_193: number | null
        AOB_50014_193: number | null
        AOB_ALL_7610: number | null
        AOB_50011_7610: number | null
        AOB_50012_7610: number | null
        AOB_50013_7610: number | null
        AOB_50014_7610: number | null
        AOB_ALL_10180: number | null
        AOB_50011_10180: number | null
        AOB_50012_10180: number | null
        AOB_50013_10180: number | null
        AOB_50014_10180: number | null
        AOB_ALL_177: number | null
        AOB_50011_177: number | null
        AOB_50012_177: number | null
        AOB_50013_177: number | null
        AOB_50014_177: number | null
        AOB_ALL_10223: number | null
        AOB_50011_10223: number | null
        AOB_50012_10223: number | null
        AOB_50013_10223: number | null
        AOB_50014_10223: number | null
        AOB_ALL_7230: number | null
        AOB_50011_7230: number | null
        AOB_50012_7230: number | null
        AOB_50013_7230: number | null
        AOB_50014_7230: number | null
        AOB_ALL_1359: number | null
        AOB_50011_1359: number | null
        AOB_50012_1359: number | null
        AOB_50013_1359: number | null
        AOB_50014_1359: number | null
        AOB_ALL_110: number | null
        AOB_50011_110: number | null
        AOB_50012_110: number | null
        AOB_50013_110: number | null
        AOB_50014_110: number | null
        AOB_ALL_20182: number | null
        AOB_50011_20182: number | null
        AOB_50012_20182: number | null
        AOB_50013_20182: number | null
        AOB_50014_20182: number | null
        AOB_ALL_20203: number | null
        AOB_50011_20203: number | null
        AOB_50012_20203: number | null
        AOB_50013_20203: number | null
        AOB_50014_20203: number | null
        AOB_ALL_24155: number | null
        AOB_50011_24155: number | null
        AOB_50012_24155: number | null
        AOB_50013_24155: number | null
        AOB_50014_24155: number | null
        AOB_ALL_24198: number | null
        AOB_50011_24198: number | null
        AOB_50012_24198: number | null
        AOB_50013_24198: number | null
        AOB_50014_24198: number | null
        AOB_ALL_135: number | null
        AOB_50011_135: number | null
        AOB_50012_135: number | null
        AOB_50013_135: number | null
        AOB_50014_135: number | null
        AOB_ALL_24196: number | null
        AOB_50011_24196: number | null
        AOB_50012_24196: number | null
        AOB_50013_24196: number | null
        AOB_50014_24196: number | null
        AOB_ALL_24197: number | null
        AOB_50011_24197: number | null
        AOB_50012_24197: number | null
        AOB_50013_24197: number | null
        AOB_50014_24197: number | null
        AOB_ALL_21: number | null
        AOB_50011_21: number | null
        AOB_50012_21: number | null
        AOB_50013_21: number | null
        AOB_50014_21: number | null
    }

    export type GA_ANKETA_OBOROT_BRANDSCountAggregateOutputType = {
        AOB_ABA_ID: number
        AOB_DATETIME: number
        AOB_ALL_24189: number
        AOB_50011_24189: number
        AOB_50012_24189: number
        AOB_50013_24189: number
        AOB_50014_24189: number
        AOB_ALL_10566: number
        AOB_50011_10566: number
        AOB_50012_10566: number
        AOB_50013_10566: number
        AOB_50014_10566: number
        AOB_ALL_20079: number
        AOB_50011_20079: number
        AOB_50012_20079: number
        AOB_50013_20079: number
        AOB_50014_20079: number
        AOB_ALL_7251: number
        AOB_50011_7251: number
        AOB_50012_7251: number
        AOB_50013_7251: number
        AOB_50014_7251: number
        AOB_ALL_24191: number
        AOB_50011_24191: number
        AOB_50012_24191: number
        AOB_50013_24191: number
        AOB_50014_24191: number
        AOB_ALL_193: number
        AOB_50011_193: number
        AOB_50012_193: number
        AOB_50013_193: number
        AOB_50014_193: number
        AOB_ALL_7610: number
        AOB_50011_7610: number
        AOB_50012_7610: number
        AOB_50013_7610: number
        AOB_50014_7610: number
        AOB_ALL_10180: number
        AOB_50011_10180: number
        AOB_50012_10180: number
        AOB_50013_10180: number
        AOB_50014_10180: number
        AOB_ALL_177: number
        AOB_50011_177: number
        AOB_50012_177: number
        AOB_50013_177: number
        AOB_50014_177: number
        AOB_ALL_10223: number
        AOB_50011_10223: number
        AOB_50012_10223: number
        AOB_50013_10223: number
        AOB_50014_10223: number
        AOB_ALL_7230: number
        AOB_50011_7230: number
        AOB_50012_7230: number
        AOB_50013_7230: number
        AOB_50014_7230: number
        AOB_ALL_1359: number
        AOB_50011_1359: number
        AOB_50012_1359: number
        AOB_50013_1359: number
        AOB_50014_1359: number
        AOB_ALL_110: number
        AOB_50011_110: number
        AOB_50012_110: number
        AOB_50013_110: number
        AOB_50014_110: number
        AOB_ALL_20182: number
        AOB_50011_20182: number
        AOB_50012_20182: number
        AOB_50013_20182: number
        AOB_50014_20182: number
        AOB_ALL_20203: number
        AOB_50011_20203: number
        AOB_50012_20203: number
        AOB_50013_20203: number
        AOB_50014_20203: number
        AOB_ALL_24155: number
        AOB_50011_24155: number
        AOB_50012_24155: number
        AOB_50013_24155: number
        AOB_50014_24155: number
        AOB_ALL_24198: number
        AOB_50011_24198: number
        AOB_50012_24198: number
        AOB_50013_24198: number
        AOB_50014_24198: number
        AOB_ALL_135: number
        AOB_50011_135: number
        AOB_50012_135: number
        AOB_50013_135: number
        AOB_50014_135: number
        AOB_ALL_24196: number
        AOB_50011_24196: number
        AOB_50012_24196: number
        AOB_50013_24196: number
        AOB_50014_24196: number
        AOB_ALL_24197: number
        AOB_50011_24197: number
        AOB_50012_24197: number
        AOB_50013_24197: number
        AOB_50014_24197: number
        AOB_ALL_21: number
        AOB_50011_21: number
        AOB_50012_21: number
        AOB_50013_21: number
        AOB_50014_21: number
        _all: number
    }

    export type GA_ANKETA_OBOROT_BRANDSAvgAggregateInputType = {
        AOB_ABA_ID?: true
        AOB_ALL_24189?: true
        AOB_50011_24189?: true
        AOB_50012_24189?: true
        AOB_50013_24189?: true
        AOB_50014_24189?: true
        AOB_ALL_10566?: true
        AOB_50011_10566?: true
        AOB_50012_10566?: true
        AOB_50013_10566?: true
        AOB_50014_10566?: true
        AOB_ALL_20079?: true
        AOB_50011_20079?: true
        AOB_50012_20079?: true
        AOB_50013_20079?: true
        AOB_50014_20079?: true
        AOB_ALL_7251?: true
        AOB_50011_7251?: true
        AOB_50012_7251?: true
        AOB_50013_7251?: true
        AOB_50014_7251?: true
        AOB_ALL_24191?: true
        AOB_50011_24191?: true
        AOB_50012_24191?: true
        AOB_50013_24191?: true
        AOB_50014_24191?: true
        AOB_ALL_193?: true
        AOB_50011_193?: true
        AOB_50012_193?: true
        AOB_50013_193?: true
        AOB_50014_193?: true
        AOB_ALL_7610?: true
        AOB_50011_7610?: true
        AOB_50012_7610?: true
        AOB_50013_7610?: true
        AOB_50014_7610?: true
        AOB_ALL_10180?: true
        AOB_50011_10180?: true
        AOB_50012_10180?: true
        AOB_50013_10180?: true
        AOB_50014_10180?: true
        AOB_ALL_177?: true
        AOB_50011_177?: true
        AOB_50012_177?: true
        AOB_50013_177?: true
        AOB_50014_177?: true
        AOB_ALL_10223?: true
        AOB_50011_10223?: true
        AOB_50012_10223?: true
        AOB_50013_10223?: true
        AOB_50014_10223?: true
        AOB_ALL_7230?: true
        AOB_50011_7230?: true
        AOB_50012_7230?: true
        AOB_50013_7230?: true
        AOB_50014_7230?: true
        AOB_ALL_1359?: true
        AOB_50011_1359?: true
        AOB_50012_1359?: true
        AOB_50013_1359?: true
        AOB_50014_1359?: true
        AOB_ALL_110?: true
        AOB_50011_110?: true
        AOB_50012_110?: true
        AOB_50013_110?: true
        AOB_50014_110?: true
        AOB_ALL_20182?: true
        AOB_50011_20182?: true
        AOB_50012_20182?: true
        AOB_50013_20182?: true
        AOB_50014_20182?: true
        AOB_ALL_20203?: true
        AOB_50011_20203?: true
        AOB_50012_20203?: true
        AOB_50013_20203?: true
        AOB_50014_20203?: true
        AOB_ALL_24155?: true
        AOB_50011_24155?: true
        AOB_50012_24155?: true
        AOB_50013_24155?: true
        AOB_50014_24155?: true
        AOB_ALL_24198?: true
        AOB_50011_24198?: true
        AOB_50012_24198?: true
        AOB_50013_24198?: true
        AOB_50014_24198?: true
        AOB_ALL_135?: true
        AOB_50011_135?: true
        AOB_50012_135?: true
        AOB_50013_135?: true
        AOB_50014_135?: true
        AOB_ALL_24196?: true
        AOB_50011_24196?: true
        AOB_50012_24196?: true
        AOB_50013_24196?: true
        AOB_50014_24196?: true
        AOB_ALL_24197?: true
        AOB_50011_24197?: true
        AOB_50012_24197?: true
        AOB_50013_24197?: true
        AOB_50014_24197?: true
        AOB_ALL_21?: true
        AOB_50011_21?: true
        AOB_50012_21?: true
        AOB_50013_21?: true
        AOB_50014_21?: true
    }

    export type GA_ANKETA_OBOROT_BRANDSSumAggregateInputType = {
        AOB_ABA_ID?: true
        AOB_ALL_24189?: true
        AOB_50011_24189?: true
        AOB_50012_24189?: true
        AOB_50013_24189?: true
        AOB_50014_24189?: true
        AOB_ALL_10566?: true
        AOB_50011_10566?: true
        AOB_50012_10566?: true
        AOB_50013_10566?: true
        AOB_50014_10566?: true
        AOB_ALL_20079?: true
        AOB_50011_20079?: true
        AOB_50012_20079?: true
        AOB_50013_20079?: true
        AOB_50014_20079?: true
        AOB_ALL_7251?: true
        AOB_50011_7251?: true
        AOB_50012_7251?: true
        AOB_50013_7251?: true
        AOB_50014_7251?: true
        AOB_ALL_24191?: true
        AOB_50011_24191?: true
        AOB_50012_24191?: true
        AOB_50013_24191?: true
        AOB_50014_24191?: true
        AOB_ALL_193?: true
        AOB_50011_193?: true
        AOB_50012_193?: true
        AOB_50013_193?: true
        AOB_50014_193?: true
        AOB_ALL_7610?: true
        AOB_50011_7610?: true
        AOB_50012_7610?: true
        AOB_50013_7610?: true
        AOB_50014_7610?: true
        AOB_ALL_10180?: true
        AOB_50011_10180?: true
        AOB_50012_10180?: true
        AOB_50013_10180?: true
        AOB_50014_10180?: true
        AOB_ALL_177?: true
        AOB_50011_177?: true
        AOB_50012_177?: true
        AOB_50013_177?: true
        AOB_50014_177?: true
        AOB_ALL_10223?: true
        AOB_50011_10223?: true
        AOB_50012_10223?: true
        AOB_50013_10223?: true
        AOB_50014_10223?: true
        AOB_ALL_7230?: true
        AOB_50011_7230?: true
        AOB_50012_7230?: true
        AOB_50013_7230?: true
        AOB_50014_7230?: true
        AOB_ALL_1359?: true
        AOB_50011_1359?: true
        AOB_50012_1359?: true
        AOB_50013_1359?: true
        AOB_50014_1359?: true
        AOB_ALL_110?: true
        AOB_50011_110?: true
        AOB_50012_110?: true
        AOB_50013_110?: true
        AOB_50014_110?: true
        AOB_ALL_20182?: true
        AOB_50011_20182?: true
        AOB_50012_20182?: true
        AOB_50013_20182?: true
        AOB_50014_20182?: true
        AOB_ALL_20203?: true
        AOB_50011_20203?: true
        AOB_50012_20203?: true
        AOB_50013_20203?: true
        AOB_50014_20203?: true
        AOB_ALL_24155?: true
        AOB_50011_24155?: true
        AOB_50012_24155?: true
        AOB_50013_24155?: true
        AOB_50014_24155?: true
        AOB_ALL_24198?: true
        AOB_50011_24198?: true
        AOB_50012_24198?: true
        AOB_50013_24198?: true
        AOB_50014_24198?: true
        AOB_ALL_135?: true
        AOB_50011_135?: true
        AOB_50012_135?: true
        AOB_50013_135?: true
        AOB_50014_135?: true
        AOB_ALL_24196?: true
        AOB_50011_24196?: true
        AOB_50012_24196?: true
        AOB_50013_24196?: true
        AOB_50014_24196?: true
        AOB_ALL_24197?: true
        AOB_50011_24197?: true
        AOB_50012_24197?: true
        AOB_50013_24197?: true
        AOB_50014_24197?: true
        AOB_ALL_21?: true
        AOB_50011_21?: true
        AOB_50012_21?: true
        AOB_50013_21?: true
        AOB_50014_21?: true
    }

    export type GA_ANKETA_OBOROT_BRANDSMinAggregateInputType = {
        AOB_ABA_ID?: true
        AOB_DATETIME?: true
        AOB_ALL_24189?: true
        AOB_50011_24189?: true
        AOB_50012_24189?: true
        AOB_50013_24189?: true
        AOB_50014_24189?: true
        AOB_ALL_10566?: true
        AOB_50011_10566?: true
        AOB_50012_10566?: true
        AOB_50013_10566?: true
        AOB_50014_10566?: true
        AOB_ALL_20079?: true
        AOB_50011_20079?: true
        AOB_50012_20079?: true
        AOB_50013_20079?: true
        AOB_50014_20079?: true
        AOB_ALL_7251?: true
        AOB_50011_7251?: true
        AOB_50012_7251?: true
        AOB_50013_7251?: true
        AOB_50014_7251?: true
        AOB_ALL_24191?: true
        AOB_50011_24191?: true
        AOB_50012_24191?: true
        AOB_50013_24191?: true
        AOB_50014_24191?: true
        AOB_ALL_193?: true
        AOB_50011_193?: true
        AOB_50012_193?: true
        AOB_50013_193?: true
        AOB_50014_193?: true
        AOB_ALL_7610?: true
        AOB_50011_7610?: true
        AOB_50012_7610?: true
        AOB_50013_7610?: true
        AOB_50014_7610?: true
        AOB_ALL_10180?: true
        AOB_50011_10180?: true
        AOB_50012_10180?: true
        AOB_50013_10180?: true
        AOB_50014_10180?: true
        AOB_ALL_177?: true
        AOB_50011_177?: true
        AOB_50012_177?: true
        AOB_50013_177?: true
        AOB_50014_177?: true
        AOB_ALL_10223?: true
        AOB_50011_10223?: true
        AOB_50012_10223?: true
        AOB_50013_10223?: true
        AOB_50014_10223?: true
        AOB_ALL_7230?: true
        AOB_50011_7230?: true
        AOB_50012_7230?: true
        AOB_50013_7230?: true
        AOB_50014_7230?: true
        AOB_ALL_1359?: true
        AOB_50011_1359?: true
        AOB_50012_1359?: true
        AOB_50013_1359?: true
        AOB_50014_1359?: true
        AOB_ALL_110?: true
        AOB_50011_110?: true
        AOB_50012_110?: true
        AOB_50013_110?: true
        AOB_50014_110?: true
        AOB_ALL_20182?: true
        AOB_50011_20182?: true
        AOB_50012_20182?: true
        AOB_50013_20182?: true
        AOB_50014_20182?: true
        AOB_ALL_20203?: true
        AOB_50011_20203?: true
        AOB_50012_20203?: true
        AOB_50013_20203?: true
        AOB_50014_20203?: true
        AOB_ALL_24155?: true
        AOB_50011_24155?: true
        AOB_50012_24155?: true
        AOB_50013_24155?: true
        AOB_50014_24155?: true
        AOB_ALL_24198?: true
        AOB_50011_24198?: true
        AOB_50012_24198?: true
        AOB_50013_24198?: true
        AOB_50014_24198?: true
        AOB_ALL_135?: true
        AOB_50011_135?: true
        AOB_50012_135?: true
        AOB_50013_135?: true
        AOB_50014_135?: true
        AOB_ALL_24196?: true
        AOB_50011_24196?: true
        AOB_50012_24196?: true
        AOB_50013_24196?: true
        AOB_50014_24196?: true
        AOB_ALL_24197?: true
        AOB_50011_24197?: true
        AOB_50012_24197?: true
        AOB_50013_24197?: true
        AOB_50014_24197?: true
        AOB_ALL_21?: true
        AOB_50011_21?: true
        AOB_50012_21?: true
        AOB_50013_21?: true
        AOB_50014_21?: true
    }

    export type GA_ANKETA_OBOROT_BRANDSMaxAggregateInputType = {
        AOB_ABA_ID?: true
        AOB_DATETIME?: true
        AOB_ALL_24189?: true
        AOB_50011_24189?: true
        AOB_50012_24189?: true
        AOB_50013_24189?: true
        AOB_50014_24189?: true
        AOB_ALL_10566?: true
        AOB_50011_10566?: true
        AOB_50012_10566?: true
        AOB_50013_10566?: true
        AOB_50014_10566?: true
        AOB_ALL_20079?: true
        AOB_50011_20079?: true
        AOB_50012_20079?: true
        AOB_50013_20079?: true
        AOB_50014_20079?: true
        AOB_ALL_7251?: true
        AOB_50011_7251?: true
        AOB_50012_7251?: true
        AOB_50013_7251?: true
        AOB_50014_7251?: true
        AOB_ALL_24191?: true
        AOB_50011_24191?: true
        AOB_50012_24191?: true
        AOB_50013_24191?: true
        AOB_50014_24191?: true
        AOB_ALL_193?: true
        AOB_50011_193?: true
        AOB_50012_193?: true
        AOB_50013_193?: true
        AOB_50014_193?: true
        AOB_ALL_7610?: true
        AOB_50011_7610?: true
        AOB_50012_7610?: true
        AOB_50013_7610?: true
        AOB_50014_7610?: true
        AOB_ALL_10180?: true
        AOB_50011_10180?: true
        AOB_50012_10180?: true
        AOB_50013_10180?: true
        AOB_50014_10180?: true
        AOB_ALL_177?: true
        AOB_50011_177?: true
        AOB_50012_177?: true
        AOB_50013_177?: true
        AOB_50014_177?: true
        AOB_ALL_10223?: true
        AOB_50011_10223?: true
        AOB_50012_10223?: true
        AOB_50013_10223?: true
        AOB_50014_10223?: true
        AOB_ALL_7230?: true
        AOB_50011_7230?: true
        AOB_50012_7230?: true
        AOB_50013_7230?: true
        AOB_50014_7230?: true
        AOB_ALL_1359?: true
        AOB_50011_1359?: true
        AOB_50012_1359?: true
        AOB_50013_1359?: true
        AOB_50014_1359?: true
        AOB_ALL_110?: true
        AOB_50011_110?: true
        AOB_50012_110?: true
        AOB_50013_110?: true
        AOB_50014_110?: true
        AOB_ALL_20182?: true
        AOB_50011_20182?: true
        AOB_50012_20182?: true
        AOB_50013_20182?: true
        AOB_50014_20182?: true
        AOB_ALL_20203?: true
        AOB_50011_20203?: true
        AOB_50012_20203?: true
        AOB_50013_20203?: true
        AOB_50014_20203?: true
        AOB_ALL_24155?: true
        AOB_50011_24155?: true
        AOB_50012_24155?: true
        AOB_50013_24155?: true
        AOB_50014_24155?: true
        AOB_ALL_24198?: true
        AOB_50011_24198?: true
        AOB_50012_24198?: true
        AOB_50013_24198?: true
        AOB_50014_24198?: true
        AOB_ALL_135?: true
        AOB_50011_135?: true
        AOB_50012_135?: true
        AOB_50013_135?: true
        AOB_50014_135?: true
        AOB_ALL_24196?: true
        AOB_50011_24196?: true
        AOB_50012_24196?: true
        AOB_50013_24196?: true
        AOB_50014_24196?: true
        AOB_ALL_24197?: true
        AOB_50011_24197?: true
        AOB_50012_24197?: true
        AOB_50013_24197?: true
        AOB_50014_24197?: true
        AOB_ALL_21?: true
        AOB_50011_21?: true
        AOB_50012_21?: true
        AOB_50013_21?: true
        AOB_50014_21?: true
    }

    export type GA_ANKETA_OBOROT_BRANDSCountAggregateInputType = {
        AOB_ABA_ID?: true
        AOB_DATETIME?: true
        AOB_ALL_24189?: true
        AOB_50011_24189?: true
        AOB_50012_24189?: true
        AOB_50013_24189?: true
        AOB_50014_24189?: true
        AOB_ALL_10566?: true
        AOB_50011_10566?: true
        AOB_50012_10566?: true
        AOB_50013_10566?: true
        AOB_50014_10566?: true
        AOB_ALL_20079?: true
        AOB_50011_20079?: true
        AOB_50012_20079?: true
        AOB_50013_20079?: true
        AOB_50014_20079?: true
        AOB_ALL_7251?: true
        AOB_50011_7251?: true
        AOB_50012_7251?: true
        AOB_50013_7251?: true
        AOB_50014_7251?: true
        AOB_ALL_24191?: true
        AOB_50011_24191?: true
        AOB_50012_24191?: true
        AOB_50013_24191?: true
        AOB_50014_24191?: true
        AOB_ALL_193?: true
        AOB_50011_193?: true
        AOB_50012_193?: true
        AOB_50013_193?: true
        AOB_50014_193?: true
        AOB_ALL_7610?: true
        AOB_50011_7610?: true
        AOB_50012_7610?: true
        AOB_50013_7610?: true
        AOB_50014_7610?: true
        AOB_ALL_10180?: true
        AOB_50011_10180?: true
        AOB_50012_10180?: true
        AOB_50013_10180?: true
        AOB_50014_10180?: true
        AOB_ALL_177?: true
        AOB_50011_177?: true
        AOB_50012_177?: true
        AOB_50013_177?: true
        AOB_50014_177?: true
        AOB_ALL_10223?: true
        AOB_50011_10223?: true
        AOB_50012_10223?: true
        AOB_50013_10223?: true
        AOB_50014_10223?: true
        AOB_ALL_7230?: true
        AOB_50011_7230?: true
        AOB_50012_7230?: true
        AOB_50013_7230?: true
        AOB_50014_7230?: true
        AOB_ALL_1359?: true
        AOB_50011_1359?: true
        AOB_50012_1359?: true
        AOB_50013_1359?: true
        AOB_50014_1359?: true
        AOB_ALL_110?: true
        AOB_50011_110?: true
        AOB_50012_110?: true
        AOB_50013_110?: true
        AOB_50014_110?: true
        AOB_ALL_20182?: true
        AOB_50011_20182?: true
        AOB_50012_20182?: true
        AOB_50013_20182?: true
        AOB_50014_20182?: true
        AOB_ALL_20203?: true
        AOB_50011_20203?: true
        AOB_50012_20203?: true
        AOB_50013_20203?: true
        AOB_50014_20203?: true
        AOB_ALL_24155?: true
        AOB_50011_24155?: true
        AOB_50012_24155?: true
        AOB_50013_24155?: true
        AOB_50014_24155?: true
        AOB_ALL_24198?: true
        AOB_50011_24198?: true
        AOB_50012_24198?: true
        AOB_50013_24198?: true
        AOB_50014_24198?: true
        AOB_ALL_135?: true
        AOB_50011_135?: true
        AOB_50012_135?: true
        AOB_50013_135?: true
        AOB_50014_135?: true
        AOB_ALL_24196?: true
        AOB_50011_24196?: true
        AOB_50012_24196?: true
        AOB_50013_24196?: true
        AOB_50014_24196?: true
        AOB_ALL_24197?: true
        AOB_50011_24197?: true
        AOB_50012_24197?: true
        AOB_50013_24197?: true
        AOB_50014_24197?: true
        AOB_ALL_21?: true
        AOB_50011_21?: true
        AOB_50012_21?: true
        AOB_50013_21?: true
        AOB_50014_21?: true
        _all?: true
    }

    export type GA_ANKETA_OBOROT_BRANDSAggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_OBOROT_BRANDS to aggregate.
         */
        where?: GA_ANKETA_OBOROT_BRANDSWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROT_BRANDS to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROT_BRANDSOrderByWithRelationInput
            | GA_ANKETA_OBOROT_BRANDSOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_ANKETA_OBOROT_BRANDSWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROT_BRANDS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROT_BRANDS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_ANKETA_OBOROT_BRANDS
         **/
        _count?: true | GA_ANKETA_OBOROT_BRANDSCountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_ANKETA_OBOROT_BRANDSAvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_ANKETA_OBOROT_BRANDSSumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_ANKETA_OBOROT_BRANDSMinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_ANKETA_OBOROT_BRANDSMaxAggregateInputType
    }

    export type GetGA_ANKETA_OBOROT_BRANDSAggregateType<
        T extends GA_ANKETA_OBOROT_BRANDSAggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_ANKETA_OBOROT_BRANDS]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_ANKETA_OBOROT_BRANDS[P]>
            : GetScalarType<T[P], AggregateGA_ANKETA_OBOROT_BRANDS[P]>
    }

    export type GA_ANKETA_OBOROT_BRANDSGroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_ANKETA_OBOROT_BRANDSWhereInput
        orderBy?:
            | GA_ANKETA_OBOROT_BRANDSOrderByWithAggregationInput
            | GA_ANKETA_OBOROT_BRANDSOrderByWithAggregationInput[]
        by:
            | GA_ANKETA_OBOROT_BRANDSScalarFieldEnum[]
            | GA_ANKETA_OBOROT_BRANDSScalarFieldEnum
        having?: GA_ANKETA_OBOROT_BRANDSScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_ANKETA_OBOROT_BRANDSCountAggregateInputType | true
        _avg?: GA_ANKETA_OBOROT_BRANDSAvgAggregateInputType
        _sum?: GA_ANKETA_OBOROT_BRANDSSumAggregateInputType
        _min?: GA_ANKETA_OBOROT_BRANDSMinAggregateInputType
        _max?: GA_ANKETA_OBOROT_BRANDSMaxAggregateInputType
    }

    export type GA_ANKETA_OBOROT_BRANDSGroupByOutputType = {
        AOB_ABA_ID: bigint
        AOB_DATETIME: Date
        AOB_ALL_24189: number
        AOB_50011_24189: number
        AOB_50012_24189: number
        AOB_50013_24189: number
        AOB_50014_24189: number
        AOB_ALL_10566: number
        AOB_50011_10566: number
        AOB_50012_10566: number
        AOB_50013_10566: number
        AOB_50014_10566: number
        AOB_ALL_20079: number
        AOB_50011_20079: number
        AOB_50012_20079: number
        AOB_50013_20079: number
        AOB_50014_20079: number
        AOB_ALL_7251: number
        AOB_50011_7251: number
        AOB_50012_7251: number
        AOB_50013_7251: number
        AOB_50014_7251: number
        AOB_ALL_24191: number
        AOB_50011_24191: number
        AOB_50012_24191: number
        AOB_50013_24191: number
        AOB_50014_24191: number
        AOB_ALL_193: number
        AOB_50011_193: number
        AOB_50012_193: number
        AOB_50013_193: number
        AOB_50014_193: number
        AOB_ALL_7610: number
        AOB_50011_7610: number
        AOB_50012_7610: number
        AOB_50013_7610: number
        AOB_50014_7610: number
        AOB_ALL_10180: number
        AOB_50011_10180: number
        AOB_50012_10180: number
        AOB_50013_10180: number
        AOB_50014_10180: number
        AOB_ALL_177: number
        AOB_50011_177: number
        AOB_50012_177: number
        AOB_50013_177: number
        AOB_50014_177: number
        AOB_ALL_10223: number
        AOB_50011_10223: number
        AOB_50012_10223: number
        AOB_50013_10223: number
        AOB_50014_10223: number
        AOB_ALL_7230: number
        AOB_50011_7230: number
        AOB_50012_7230: number
        AOB_50013_7230: number
        AOB_50014_7230: number
        AOB_ALL_1359: number
        AOB_50011_1359: number
        AOB_50012_1359: number
        AOB_50013_1359: number
        AOB_50014_1359: number
        AOB_ALL_110: number
        AOB_50011_110: number
        AOB_50012_110: number
        AOB_50013_110: number
        AOB_50014_110: number
        AOB_ALL_20182: number
        AOB_50011_20182: number
        AOB_50012_20182: number
        AOB_50013_20182: number
        AOB_50014_20182: number
        AOB_ALL_20203: number
        AOB_50011_20203: number
        AOB_50012_20203: number
        AOB_50013_20203: number
        AOB_50014_20203: number
        AOB_ALL_24155: number
        AOB_50011_24155: number
        AOB_50012_24155: number
        AOB_50013_24155: number
        AOB_50014_24155: number
        AOB_ALL_24198: number
        AOB_50011_24198: number
        AOB_50012_24198: number
        AOB_50013_24198: number
        AOB_50014_24198: number
        AOB_ALL_135: number
        AOB_50011_135: number
        AOB_50012_135: number
        AOB_50013_135: number
        AOB_50014_135: number
        AOB_ALL_24196: number
        AOB_50011_24196: number
        AOB_50012_24196: number
        AOB_50013_24196: number
        AOB_50014_24196: number
        AOB_ALL_24197: number
        AOB_50011_24197: number
        AOB_50012_24197: number
        AOB_50013_24197: number
        AOB_50014_24197: number
        AOB_ALL_21: number
        AOB_50011_21: number
        AOB_50012_21: number
        AOB_50013_21: number
        AOB_50014_21: number
        _count: GA_ANKETA_OBOROT_BRANDSCountAggregateOutputType | null
        _avg: GA_ANKETA_OBOROT_BRANDSAvgAggregateOutputType | null
        _sum: GA_ANKETA_OBOROT_BRANDSSumAggregateOutputType | null
        _min: GA_ANKETA_OBOROT_BRANDSMinAggregateOutputType | null
        _max: GA_ANKETA_OBOROT_BRANDSMaxAggregateOutputType | null
    }

    type GetGA_ANKETA_OBOROT_BRANDSGroupByPayload<
        T extends GA_ANKETA_OBOROT_BRANDSGroupByArgs,
    > = Prisma.PrismaPromise<
        Array<
            PickEnumerable<
                GA_ANKETA_OBOROT_BRANDSGroupByOutputType,
                T['by']
            > & {
                [P in keyof T &
                    keyof GA_ANKETA_OBOROT_BRANDSGroupByOutputType]: P extends '_count'
                    ? T[P] extends boolean
                        ? number
                        : GetScalarType<
                              T[P],
                              GA_ANKETA_OBOROT_BRANDSGroupByOutputType[P]
                          >
                    : GetScalarType<
                          T[P],
                          GA_ANKETA_OBOROT_BRANDSGroupByOutputType[P]
                      >
            }
        >
    >

    export type GA_ANKETA_OBOROT_BRANDSSelect<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            AOB_ABA_ID?: boolean
            AOB_DATETIME?: boolean
            AOB_ALL_24189?: boolean
            AOB_50011_24189?: boolean
            AOB_50012_24189?: boolean
            AOB_50013_24189?: boolean
            AOB_50014_24189?: boolean
            AOB_ALL_10566?: boolean
            AOB_50011_10566?: boolean
            AOB_50012_10566?: boolean
            AOB_50013_10566?: boolean
            AOB_50014_10566?: boolean
            AOB_ALL_20079?: boolean
            AOB_50011_20079?: boolean
            AOB_50012_20079?: boolean
            AOB_50013_20079?: boolean
            AOB_50014_20079?: boolean
            AOB_ALL_7251?: boolean
            AOB_50011_7251?: boolean
            AOB_50012_7251?: boolean
            AOB_50013_7251?: boolean
            AOB_50014_7251?: boolean
            AOB_ALL_24191?: boolean
            AOB_50011_24191?: boolean
            AOB_50012_24191?: boolean
            AOB_50013_24191?: boolean
            AOB_50014_24191?: boolean
            AOB_ALL_193?: boolean
            AOB_50011_193?: boolean
            AOB_50012_193?: boolean
            AOB_50013_193?: boolean
            AOB_50014_193?: boolean
            AOB_ALL_7610?: boolean
            AOB_50011_7610?: boolean
            AOB_50012_7610?: boolean
            AOB_50013_7610?: boolean
            AOB_50014_7610?: boolean
            AOB_ALL_10180?: boolean
            AOB_50011_10180?: boolean
            AOB_50012_10180?: boolean
            AOB_50013_10180?: boolean
            AOB_50014_10180?: boolean
            AOB_ALL_177?: boolean
            AOB_50011_177?: boolean
            AOB_50012_177?: boolean
            AOB_50013_177?: boolean
            AOB_50014_177?: boolean
            AOB_ALL_10223?: boolean
            AOB_50011_10223?: boolean
            AOB_50012_10223?: boolean
            AOB_50013_10223?: boolean
            AOB_50014_10223?: boolean
            AOB_ALL_7230?: boolean
            AOB_50011_7230?: boolean
            AOB_50012_7230?: boolean
            AOB_50013_7230?: boolean
            AOB_50014_7230?: boolean
            AOB_ALL_1359?: boolean
            AOB_50011_1359?: boolean
            AOB_50012_1359?: boolean
            AOB_50013_1359?: boolean
            AOB_50014_1359?: boolean
            AOB_ALL_110?: boolean
            AOB_50011_110?: boolean
            AOB_50012_110?: boolean
            AOB_50013_110?: boolean
            AOB_50014_110?: boolean
            AOB_ALL_20182?: boolean
            AOB_50011_20182?: boolean
            AOB_50012_20182?: boolean
            AOB_50013_20182?: boolean
            AOB_50014_20182?: boolean
            AOB_ALL_20203?: boolean
            AOB_50011_20203?: boolean
            AOB_50012_20203?: boolean
            AOB_50013_20203?: boolean
            AOB_50014_20203?: boolean
            AOB_ALL_24155?: boolean
            AOB_50011_24155?: boolean
            AOB_50012_24155?: boolean
            AOB_50013_24155?: boolean
            AOB_50014_24155?: boolean
            AOB_ALL_24198?: boolean
            AOB_50011_24198?: boolean
            AOB_50012_24198?: boolean
            AOB_50013_24198?: boolean
            AOB_50014_24198?: boolean
            AOB_ALL_135?: boolean
            AOB_50011_135?: boolean
            AOB_50012_135?: boolean
            AOB_50013_135?: boolean
            AOB_50014_135?: boolean
            AOB_ALL_24196?: boolean
            AOB_50011_24196?: boolean
            AOB_50012_24196?: boolean
            AOB_50013_24196?: boolean
            AOB_50014_24196?: boolean
            AOB_ALL_24197?: boolean
            AOB_50011_24197?: boolean
            AOB_50012_24197?: boolean
            AOB_50013_24197?: boolean
            AOB_50014_24197?: boolean
            AOB_ALL_21?: boolean
            AOB_50011_21?: boolean
            AOB_50012_21?: boolean
            AOB_50013_21?: boolean
            AOB_50014_21?: boolean
        },
        ExtArgs['result']['gA_ANKETA_OBOROT_BRANDS']
    >

    export type GA_ANKETA_OBOROT_BRANDSSelectScalar = {
        AOB_ABA_ID?: boolean
        AOB_DATETIME?: boolean
        AOB_ALL_24189?: boolean
        AOB_50011_24189?: boolean
        AOB_50012_24189?: boolean
        AOB_50013_24189?: boolean
        AOB_50014_24189?: boolean
        AOB_ALL_10566?: boolean
        AOB_50011_10566?: boolean
        AOB_50012_10566?: boolean
        AOB_50013_10566?: boolean
        AOB_50014_10566?: boolean
        AOB_ALL_20079?: boolean
        AOB_50011_20079?: boolean
        AOB_50012_20079?: boolean
        AOB_50013_20079?: boolean
        AOB_50014_20079?: boolean
        AOB_ALL_7251?: boolean
        AOB_50011_7251?: boolean
        AOB_50012_7251?: boolean
        AOB_50013_7251?: boolean
        AOB_50014_7251?: boolean
        AOB_ALL_24191?: boolean
        AOB_50011_24191?: boolean
        AOB_50012_24191?: boolean
        AOB_50013_24191?: boolean
        AOB_50014_24191?: boolean
        AOB_ALL_193?: boolean
        AOB_50011_193?: boolean
        AOB_50012_193?: boolean
        AOB_50013_193?: boolean
        AOB_50014_193?: boolean
        AOB_ALL_7610?: boolean
        AOB_50011_7610?: boolean
        AOB_50012_7610?: boolean
        AOB_50013_7610?: boolean
        AOB_50014_7610?: boolean
        AOB_ALL_10180?: boolean
        AOB_50011_10180?: boolean
        AOB_50012_10180?: boolean
        AOB_50013_10180?: boolean
        AOB_50014_10180?: boolean
        AOB_ALL_177?: boolean
        AOB_50011_177?: boolean
        AOB_50012_177?: boolean
        AOB_50013_177?: boolean
        AOB_50014_177?: boolean
        AOB_ALL_10223?: boolean
        AOB_50011_10223?: boolean
        AOB_50012_10223?: boolean
        AOB_50013_10223?: boolean
        AOB_50014_10223?: boolean
        AOB_ALL_7230?: boolean
        AOB_50011_7230?: boolean
        AOB_50012_7230?: boolean
        AOB_50013_7230?: boolean
        AOB_50014_7230?: boolean
        AOB_ALL_1359?: boolean
        AOB_50011_1359?: boolean
        AOB_50012_1359?: boolean
        AOB_50013_1359?: boolean
        AOB_50014_1359?: boolean
        AOB_ALL_110?: boolean
        AOB_50011_110?: boolean
        AOB_50012_110?: boolean
        AOB_50013_110?: boolean
        AOB_50014_110?: boolean
        AOB_ALL_20182?: boolean
        AOB_50011_20182?: boolean
        AOB_50012_20182?: boolean
        AOB_50013_20182?: boolean
        AOB_50014_20182?: boolean
        AOB_ALL_20203?: boolean
        AOB_50011_20203?: boolean
        AOB_50012_20203?: boolean
        AOB_50013_20203?: boolean
        AOB_50014_20203?: boolean
        AOB_ALL_24155?: boolean
        AOB_50011_24155?: boolean
        AOB_50012_24155?: boolean
        AOB_50013_24155?: boolean
        AOB_50014_24155?: boolean
        AOB_ALL_24198?: boolean
        AOB_50011_24198?: boolean
        AOB_50012_24198?: boolean
        AOB_50013_24198?: boolean
        AOB_50014_24198?: boolean
        AOB_ALL_135?: boolean
        AOB_50011_135?: boolean
        AOB_50012_135?: boolean
        AOB_50013_135?: boolean
        AOB_50014_135?: boolean
        AOB_ALL_24196?: boolean
        AOB_50011_24196?: boolean
        AOB_50012_24196?: boolean
        AOB_50013_24196?: boolean
        AOB_50014_24196?: boolean
        AOB_ALL_24197?: boolean
        AOB_50011_24197?: boolean
        AOB_50012_24197?: boolean
        AOB_50013_24197?: boolean
        AOB_50014_24197?: boolean
        AOB_ALL_21?: boolean
        AOB_50011_21?: boolean
        AOB_50012_21?: boolean
        AOB_50013_21?: boolean
        AOB_50014_21?: boolean
    }

    export type $GA_ANKETA_OBOROT_BRANDSPayload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_ANKETA_OBOROT_BRANDS'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                AOB_ABA_ID: bigint
                AOB_DATETIME: Date
                AOB_ALL_24189: number
                AOB_50011_24189: number
                AOB_50012_24189: number
                AOB_50013_24189: number
                AOB_50014_24189: number
                AOB_ALL_10566: number
                AOB_50011_10566: number
                AOB_50012_10566: number
                AOB_50013_10566: number
                AOB_50014_10566: number
                AOB_ALL_20079: number
                AOB_50011_20079: number
                AOB_50012_20079: number
                AOB_50013_20079: number
                AOB_50014_20079: number
                AOB_ALL_7251: number
                AOB_50011_7251: number
                AOB_50012_7251: number
                AOB_50013_7251: number
                AOB_50014_7251: number
                AOB_ALL_24191: number
                AOB_50011_24191: number
                AOB_50012_24191: number
                AOB_50013_24191: number
                AOB_50014_24191: number
                AOB_ALL_193: number
                AOB_50011_193: number
                AOB_50012_193: number
                AOB_50013_193: number
                AOB_50014_193: number
                AOB_ALL_7610: number
                AOB_50011_7610: number
                AOB_50012_7610: number
                AOB_50013_7610: number
                AOB_50014_7610: number
                AOB_ALL_10180: number
                AOB_50011_10180: number
                AOB_50012_10180: number
                AOB_50013_10180: number
                AOB_50014_10180: number
                AOB_ALL_177: number
                AOB_50011_177: number
                AOB_50012_177: number
                AOB_50013_177: number
                AOB_50014_177: number
                AOB_ALL_10223: number
                AOB_50011_10223: number
                AOB_50012_10223: number
                AOB_50013_10223: number
                AOB_50014_10223: number
                AOB_ALL_7230: number
                AOB_50011_7230: number
                AOB_50012_7230: number
                AOB_50013_7230: number
                AOB_50014_7230: number
                AOB_ALL_1359: number
                AOB_50011_1359: number
                AOB_50012_1359: number
                AOB_50013_1359: number
                AOB_50014_1359: number
                AOB_ALL_110: number
                AOB_50011_110: number
                AOB_50012_110: number
                AOB_50013_110: number
                AOB_50014_110: number
                AOB_ALL_20182: number
                AOB_50011_20182: number
                AOB_50012_20182: number
                AOB_50013_20182: number
                AOB_50014_20182: number
                AOB_ALL_20203: number
                AOB_50011_20203: number
                AOB_50012_20203: number
                AOB_50013_20203: number
                AOB_50014_20203: number
                AOB_ALL_24155: number
                AOB_50011_24155: number
                AOB_50012_24155: number
                AOB_50013_24155: number
                AOB_50014_24155: number
                AOB_ALL_24198: number
                AOB_50011_24198: number
                AOB_50012_24198: number
                AOB_50013_24198: number
                AOB_50014_24198: number
                AOB_ALL_135: number
                AOB_50011_135: number
                AOB_50012_135: number
                AOB_50013_135: number
                AOB_50014_135: number
                AOB_ALL_24196: number
                AOB_50011_24196: number
                AOB_50012_24196: number
                AOB_50013_24196: number
                AOB_50014_24196: number
                AOB_ALL_24197: number
                AOB_50011_24197: number
                AOB_50012_24197: number
                AOB_50013_24197: number
                AOB_50014_24197: number
                AOB_ALL_21: number
                AOB_50011_21: number
                AOB_50012_21: number
                AOB_50013_21: number
                AOB_50014_21: number
            },
            ExtArgs['result']['gA_ANKETA_OBOROT_BRANDS']
        >
        composites: {}
    }

    type GA_ANKETA_OBOROT_BRANDSGetPayload<
        S extends
            | boolean
            | null
            | undefined
            | GA_ANKETA_OBOROT_BRANDSDefaultArgs,
    > = $Result.GetResult<Prisma.$GA_ANKETA_OBOROT_BRANDSPayload, S>

    type GA_ANKETA_OBOROT_BRANDSCountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<
        GA_ANKETA_OBOROT_BRANDSFindManyArgs,
        'select' | 'include' | 'distinct'
    > & {
        select?: GA_ANKETA_OBOROT_BRANDSCountAggregateInputType | true
    }

    export interface GA_ANKETA_OBOROT_BRANDSDelegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_ANKETA_OBOROT_BRANDS']
            meta: { name: 'GA_ANKETA_OBOROT_BRANDS' }
        }
        /**
         * Find zero or one GA_ANKETA_OBOROT_BRANDS that matches the filter.
         * @param {GA_ANKETA_OBOROT_BRANDSFindUniqueArgs} args - Arguments to find a GA_ANKETA_OBOROT_BRANDS
         * @example
         * // Get one GA_ANKETA_OBOROT_BRANDS
         * const gA_ANKETA_OBOROT_BRANDS = await prisma.gA_ANKETA_OBOROT_BRANDS.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_ANKETA_OBOROT_BRANDSFindUniqueArgs<ExtArgs>>(
            args: SelectSubset<
                T,
                GA_ANKETA_OBOROT_BRANDSFindUniqueArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_OBOROT_BRANDSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDSPayload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_ANKETA_OBOROT_BRANDS that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_ANKETA_OBOROT_BRANDSFindUniqueOrThrowArgs} args - Arguments to find a GA_ANKETA_OBOROT_BRANDS
         * @example
         * // Get one GA_ANKETA_OBOROT_BRANDS
         * const gA_ANKETA_OBOROT_BRANDS = await prisma.gA_ANKETA_OBOROT_BRANDS.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_ANKETA_OBOROT_BRANDSFindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_BRANDSFindUniqueOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_OBOROT_BRANDSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDSPayload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_OBOROT_BRANDS that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_BRANDSFindFirstArgs} args - Arguments to find a GA_ANKETA_OBOROT_BRANDS
         * @example
         * // Get one GA_ANKETA_OBOROT_BRANDS
         * const gA_ANKETA_OBOROT_BRANDS = await prisma.gA_ANKETA_OBOROT_BRANDS.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_ANKETA_OBOROT_BRANDSFindFirstArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_BRANDSFindFirstArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_OBOROT_BRANDSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDSPayload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_OBOROT_BRANDS that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_BRANDSFindFirstOrThrowArgs} args - Arguments to find a GA_ANKETA_OBOROT_BRANDS
         * @example
         * // Get one GA_ANKETA_OBOROT_BRANDS
         * const gA_ANKETA_OBOROT_BRANDS = await prisma.gA_ANKETA_OBOROT_BRANDS.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<
            T extends GA_ANKETA_OBOROT_BRANDSFindFirstOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_BRANDSFindFirstOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_OBOROT_BRANDSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDSPayload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_ANKETA_OBOROT_BRANDS that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_BRANDSFindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_ANKETA_OBOROT_BRANDS
         * const gA_ANKETA_OBOROT_BRANDS = await prisma.gA_ANKETA_OBOROT_BRANDS.findMany()
         *
         * // Get first 10 GA_ANKETA_OBOROT_BRANDS
         * const gA_ANKETA_OBOROT_BRANDS = await prisma.gA_ANKETA_OBOROT_BRANDS.findMany({ take: 10 })
         *
         * // Only select the `AOB_ABA_ID`
         * const gA_ANKETA_OBOROT_BRANDSWithAOB_ABA_IDOnly = await prisma.gA_ANKETA_OBOROT_BRANDS.findMany({ select: { AOB_ABA_ID: true } })
         *
         **/
        findMany<T extends GA_ANKETA_OBOROT_BRANDSFindManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_OBOROT_BRANDSFindManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDSPayload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_ANKETA_OBOROT_BRANDS.
         * @param {GA_ANKETA_OBOROT_BRANDSCreateArgs} args - Arguments to create a GA_ANKETA_OBOROT_BRANDS.
         * @example
         * // Create one GA_ANKETA_OBOROT_BRANDS
         * const GA_ANKETA_OBOROT_BRANDS = await prisma.gA_ANKETA_OBOROT_BRANDS.create({
         *   data: {
         *     // ... data to create a GA_ANKETA_OBOROT_BRANDS
         *   }
         * })
         *
         **/
        create<T extends GA_ANKETA_OBOROT_BRANDSCreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROT_BRANDSCreateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROT_BRANDSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDSPayload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_ANKETA_OBOROT_BRANDS.
         *     @param {GA_ANKETA_OBOROT_BRANDSCreateManyArgs} args - Arguments to create many GA_ANKETA_OBOROT_BRANDS.
         *     @example
         *     // Create many GA_ANKETA_OBOROT_BRANDS
         *     const gA_ANKETA_OBOROT_BRANDS = await prisma.gA_ANKETA_OBOROT_BRANDS.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_ANKETA_OBOROT_BRANDSCreateManyArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_BRANDSCreateManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_ANKETA_OBOROT_BRANDS.
         * @param {GA_ANKETA_OBOROT_BRANDSDeleteArgs} args - Arguments to delete one GA_ANKETA_OBOROT_BRANDS.
         * @example
         * // Delete one GA_ANKETA_OBOROT_BRANDS
         * const GA_ANKETA_OBOROT_BRANDS = await prisma.gA_ANKETA_OBOROT_BRANDS.delete({
         *   where: {
         *     // ... filter to delete one GA_ANKETA_OBOROT_BRANDS
         *   }
         * })
         *
         **/
        delete<T extends GA_ANKETA_OBOROT_BRANDSDeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROT_BRANDSDeleteArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROT_BRANDSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDSPayload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_ANKETA_OBOROT_BRANDS.
         * @param {GA_ANKETA_OBOROT_BRANDSUpdateArgs} args - Arguments to update one GA_ANKETA_OBOROT_BRANDS.
         * @example
         * // Update one GA_ANKETA_OBOROT_BRANDS
         * const gA_ANKETA_OBOROT_BRANDS = await prisma.gA_ANKETA_OBOROT_BRANDS.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_ANKETA_OBOROT_BRANDSUpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROT_BRANDSUpdateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROT_BRANDSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDSPayload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_ANKETA_OBOROT_BRANDS.
         * @param {GA_ANKETA_OBOROT_BRANDSDeleteManyArgs} args - Arguments to filter GA_ANKETA_OBOROT_BRANDS to delete.
         * @example
         * // Delete a few GA_ANKETA_OBOROT_BRANDS
         * const { count } = await prisma.gA_ANKETA_OBOROT_BRANDS.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_ANKETA_OBOROT_BRANDSDeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_BRANDSDeleteManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_ANKETA_OBOROT_BRANDS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_BRANDSUpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_ANKETA_OBOROT_BRANDS
         * const gA_ANKETA_OBOROT_BRANDS = await prisma.gA_ANKETA_OBOROT_BRANDS.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_ANKETA_OBOROT_BRANDSUpdateManyArgs<ExtArgs>>(
            args: SelectSubset<
                T,
                GA_ANKETA_OBOROT_BRANDSUpdateManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_ANKETA_OBOROT_BRANDS.
         * @param {GA_ANKETA_OBOROT_BRANDSUpsertArgs} args - Arguments to update or create a GA_ANKETA_OBOROT_BRANDS.
         * @example
         * // Update or create a GA_ANKETA_OBOROT_BRANDS
         * const gA_ANKETA_OBOROT_BRANDS = await prisma.gA_ANKETA_OBOROT_BRANDS.upsert({
         *   create: {
         *     // ... data to create a GA_ANKETA_OBOROT_BRANDS
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_ANKETA_OBOROT_BRANDS we want to update
         *   }
         * })
         **/
        upsert<T extends GA_ANKETA_OBOROT_BRANDSUpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROT_BRANDSUpsertArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROT_BRANDSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDSPayload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_ANKETA_OBOROT_BRANDS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_BRANDSCountArgs} args - Arguments to filter GA_ANKETA_OBOROT_BRANDS to count.
         * @example
         * // Count the number of GA_ANKETA_OBOROT_BRANDS
         * const count = await prisma.gA_ANKETA_OBOROT_BRANDS.count({
         *   where: {
         *     // ... the filter for the GA_ANKETA_OBOROT_BRANDS we want to count
         *   }
         * })
         **/
        count<T extends GA_ANKETA_OBOROT_BRANDSCountArgs>(
            args?: Subset<T, GA_ANKETA_OBOROT_BRANDSCountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_ANKETA_OBOROT_BRANDSCountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_ANKETA_OBOROT_BRANDS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_BRANDSAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_ANKETA_OBOROT_BRANDSAggregateArgs>(
            args: Subset<T, GA_ANKETA_OBOROT_BRANDSAggregateArgs>
        ): Prisma.PrismaPromise<GetGA_ANKETA_OBOROT_BRANDSAggregateType<T>>

        /**
         * Group by GA_ANKETA_OBOROT_BRANDS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_BRANDSGroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_ANKETA_OBOROT_BRANDSGroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_ANKETA_OBOROT_BRANDSGroupByArgs['orderBy'] }
                : { orderBy?: GA_ANKETA_OBOROT_BRANDSGroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<
                T,
                GA_ANKETA_OBOROT_BRANDSGroupByArgs,
                OrderByArg
            > &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_ANKETA_OBOROT_BRANDSGroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_ANKETA_OBOROT_BRANDS model
         */
        readonly fields: GA_ANKETA_OBOROT_BRANDSFieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_ANKETA_OBOROT_BRANDS.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_ANKETA_OBOROT_BRANDSClient<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_ANKETA_OBOROT_BRANDS model
     */
    interface GA_ANKETA_OBOROT_BRANDSFieldRefs {
        readonly AOB_ABA_ID: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'BigInt'>
        readonly AOB_DATETIME: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'DateTime'>
        readonly AOB_ALL_24189: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_24189: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_24189: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_24189: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_24189: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_10566: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_10566: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_10566: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_10566: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_10566: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_20079: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_20079: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_20079: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_20079: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_20079: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_7251: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_7251: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_7251: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_7251: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_7251: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_24191: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_24191: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_24191: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_24191: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_24191: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_193: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_193: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_193: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_193: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_193: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_7610: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_7610: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_7610: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_7610: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_7610: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_10180: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_10180: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_10180: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_10180: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_10180: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_177: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_177: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_177: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_177: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_177: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_10223: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_10223: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_10223: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_10223: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_10223: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_7230: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_7230: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_7230: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_7230: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_7230: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_1359: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_1359: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_1359: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_1359: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_1359: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_110: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_110: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_110: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_110: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_110: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_20182: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_20182: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_20182: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_20182: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_20182: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_20203: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_20203: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_20203: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_20203: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_20203: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_24155: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_24155: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_24155: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_24155: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_24155: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_24198: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_24198: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_24198: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_24198: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_24198: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_135: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_135: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_135: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_135: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_135: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_24196: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_24196: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_24196: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_24196: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_24196: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_24197: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_24197: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_24197: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_24197: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_24197: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_ALL_21: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50011_21: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50012_21: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50013_21: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
        readonly AOB_50014_21: FieldRef<'GA_ANKETA_OBOROT_BRANDS', 'Float'>
    }

    // Custom InputTypes

    /**
     * GA_ANKETA_OBOROT_BRANDS findUnique
     */
    export type GA_ANKETA_OBOROT_BRANDSFindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS
         */
        select?: GA_ANKETA_OBOROT_BRANDSSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT_BRANDS to fetch.
         */
        where: GA_ANKETA_OBOROT_BRANDSWhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS findUniqueOrThrow
     */
    export type GA_ANKETA_OBOROT_BRANDSFindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS
         */
        select?: GA_ANKETA_OBOROT_BRANDSSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT_BRANDS to fetch.
         */
        where: GA_ANKETA_OBOROT_BRANDSWhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS findFirst
     */
    export type GA_ANKETA_OBOROT_BRANDSFindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS
         */
        select?: GA_ANKETA_OBOROT_BRANDSSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT_BRANDS to fetch.
         */
        where?: GA_ANKETA_OBOROT_BRANDSWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROT_BRANDS to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROT_BRANDSOrderByWithRelationInput
            | GA_ANKETA_OBOROT_BRANDSOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_OBOROT_BRANDS.
         */
        cursor?: GA_ANKETA_OBOROT_BRANDSWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROT_BRANDS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROT_BRANDS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_OBOROT_BRANDS.
         */
        distinct?:
            | GA_ANKETA_OBOROT_BRANDSScalarFieldEnum
            | GA_ANKETA_OBOROT_BRANDSScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS findFirstOrThrow
     */
    export type GA_ANKETA_OBOROT_BRANDSFindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS
         */
        select?: GA_ANKETA_OBOROT_BRANDSSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT_BRANDS to fetch.
         */
        where?: GA_ANKETA_OBOROT_BRANDSWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROT_BRANDS to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROT_BRANDSOrderByWithRelationInput
            | GA_ANKETA_OBOROT_BRANDSOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_OBOROT_BRANDS.
         */
        cursor?: GA_ANKETA_OBOROT_BRANDSWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROT_BRANDS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROT_BRANDS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_OBOROT_BRANDS.
         */
        distinct?:
            | GA_ANKETA_OBOROT_BRANDSScalarFieldEnum
            | GA_ANKETA_OBOROT_BRANDSScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS findMany
     */
    export type GA_ANKETA_OBOROT_BRANDSFindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS
         */
        select?: GA_ANKETA_OBOROT_BRANDSSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT_BRANDS to fetch.
         */
        where?: GA_ANKETA_OBOROT_BRANDSWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROT_BRANDS to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROT_BRANDSOrderByWithRelationInput
            | GA_ANKETA_OBOROT_BRANDSOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_ANKETA_OBOROT_BRANDS.
         */
        cursor?: GA_ANKETA_OBOROT_BRANDSWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROT_BRANDS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROT_BRANDS.
         */
        skip?: number
        distinct?:
            | GA_ANKETA_OBOROT_BRANDSScalarFieldEnum
            | GA_ANKETA_OBOROT_BRANDSScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS create
     */
    export type GA_ANKETA_OBOROT_BRANDSCreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS
         */
        select?: GA_ANKETA_OBOROT_BRANDSSelect<ExtArgs> | null
        /**
         * The data needed to create a GA_ANKETA_OBOROT_BRANDS.
         */
        data: XOR<
            GA_ANKETA_OBOROT_BRANDSCreateInput,
            GA_ANKETA_OBOROT_BRANDSUncheckedCreateInput
        >
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS createMany
     */
    export type GA_ANKETA_OBOROT_BRANDSCreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_ANKETA_OBOROT_BRANDS.
         */
        data:
            | GA_ANKETA_OBOROT_BRANDSCreateManyInput
            | GA_ANKETA_OBOROT_BRANDSCreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS update
     */
    export type GA_ANKETA_OBOROT_BRANDSUpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS
         */
        select?: GA_ANKETA_OBOROT_BRANDSSelect<ExtArgs> | null
        /**
         * The data needed to update a GA_ANKETA_OBOROT_BRANDS.
         */
        data: XOR<
            GA_ANKETA_OBOROT_BRANDSUpdateInput,
            GA_ANKETA_OBOROT_BRANDSUncheckedUpdateInput
        >
        /**
         * Choose, which GA_ANKETA_OBOROT_BRANDS to update.
         */
        where: GA_ANKETA_OBOROT_BRANDSWhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS updateMany
     */
    export type GA_ANKETA_OBOROT_BRANDSUpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_ANKETA_OBOROT_BRANDS.
         */
        data: XOR<
            GA_ANKETA_OBOROT_BRANDSUpdateManyMutationInput,
            GA_ANKETA_OBOROT_BRANDSUncheckedUpdateManyInput
        >
        /**
         * Filter which GA_ANKETA_OBOROT_BRANDS to update
         */
        where?: GA_ANKETA_OBOROT_BRANDSWhereInput
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS upsert
     */
    export type GA_ANKETA_OBOROT_BRANDSUpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS
         */
        select?: GA_ANKETA_OBOROT_BRANDSSelect<ExtArgs> | null
        /**
         * The filter to search for the GA_ANKETA_OBOROT_BRANDS to update in case it exists.
         */
        where: GA_ANKETA_OBOROT_BRANDSWhereUniqueInput
        /**
         * In case the GA_ANKETA_OBOROT_BRANDS found by the `where` argument doesn't exist, create a new GA_ANKETA_OBOROT_BRANDS with this data.
         */
        create: XOR<
            GA_ANKETA_OBOROT_BRANDSCreateInput,
            GA_ANKETA_OBOROT_BRANDSUncheckedCreateInput
        >
        /**
         * In case the GA_ANKETA_OBOROT_BRANDS was found with the provided `where` argument, update it with this data.
         */
        update: XOR<
            GA_ANKETA_OBOROT_BRANDSUpdateInput,
            GA_ANKETA_OBOROT_BRANDSUncheckedUpdateInput
        >
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS delete
     */
    export type GA_ANKETA_OBOROT_BRANDSDeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS
         */
        select?: GA_ANKETA_OBOROT_BRANDSSelect<ExtArgs> | null
        /**
         * Filter which GA_ANKETA_OBOROT_BRANDS to delete.
         */
        where: GA_ANKETA_OBOROT_BRANDSWhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS deleteMany
     */
    export type GA_ANKETA_OBOROT_BRANDSDeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_OBOROT_BRANDS to delete
         */
        where?: GA_ANKETA_OBOROT_BRANDSWhereInput
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS without action
     */
    export type GA_ANKETA_OBOROT_BRANDSDefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS
         */
        select?: GA_ANKETA_OBOROT_BRANDSSelect<ExtArgs> | null
    }

    /**
     * Model GA_ANKETA_OBOROT_BRANDS2
     */

    export type AggregateGA_ANKETA_OBOROT_BRANDS2 = {
        _count: GA_ANKETA_OBOROT_BRANDS2CountAggregateOutputType | null
        _avg: GA_ANKETA_OBOROT_BRANDS2AvgAggregateOutputType | null
        _sum: GA_ANKETA_OBOROT_BRANDS2SumAggregateOutputType | null
        _min: GA_ANKETA_OBOROT_BRANDS2MinAggregateOutputType | null
        _max: GA_ANKETA_OBOROT_BRANDS2MaxAggregateOutputType | null
    }

    export type GA_ANKETA_OBOROT_BRANDS2AvgAggregateOutputType = {
        AOB_ABA_ID: number | null
        AOB_ALL_7438: number | null
        AOB_50011_7438: number | null
        AOB_50012_7438: number | null
        AOB_50013_7438: number | null
        AOB_50014_7438: number | null
        AOB_ALL_7801: number | null
        AOB_50011_7801: number | null
        AOB_50012_7801: number | null
        AOB_50013_7801: number | null
        AOB_50014_7801: number | null
        AOB_ALL_7763: number | null
        AOB_50011_7763: number | null
        AOB_50012_7763: number | null
        AOB_50013_7763: number | null
        AOB_50014_7763: number | null
        AOB_ALL_265: number | null
        AOB_50011_265: number | null
        AOB_50012_265: number | null
        AOB_50013_265: number | null
        AOB_50014_265: number | null
        AOB_ALL_24158: number | null
        AOB_50011_24158: number | null
        AOB_50012_24158: number | null
        AOB_50013_24158: number | null
        AOB_50014_24158: number | null
        AOB_ALL_7219: number | null
        AOB_50011_7219: number | null
        AOB_50012_7219: number | null
        AOB_50013_7219: number | null
        AOB_50014_7219: number | null
    }

    export type GA_ANKETA_OBOROT_BRANDS2SumAggregateOutputType = {
        AOB_ABA_ID: bigint | null
        AOB_ALL_7438: number | null
        AOB_50011_7438: number | null
        AOB_50012_7438: number | null
        AOB_50013_7438: number | null
        AOB_50014_7438: number | null
        AOB_ALL_7801: number | null
        AOB_50011_7801: number | null
        AOB_50012_7801: number | null
        AOB_50013_7801: number | null
        AOB_50014_7801: number | null
        AOB_ALL_7763: number | null
        AOB_50011_7763: number | null
        AOB_50012_7763: number | null
        AOB_50013_7763: number | null
        AOB_50014_7763: number | null
        AOB_ALL_265: number | null
        AOB_50011_265: number | null
        AOB_50012_265: number | null
        AOB_50013_265: number | null
        AOB_50014_265: number | null
        AOB_ALL_24158: number | null
        AOB_50011_24158: number | null
        AOB_50012_24158: number | null
        AOB_50013_24158: number | null
        AOB_50014_24158: number | null
        AOB_ALL_7219: number | null
        AOB_50011_7219: number | null
        AOB_50012_7219: number | null
        AOB_50013_7219: number | null
        AOB_50014_7219: number | null
    }

    export type GA_ANKETA_OBOROT_BRANDS2MinAggregateOutputType = {
        AOB_ABA_ID: bigint | null
        AOB_DATETIME: Date | null
        AOB_ALL_7438: number | null
        AOB_50011_7438: number | null
        AOB_50012_7438: number | null
        AOB_50013_7438: number | null
        AOB_50014_7438: number | null
        AOB_ALL_7801: number | null
        AOB_50011_7801: number | null
        AOB_50012_7801: number | null
        AOB_50013_7801: number | null
        AOB_50014_7801: number | null
        AOB_ALL_7763: number | null
        AOB_50011_7763: number | null
        AOB_50012_7763: number | null
        AOB_50013_7763: number | null
        AOB_50014_7763: number | null
        AOB_ALL_265: number | null
        AOB_50011_265: number | null
        AOB_50012_265: number | null
        AOB_50013_265: number | null
        AOB_50014_265: number | null
        AOB_ALL_24158: number | null
        AOB_50011_24158: number | null
        AOB_50012_24158: number | null
        AOB_50013_24158: number | null
        AOB_50014_24158: number | null
        AOB_ALL_7219: number | null
        AOB_50011_7219: number | null
        AOB_50012_7219: number | null
        AOB_50013_7219: number | null
        AOB_50014_7219: number | null
    }

    export type GA_ANKETA_OBOROT_BRANDS2MaxAggregateOutputType = {
        AOB_ABA_ID: bigint | null
        AOB_DATETIME: Date | null
        AOB_ALL_7438: number | null
        AOB_50011_7438: number | null
        AOB_50012_7438: number | null
        AOB_50013_7438: number | null
        AOB_50014_7438: number | null
        AOB_ALL_7801: number | null
        AOB_50011_7801: number | null
        AOB_50012_7801: number | null
        AOB_50013_7801: number | null
        AOB_50014_7801: number | null
        AOB_ALL_7763: number | null
        AOB_50011_7763: number | null
        AOB_50012_7763: number | null
        AOB_50013_7763: number | null
        AOB_50014_7763: number | null
        AOB_ALL_265: number | null
        AOB_50011_265: number | null
        AOB_50012_265: number | null
        AOB_50013_265: number | null
        AOB_50014_265: number | null
        AOB_ALL_24158: number | null
        AOB_50011_24158: number | null
        AOB_50012_24158: number | null
        AOB_50013_24158: number | null
        AOB_50014_24158: number | null
        AOB_ALL_7219: number | null
        AOB_50011_7219: number | null
        AOB_50012_7219: number | null
        AOB_50013_7219: number | null
        AOB_50014_7219: number | null
    }

    export type GA_ANKETA_OBOROT_BRANDS2CountAggregateOutputType = {
        AOB_ABA_ID: number
        AOB_DATETIME: number
        AOB_ALL_7438: number
        AOB_50011_7438: number
        AOB_50012_7438: number
        AOB_50013_7438: number
        AOB_50014_7438: number
        AOB_ALL_7801: number
        AOB_50011_7801: number
        AOB_50012_7801: number
        AOB_50013_7801: number
        AOB_50014_7801: number
        AOB_ALL_7763: number
        AOB_50011_7763: number
        AOB_50012_7763: number
        AOB_50013_7763: number
        AOB_50014_7763: number
        AOB_ALL_265: number
        AOB_50011_265: number
        AOB_50012_265: number
        AOB_50013_265: number
        AOB_50014_265: number
        AOB_ALL_24158: number
        AOB_50011_24158: number
        AOB_50012_24158: number
        AOB_50013_24158: number
        AOB_50014_24158: number
        AOB_ALL_7219: number
        AOB_50011_7219: number
        AOB_50012_7219: number
        AOB_50013_7219: number
        AOB_50014_7219: number
        _all: number
    }

    export type GA_ANKETA_OBOROT_BRANDS2AvgAggregateInputType = {
        AOB_ABA_ID?: true
        AOB_ALL_7438?: true
        AOB_50011_7438?: true
        AOB_50012_7438?: true
        AOB_50013_7438?: true
        AOB_50014_7438?: true
        AOB_ALL_7801?: true
        AOB_50011_7801?: true
        AOB_50012_7801?: true
        AOB_50013_7801?: true
        AOB_50014_7801?: true
        AOB_ALL_7763?: true
        AOB_50011_7763?: true
        AOB_50012_7763?: true
        AOB_50013_7763?: true
        AOB_50014_7763?: true
        AOB_ALL_265?: true
        AOB_50011_265?: true
        AOB_50012_265?: true
        AOB_50013_265?: true
        AOB_50014_265?: true
        AOB_ALL_24158?: true
        AOB_50011_24158?: true
        AOB_50012_24158?: true
        AOB_50013_24158?: true
        AOB_50014_24158?: true
        AOB_ALL_7219?: true
        AOB_50011_7219?: true
        AOB_50012_7219?: true
        AOB_50013_7219?: true
        AOB_50014_7219?: true
    }

    export type GA_ANKETA_OBOROT_BRANDS2SumAggregateInputType = {
        AOB_ABA_ID?: true
        AOB_ALL_7438?: true
        AOB_50011_7438?: true
        AOB_50012_7438?: true
        AOB_50013_7438?: true
        AOB_50014_7438?: true
        AOB_ALL_7801?: true
        AOB_50011_7801?: true
        AOB_50012_7801?: true
        AOB_50013_7801?: true
        AOB_50014_7801?: true
        AOB_ALL_7763?: true
        AOB_50011_7763?: true
        AOB_50012_7763?: true
        AOB_50013_7763?: true
        AOB_50014_7763?: true
        AOB_ALL_265?: true
        AOB_50011_265?: true
        AOB_50012_265?: true
        AOB_50013_265?: true
        AOB_50014_265?: true
        AOB_ALL_24158?: true
        AOB_50011_24158?: true
        AOB_50012_24158?: true
        AOB_50013_24158?: true
        AOB_50014_24158?: true
        AOB_ALL_7219?: true
        AOB_50011_7219?: true
        AOB_50012_7219?: true
        AOB_50013_7219?: true
        AOB_50014_7219?: true
    }

    export type GA_ANKETA_OBOROT_BRANDS2MinAggregateInputType = {
        AOB_ABA_ID?: true
        AOB_DATETIME?: true
        AOB_ALL_7438?: true
        AOB_50011_7438?: true
        AOB_50012_7438?: true
        AOB_50013_7438?: true
        AOB_50014_7438?: true
        AOB_ALL_7801?: true
        AOB_50011_7801?: true
        AOB_50012_7801?: true
        AOB_50013_7801?: true
        AOB_50014_7801?: true
        AOB_ALL_7763?: true
        AOB_50011_7763?: true
        AOB_50012_7763?: true
        AOB_50013_7763?: true
        AOB_50014_7763?: true
        AOB_ALL_265?: true
        AOB_50011_265?: true
        AOB_50012_265?: true
        AOB_50013_265?: true
        AOB_50014_265?: true
        AOB_ALL_24158?: true
        AOB_50011_24158?: true
        AOB_50012_24158?: true
        AOB_50013_24158?: true
        AOB_50014_24158?: true
        AOB_ALL_7219?: true
        AOB_50011_7219?: true
        AOB_50012_7219?: true
        AOB_50013_7219?: true
        AOB_50014_7219?: true
    }

    export type GA_ANKETA_OBOROT_BRANDS2MaxAggregateInputType = {
        AOB_ABA_ID?: true
        AOB_DATETIME?: true
        AOB_ALL_7438?: true
        AOB_50011_7438?: true
        AOB_50012_7438?: true
        AOB_50013_7438?: true
        AOB_50014_7438?: true
        AOB_ALL_7801?: true
        AOB_50011_7801?: true
        AOB_50012_7801?: true
        AOB_50013_7801?: true
        AOB_50014_7801?: true
        AOB_ALL_7763?: true
        AOB_50011_7763?: true
        AOB_50012_7763?: true
        AOB_50013_7763?: true
        AOB_50014_7763?: true
        AOB_ALL_265?: true
        AOB_50011_265?: true
        AOB_50012_265?: true
        AOB_50013_265?: true
        AOB_50014_265?: true
        AOB_ALL_24158?: true
        AOB_50011_24158?: true
        AOB_50012_24158?: true
        AOB_50013_24158?: true
        AOB_50014_24158?: true
        AOB_ALL_7219?: true
        AOB_50011_7219?: true
        AOB_50012_7219?: true
        AOB_50013_7219?: true
        AOB_50014_7219?: true
    }

    export type GA_ANKETA_OBOROT_BRANDS2CountAggregateInputType = {
        AOB_ABA_ID?: true
        AOB_DATETIME?: true
        AOB_ALL_7438?: true
        AOB_50011_7438?: true
        AOB_50012_7438?: true
        AOB_50013_7438?: true
        AOB_50014_7438?: true
        AOB_ALL_7801?: true
        AOB_50011_7801?: true
        AOB_50012_7801?: true
        AOB_50013_7801?: true
        AOB_50014_7801?: true
        AOB_ALL_7763?: true
        AOB_50011_7763?: true
        AOB_50012_7763?: true
        AOB_50013_7763?: true
        AOB_50014_7763?: true
        AOB_ALL_265?: true
        AOB_50011_265?: true
        AOB_50012_265?: true
        AOB_50013_265?: true
        AOB_50014_265?: true
        AOB_ALL_24158?: true
        AOB_50011_24158?: true
        AOB_50012_24158?: true
        AOB_50013_24158?: true
        AOB_50014_24158?: true
        AOB_ALL_7219?: true
        AOB_50011_7219?: true
        AOB_50012_7219?: true
        AOB_50013_7219?: true
        AOB_50014_7219?: true
        _all?: true
    }

    export type GA_ANKETA_OBOROT_BRANDS2AggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_OBOROT_BRANDS2 to aggregate.
         */
        where?: GA_ANKETA_OBOROT_BRANDS2WhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROT_BRANDS2s to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROT_BRANDS2OrderByWithRelationInput
            | GA_ANKETA_OBOROT_BRANDS2OrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_ANKETA_OBOROT_BRANDS2WhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROT_BRANDS2s from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROT_BRANDS2s.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_ANKETA_OBOROT_BRANDS2s
         **/
        _count?: true | GA_ANKETA_OBOROT_BRANDS2CountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_ANKETA_OBOROT_BRANDS2AvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_ANKETA_OBOROT_BRANDS2SumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_ANKETA_OBOROT_BRANDS2MinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_ANKETA_OBOROT_BRANDS2MaxAggregateInputType
    }

    export type GetGA_ANKETA_OBOROT_BRANDS2AggregateType<
        T extends GA_ANKETA_OBOROT_BRANDS2AggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_ANKETA_OBOROT_BRANDS2]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_ANKETA_OBOROT_BRANDS2[P]>
            : GetScalarType<T[P], AggregateGA_ANKETA_OBOROT_BRANDS2[P]>
    }

    export type GA_ANKETA_OBOROT_BRANDS2GroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_ANKETA_OBOROT_BRANDS2WhereInput
        orderBy?:
            | GA_ANKETA_OBOROT_BRANDS2OrderByWithAggregationInput
            | GA_ANKETA_OBOROT_BRANDS2OrderByWithAggregationInput[]
        by:
            | GA_ANKETA_OBOROT_BRANDS2ScalarFieldEnum[]
            | GA_ANKETA_OBOROT_BRANDS2ScalarFieldEnum
        having?: GA_ANKETA_OBOROT_BRANDS2ScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_ANKETA_OBOROT_BRANDS2CountAggregateInputType | true
        _avg?: GA_ANKETA_OBOROT_BRANDS2AvgAggregateInputType
        _sum?: GA_ANKETA_OBOROT_BRANDS2SumAggregateInputType
        _min?: GA_ANKETA_OBOROT_BRANDS2MinAggregateInputType
        _max?: GA_ANKETA_OBOROT_BRANDS2MaxAggregateInputType
    }

    export type GA_ANKETA_OBOROT_BRANDS2GroupByOutputType = {
        AOB_ABA_ID: bigint
        AOB_DATETIME: Date
        AOB_ALL_7438: number
        AOB_50011_7438: number
        AOB_50012_7438: number
        AOB_50013_7438: number
        AOB_50014_7438: number
        AOB_ALL_7801: number
        AOB_50011_7801: number
        AOB_50012_7801: number
        AOB_50013_7801: number
        AOB_50014_7801: number
        AOB_ALL_7763: number
        AOB_50011_7763: number
        AOB_50012_7763: number
        AOB_50013_7763: number
        AOB_50014_7763: number
        AOB_ALL_265: number
        AOB_50011_265: number
        AOB_50012_265: number
        AOB_50013_265: number
        AOB_50014_265: number
        AOB_ALL_24158: number
        AOB_50011_24158: number
        AOB_50012_24158: number
        AOB_50013_24158: number
        AOB_50014_24158: number
        AOB_ALL_7219: number
        AOB_50011_7219: number
        AOB_50012_7219: number
        AOB_50013_7219: number
        AOB_50014_7219: number
        _count: GA_ANKETA_OBOROT_BRANDS2CountAggregateOutputType | null
        _avg: GA_ANKETA_OBOROT_BRANDS2AvgAggregateOutputType | null
        _sum: GA_ANKETA_OBOROT_BRANDS2SumAggregateOutputType | null
        _min: GA_ANKETA_OBOROT_BRANDS2MinAggregateOutputType | null
        _max: GA_ANKETA_OBOROT_BRANDS2MaxAggregateOutputType | null
    }

    type GetGA_ANKETA_OBOROT_BRANDS2GroupByPayload<
        T extends GA_ANKETA_OBOROT_BRANDS2GroupByArgs,
    > = Prisma.PrismaPromise<
        Array<
            PickEnumerable<
                GA_ANKETA_OBOROT_BRANDS2GroupByOutputType,
                T['by']
            > & {
                [P in keyof T &
                    keyof GA_ANKETA_OBOROT_BRANDS2GroupByOutputType]: P extends '_count'
                    ? T[P] extends boolean
                        ? number
                        : GetScalarType<
                              T[P],
                              GA_ANKETA_OBOROT_BRANDS2GroupByOutputType[P]
                          >
                    : GetScalarType<
                          T[P],
                          GA_ANKETA_OBOROT_BRANDS2GroupByOutputType[P]
                      >
            }
        >
    >

    export type GA_ANKETA_OBOROT_BRANDS2Select<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            AOB_ABA_ID?: boolean
            AOB_DATETIME?: boolean
            AOB_ALL_7438?: boolean
            AOB_50011_7438?: boolean
            AOB_50012_7438?: boolean
            AOB_50013_7438?: boolean
            AOB_50014_7438?: boolean
            AOB_ALL_7801?: boolean
            AOB_50011_7801?: boolean
            AOB_50012_7801?: boolean
            AOB_50013_7801?: boolean
            AOB_50014_7801?: boolean
            AOB_ALL_7763?: boolean
            AOB_50011_7763?: boolean
            AOB_50012_7763?: boolean
            AOB_50013_7763?: boolean
            AOB_50014_7763?: boolean
            AOB_ALL_265?: boolean
            AOB_50011_265?: boolean
            AOB_50012_265?: boolean
            AOB_50013_265?: boolean
            AOB_50014_265?: boolean
            AOB_ALL_24158?: boolean
            AOB_50011_24158?: boolean
            AOB_50012_24158?: boolean
            AOB_50013_24158?: boolean
            AOB_50014_24158?: boolean
            AOB_ALL_7219?: boolean
            AOB_50011_7219?: boolean
            AOB_50012_7219?: boolean
            AOB_50013_7219?: boolean
            AOB_50014_7219?: boolean
        },
        ExtArgs['result']['gA_ANKETA_OBOROT_BRANDS2']
    >

    export type GA_ANKETA_OBOROT_BRANDS2SelectScalar = {
        AOB_ABA_ID?: boolean
        AOB_DATETIME?: boolean
        AOB_ALL_7438?: boolean
        AOB_50011_7438?: boolean
        AOB_50012_7438?: boolean
        AOB_50013_7438?: boolean
        AOB_50014_7438?: boolean
        AOB_ALL_7801?: boolean
        AOB_50011_7801?: boolean
        AOB_50012_7801?: boolean
        AOB_50013_7801?: boolean
        AOB_50014_7801?: boolean
        AOB_ALL_7763?: boolean
        AOB_50011_7763?: boolean
        AOB_50012_7763?: boolean
        AOB_50013_7763?: boolean
        AOB_50014_7763?: boolean
        AOB_ALL_265?: boolean
        AOB_50011_265?: boolean
        AOB_50012_265?: boolean
        AOB_50013_265?: boolean
        AOB_50014_265?: boolean
        AOB_ALL_24158?: boolean
        AOB_50011_24158?: boolean
        AOB_50012_24158?: boolean
        AOB_50013_24158?: boolean
        AOB_50014_24158?: boolean
        AOB_ALL_7219?: boolean
        AOB_50011_7219?: boolean
        AOB_50012_7219?: boolean
        AOB_50013_7219?: boolean
        AOB_50014_7219?: boolean
    }

    export type $GA_ANKETA_OBOROT_BRANDS2Payload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_ANKETA_OBOROT_BRANDS2'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                AOB_ABA_ID: bigint
                AOB_DATETIME: Date
                AOB_ALL_7438: number
                AOB_50011_7438: number
                AOB_50012_7438: number
                AOB_50013_7438: number
                AOB_50014_7438: number
                AOB_ALL_7801: number
                AOB_50011_7801: number
                AOB_50012_7801: number
                AOB_50013_7801: number
                AOB_50014_7801: number
                AOB_ALL_7763: number
                AOB_50011_7763: number
                AOB_50012_7763: number
                AOB_50013_7763: number
                AOB_50014_7763: number
                AOB_ALL_265: number
                AOB_50011_265: number
                AOB_50012_265: number
                AOB_50013_265: number
                AOB_50014_265: number
                AOB_ALL_24158: number
                AOB_50011_24158: number
                AOB_50012_24158: number
                AOB_50013_24158: number
                AOB_50014_24158: number
                AOB_ALL_7219: number
                AOB_50011_7219: number
                AOB_50012_7219: number
                AOB_50013_7219: number
                AOB_50014_7219: number
            },
            ExtArgs['result']['gA_ANKETA_OBOROT_BRANDS2']
        >
        composites: {}
    }

    type GA_ANKETA_OBOROT_BRANDS2GetPayload<
        S extends
            | boolean
            | null
            | undefined
            | GA_ANKETA_OBOROT_BRANDS2DefaultArgs,
    > = $Result.GetResult<Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload, S>

    type GA_ANKETA_OBOROT_BRANDS2CountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<
        GA_ANKETA_OBOROT_BRANDS2FindManyArgs,
        'select' | 'include' | 'distinct'
    > & {
        select?: GA_ANKETA_OBOROT_BRANDS2CountAggregateInputType | true
    }

    export interface GA_ANKETA_OBOROT_BRANDS2Delegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_ANKETA_OBOROT_BRANDS2']
            meta: { name: 'GA_ANKETA_OBOROT_BRANDS2' }
        }
        /**
         * Find zero or one GA_ANKETA_OBOROT_BRANDS2 that matches the filter.
         * @param {GA_ANKETA_OBOROT_BRANDS2FindUniqueArgs} args - Arguments to find a GA_ANKETA_OBOROT_BRANDS2
         * @example
         * // Get one GA_ANKETA_OBOROT_BRANDS2
         * const gA_ANKETA_OBOROT_BRANDS2 = await prisma.gA_ANKETA_OBOROT_BRANDS2.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_ANKETA_OBOROT_BRANDS2FindUniqueArgs<ExtArgs>>(
            args: SelectSubset<
                T,
                GA_ANKETA_OBOROT_BRANDS2FindUniqueArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_OBOROT_BRANDS2Client<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_ANKETA_OBOROT_BRANDS2 that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_ANKETA_OBOROT_BRANDS2FindUniqueOrThrowArgs} args - Arguments to find a GA_ANKETA_OBOROT_BRANDS2
         * @example
         * // Get one GA_ANKETA_OBOROT_BRANDS2
         * const gA_ANKETA_OBOROT_BRANDS2 = await prisma.gA_ANKETA_OBOROT_BRANDS2.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_ANKETA_OBOROT_BRANDS2FindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_BRANDS2FindUniqueOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_OBOROT_BRANDS2Client<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_OBOROT_BRANDS2 that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_BRANDS2FindFirstArgs} args - Arguments to find a GA_ANKETA_OBOROT_BRANDS2
         * @example
         * // Get one GA_ANKETA_OBOROT_BRANDS2
         * const gA_ANKETA_OBOROT_BRANDS2 = await prisma.gA_ANKETA_OBOROT_BRANDS2.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_ANKETA_OBOROT_BRANDS2FindFirstArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_BRANDS2FindFirstArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_OBOROT_BRANDS2Client<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_OBOROT_BRANDS2 that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_BRANDS2FindFirstOrThrowArgs} args - Arguments to find a GA_ANKETA_OBOROT_BRANDS2
         * @example
         * // Get one GA_ANKETA_OBOROT_BRANDS2
         * const gA_ANKETA_OBOROT_BRANDS2 = await prisma.gA_ANKETA_OBOROT_BRANDS2.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<
            T extends GA_ANKETA_OBOROT_BRANDS2FindFirstOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_BRANDS2FindFirstOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_OBOROT_BRANDS2Client<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_ANKETA_OBOROT_BRANDS2s that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_BRANDS2FindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_ANKETA_OBOROT_BRANDS2s
         * const gA_ANKETA_OBOROT_BRANDS2s = await prisma.gA_ANKETA_OBOROT_BRANDS2.findMany()
         *
         * // Get first 10 GA_ANKETA_OBOROT_BRANDS2s
         * const gA_ANKETA_OBOROT_BRANDS2s = await prisma.gA_ANKETA_OBOROT_BRANDS2.findMany({ take: 10 })
         *
         * // Only select the `AOB_ABA_ID`
         * const gA_ANKETA_OBOROT_BRANDS2WithAOB_ABA_IDOnly = await prisma.gA_ANKETA_OBOROT_BRANDS2.findMany({ select: { AOB_ABA_ID: true } })
         *
         **/
        findMany<T extends GA_ANKETA_OBOROT_BRANDS2FindManyArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_BRANDS2FindManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_ANKETA_OBOROT_BRANDS2.
         * @param {GA_ANKETA_OBOROT_BRANDS2CreateArgs} args - Arguments to create a GA_ANKETA_OBOROT_BRANDS2.
         * @example
         * // Create one GA_ANKETA_OBOROT_BRANDS2
         * const GA_ANKETA_OBOROT_BRANDS2 = await prisma.gA_ANKETA_OBOROT_BRANDS2.create({
         *   data: {
         *     // ... data to create a GA_ANKETA_OBOROT_BRANDS2
         *   }
         * })
         *
         **/
        create<T extends GA_ANKETA_OBOROT_BRANDS2CreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROT_BRANDS2CreateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROT_BRANDS2Client<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_ANKETA_OBOROT_BRANDS2s.
         *     @param {GA_ANKETA_OBOROT_BRANDS2CreateManyArgs} args - Arguments to create many GA_ANKETA_OBOROT_BRANDS2s.
         *     @example
         *     // Create many GA_ANKETA_OBOROT_BRANDS2s
         *     const gA_ANKETA_OBOROT_BRANDS2 = await prisma.gA_ANKETA_OBOROT_BRANDS2.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_ANKETA_OBOROT_BRANDS2CreateManyArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_BRANDS2CreateManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_ANKETA_OBOROT_BRANDS2.
         * @param {GA_ANKETA_OBOROT_BRANDS2DeleteArgs} args - Arguments to delete one GA_ANKETA_OBOROT_BRANDS2.
         * @example
         * // Delete one GA_ANKETA_OBOROT_BRANDS2
         * const GA_ANKETA_OBOROT_BRANDS2 = await prisma.gA_ANKETA_OBOROT_BRANDS2.delete({
         *   where: {
         *     // ... filter to delete one GA_ANKETA_OBOROT_BRANDS2
         *   }
         * })
         *
         **/
        delete<T extends GA_ANKETA_OBOROT_BRANDS2DeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROT_BRANDS2DeleteArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROT_BRANDS2Client<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_ANKETA_OBOROT_BRANDS2.
         * @param {GA_ANKETA_OBOROT_BRANDS2UpdateArgs} args - Arguments to update one GA_ANKETA_OBOROT_BRANDS2.
         * @example
         * // Update one GA_ANKETA_OBOROT_BRANDS2
         * const gA_ANKETA_OBOROT_BRANDS2 = await prisma.gA_ANKETA_OBOROT_BRANDS2.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_ANKETA_OBOROT_BRANDS2UpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROT_BRANDS2UpdateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROT_BRANDS2Client<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_ANKETA_OBOROT_BRANDS2s.
         * @param {GA_ANKETA_OBOROT_BRANDS2DeleteManyArgs} args - Arguments to filter GA_ANKETA_OBOROT_BRANDS2s to delete.
         * @example
         * // Delete a few GA_ANKETA_OBOROT_BRANDS2s
         * const { count } = await prisma.gA_ANKETA_OBOROT_BRANDS2.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_ANKETA_OBOROT_BRANDS2DeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_BRANDS2DeleteManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_ANKETA_OBOROT_BRANDS2s.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_BRANDS2UpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_ANKETA_OBOROT_BRANDS2s
         * const gA_ANKETA_OBOROT_BRANDS2 = await prisma.gA_ANKETA_OBOROT_BRANDS2.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_ANKETA_OBOROT_BRANDS2UpdateManyArgs<ExtArgs>>(
            args: SelectSubset<
                T,
                GA_ANKETA_OBOROT_BRANDS2UpdateManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_ANKETA_OBOROT_BRANDS2.
         * @param {GA_ANKETA_OBOROT_BRANDS2UpsertArgs} args - Arguments to update or create a GA_ANKETA_OBOROT_BRANDS2.
         * @example
         * // Update or create a GA_ANKETA_OBOROT_BRANDS2
         * const gA_ANKETA_OBOROT_BRANDS2 = await prisma.gA_ANKETA_OBOROT_BRANDS2.upsert({
         *   create: {
         *     // ... data to create a GA_ANKETA_OBOROT_BRANDS2
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_ANKETA_OBOROT_BRANDS2 we want to update
         *   }
         * })
         **/
        upsert<T extends GA_ANKETA_OBOROT_BRANDS2UpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROT_BRANDS2UpsertArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROT_BRANDS2Client<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_BRANDS2Payload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_ANKETA_OBOROT_BRANDS2s.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_BRANDS2CountArgs} args - Arguments to filter GA_ANKETA_OBOROT_BRANDS2s to count.
         * @example
         * // Count the number of GA_ANKETA_OBOROT_BRANDS2s
         * const count = await prisma.gA_ANKETA_OBOROT_BRANDS2.count({
         *   where: {
         *     // ... the filter for the GA_ANKETA_OBOROT_BRANDS2s we want to count
         *   }
         * })
         **/
        count<T extends GA_ANKETA_OBOROT_BRANDS2CountArgs>(
            args?: Subset<T, GA_ANKETA_OBOROT_BRANDS2CountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_ANKETA_OBOROT_BRANDS2CountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_ANKETA_OBOROT_BRANDS2.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_BRANDS2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_ANKETA_OBOROT_BRANDS2AggregateArgs>(
            args: Subset<T, GA_ANKETA_OBOROT_BRANDS2AggregateArgs>
        ): Prisma.PrismaPromise<GetGA_ANKETA_OBOROT_BRANDS2AggregateType<T>>

        /**
         * Group by GA_ANKETA_OBOROT_BRANDS2.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_BRANDS2GroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_ANKETA_OBOROT_BRANDS2GroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_ANKETA_OBOROT_BRANDS2GroupByArgs['orderBy'] }
                : { orderBy?: GA_ANKETA_OBOROT_BRANDS2GroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<
                T,
                GA_ANKETA_OBOROT_BRANDS2GroupByArgs,
                OrderByArg
            > &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_ANKETA_OBOROT_BRANDS2GroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_ANKETA_OBOROT_BRANDS2 model
         */
        readonly fields: GA_ANKETA_OBOROT_BRANDS2FieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_ANKETA_OBOROT_BRANDS2.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_ANKETA_OBOROT_BRANDS2Client<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_ANKETA_OBOROT_BRANDS2 model
     */
    interface GA_ANKETA_OBOROT_BRANDS2FieldRefs {
        readonly AOB_ABA_ID: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'BigInt'>
        readonly AOB_DATETIME: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'DateTime'>
        readonly AOB_ALL_7438: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50011_7438: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50012_7438: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50013_7438: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50014_7438: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_ALL_7801: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50011_7801: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50012_7801: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50013_7801: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50014_7801: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_ALL_7763: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50011_7763: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50012_7763: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50013_7763: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50014_7763: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_ALL_265: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50011_265: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50012_265: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50013_265: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50014_265: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_ALL_24158: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50011_24158: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50012_24158: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50013_24158: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50014_24158: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_ALL_7219: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50011_7219: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50012_7219: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50013_7219: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
        readonly AOB_50014_7219: FieldRef<'GA_ANKETA_OBOROT_BRANDS2', 'Float'>
    }

    // Custom InputTypes

    /**
     * GA_ANKETA_OBOROT_BRANDS2 findUnique
     */
    export type GA_ANKETA_OBOROT_BRANDS2FindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS2
         */
        select?: GA_ANKETA_OBOROT_BRANDS2Select<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT_BRANDS2 to fetch.
         */
        where: GA_ANKETA_OBOROT_BRANDS2WhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS2 findUniqueOrThrow
     */
    export type GA_ANKETA_OBOROT_BRANDS2FindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS2
         */
        select?: GA_ANKETA_OBOROT_BRANDS2Select<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT_BRANDS2 to fetch.
         */
        where: GA_ANKETA_OBOROT_BRANDS2WhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS2 findFirst
     */
    export type GA_ANKETA_OBOROT_BRANDS2FindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS2
         */
        select?: GA_ANKETA_OBOROT_BRANDS2Select<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT_BRANDS2 to fetch.
         */
        where?: GA_ANKETA_OBOROT_BRANDS2WhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROT_BRANDS2s to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROT_BRANDS2OrderByWithRelationInput
            | GA_ANKETA_OBOROT_BRANDS2OrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_OBOROT_BRANDS2s.
         */
        cursor?: GA_ANKETA_OBOROT_BRANDS2WhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROT_BRANDS2s from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROT_BRANDS2s.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_OBOROT_BRANDS2s.
         */
        distinct?:
            | GA_ANKETA_OBOROT_BRANDS2ScalarFieldEnum
            | GA_ANKETA_OBOROT_BRANDS2ScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS2 findFirstOrThrow
     */
    export type GA_ANKETA_OBOROT_BRANDS2FindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS2
         */
        select?: GA_ANKETA_OBOROT_BRANDS2Select<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT_BRANDS2 to fetch.
         */
        where?: GA_ANKETA_OBOROT_BRANDS2WhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROT_BRANDS2s to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROT_BRANDS2OrderByWithRelationInput
            | GA_ANKETA_OBOROT_BRANDS2OrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_OBOROT_BRANDS2s.
         */
        cursor?: GA_ANKETA_OBOROT_BRANDS2WhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROT_BRANDS2s from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROT_BRANDS2s.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_OBOROT_BRANDS2s.
         */
        distinct?:
            | GA_ANKETA_OBOROT_BRANDS2ScalarFieldEnum
            | GA_ANKETA_OBOROT_BRANDS2ScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS2 findMany
     */
    export type GA_ANKETA_OBOROT_BRANDS2FindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS2
         */
        select?: GA_ANKETA_OBOROT_BRANDS2Select<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT_BRANDS2s to fetch.
         */
        where?: GA_ANKETA_OBOROT_BRANDS2WhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROT_BRANDS2s to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROT_BRANDS2OrderByWithRelationInput
            | GA_ANKETA_OBOROT_BRANDS2OrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_ANKETA_OBOROT_BRANDS2s.
         */
        cursor?: GA_ANKETA_OBOROT_BRANDS2WhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROT_BRANDS2s from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROT_BRANDS2s.
         */
        skip?: number
        distinct?:
            | GA_ANKETA_OBOROT_BRANDS2ScalarFieldEnum
            | GA_ANKETA_OBOROT_BRANDS2ScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS2 create
     */
    export type GA_ANKETA_OBOROT_BRANDS2CreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS2
         */
        select?: GA_ANKETA_OBOROT_BRANDS2Select<ExtArgs> | null
        /**
         * The data needed to create a GA_ANKETA_OBOROT_BRANDS2.
         */
        data: XOR<
            GA_ANKETA_OBOROT_BRANDS2CreateInput,
            GA_ANKETA_OBOROT_BRANDS2UncheckedCreateInput
        >
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS2 createMany
     */
    export type GA_ANKETA_OBOROT_BRANDS2CreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_ANKETA_OBOROT_BRANDS2s.
         */
        data:
            | GA_ANKETA_OBOROT_BRANDS2CreateManyInput
            | GA_ANKETA_OBOROT_BRANDS2CreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS2 update
     */
    export type GA_ANKETA_OBOROT_BRANDS2UpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS2
         */
        select?: GA_ANKETA_OBOROT_BRANDS2Select<ExtArgs> | null
        /**
         * The data needed to update a GA_ANKETA_OBOROT_BRANDS2.
         */
        data: XOR<
            GA_ANKETA_OBOROT_BRANDS2UpdateInput,
            GA_ANKETA_OBOROT_BRANDS2UncheckedUpdateInput
        >
        /**
         * Choose, which GA_ANKETA_OBOROT_BRANDS2 to update.
         */
        where: GA_ANKETA_OBOROT_BRANDS2WhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS2 updateMany
     */
    export type GA_ANKETA_OBOROT_BRANDS2UpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_ANKETA_OBOROT_BRANDS2s.
         */
        data: XOR<
            GA_ANKETA_OBOROT_BRANDS2UpdateManyMutationInput,
            GA_ANKETA_OBOROT_BRANDS2UncheckedUpdateManyInput
        >
        /**
         * Filter which GA_ANKETA_OBOROT_BRANDS2s to update
         */
        where?: GA_ANKETA_OBOROT_BRANDS2WhereInput
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS2 upsert
     */
    export type GA_ANKETA_OBOROT_BRANDS2UpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS2
         */
        select?: GA_ANKETA_OBOROT_BRANDS2Select<ExtArgs> | null
        /**
         * The filter to search for the GA_ANKETA_OBOROT_BRANDS2 to update in case it exists.
         */
        where: GA_ANKETA_OBOROT_BRANDS2WhereUniqueInput
        /**
         * In case the GA_ANKETA_OBOROT_BRANDS2 found by the `where` argument doesn't exist, create a new GA_ANKETA_OBOROT_BRANDS2 with this data.
         */
        create: XOR<
            GA_ANKETA_OBOROT_BRANDS2CreateInput,
            GA_ANKETA_OBOROT_BRANDS2UncheckedCreateInput
        >
        /**
         * In case the GA_ANKETA_OBOROT_BRANDS2 was found with the provided `where` argument, update it with this data.
         */
        update: XOR<
            GA_ANKETA_OBOROT_BRANDS2UpdateInput,
            GA_ANKETA_OBOROT_BRANDS2UncheckedUpdateInput
        >
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS2 delete
     */
    export type GA_ANKETA_OBOROT_BRANDS2DeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS2
         */
        select?: GA_ANKETA_OBOROT_BRANDS2Select<ExtArgs> | null
        /**
         * Filter which GA_ANKETA_OBOROT_BRANDS2 to delete.
         */
        where: GA_ANKETA_OBOROT_BRANDS2WhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS2 deleteMany
     */
    export type GA_ANKETA_OBOROT_BRANDS2DeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_OBOROT_BRANDS2s to delete
         */
        where?: GA_ANKETA_OBOROT_BRANDS2WhereInput
    }

    /**
     * GA_ANKETA_OBOROT_BRANDS2 without action
     */
    export type GA_ANKETA_OBOROT_BRANDS2DefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_BRANDS2
         */
        select?: GA_ANKETA_OBOROT_BRANDS2Select<ExtArgs> | null
    }

    /**
     * Model GA_ANKETA_OBOROT_COUNTS
     */

    export type AggregateGA_ANKETA_OBOROT_COUNTS = {
        _count: GA_ANKETA_OBOROT_COUNTSCountAggregateOutputType | null
        _avg: GA_ANKETA_OBOROT_COUNTSAvgAggregateOutputType | null
        _sum: GA_ANKETA_OBOROT_COUNTSSumAggregateOutputType | null
        _min: GA_ANKETA_OBOROT_COUNTSMinAggregateOutputType | null
        _max: GA_ANKETA_OBOROT_COUNTSMaxAggregateOutputType | null
    }

    export type GA_ANKETA_OBOROT_COUNTSAvgAggregateOutputType = {
        AOC_ABA_ID: number | null
        AOC_ALL_24189: number | null
        AOC_50011_24189: number | null
        AOC_50012_24189: number | null
        AOC_50013_24189: number | null
        AOC_50014_24189: number | null
        AOC_ALL_10566: number | null
        AOC_50011_10566: number | null
        AOC_50012_10566: number | null
        AOC_50013_10566: number | null
        AOC_50014_10566: number | null
        AOC_ALL_20079: number | null
        AOC_50011_20079: number | null
        AOC_50012_20079: number | null
        AOC_50013_20079: number | null
        AOC_50014_20079: number | null
        AOC_ALL_7251: number | null
        AOC_50011_7251: number | null
        AOC_50012_7251: number | null
        AOC_50013_7251: number | null
        AOC_50014_7251: number | null
        AOC_ALL_24191: number | null
        AOC_50011_24191: number | null
        AOC_50012_24191: number | null
        AOC_50013_24191: number | null
        AOC_50014_24191: number | null
        AOC_ALL_193: number | null
        AOC_50011_193: number | null
        AOC_50012_193: number | null
        AOC_50013_193: number | null
        AOC_50014_193: number | null
        AOC_ALL_7610: number | null
        AOC_50011_7610: number | null
        AOC_50012_7610: number | null
        AOC_50013_7610: number | null
        AOC_50014_7610: number | null
        AOC_ALL_10180: number | null
        AOC_50011_10180: number | null
        AOC_50012_10180: number | null
        AOC_50013_10180: number | null
        AOC_50014_10180: number | null
        AOC_ALL_177: number | null
        AOC_50011_177: number | null
        AOC_50012_177: number | null
        AOC_50013_177: number | null
        AOC_50014_177: number | null
        AOC_ALL_10223: number | null
        AOC_50011_10223: number | null
        AOC_50012_10223: number | null
        AOC_50013_10223: number | null
        AOC_50014_10223: number | null
        AOC_ALL_7230: number | null
        AOC_50011_7230: number | null
        AOC_50012_7230: number | null
        AOC_50013_7230: number | null
        AOC_50014_7230: number | null
        AOC_ALL_1359: number | null
        AOC_50011_1359: number | null
        AOC_50012_1359: number | null
        AOC_50013_1359: number | null
        AOC_50014_1359: number | null
        AOC_ALL_110: number | null
        AOC_50011_110: number | null
        AOC_50012_110: number | null
        AOC_50013_110: number | null
        AOC_50014_110: number | null
        AOC_ALL_20182: number | null
        AOC_50011_20182: number | null
        AOC_50012_20182: number | null
        AOC_50013_20182: number | null
        AOC_50014_20182: number | null
        AOC_ALL_20203: number | null
        AOC_50011_20203: number | null
        AOC_50012_20203: number | null
        AOC_50013_20203: number | null
        AOC_50014_20203: number | null
        AOC_ALL_24155: number | null
        AOC_50011_24155: number | null
        AOC_50012_24155: number | null
        AOC_50013_24155: number | null
        AOC_50014_24155: number | null
        AOC_ALL_24198: number | null
        AOC_50011_24198: number | null
        AOC_50012_24198: number | null
        AOC_50013_24198: number | null
        AOC_50014_24198: number | null
        AOC_ALL_135: number | null
        AOC_50011_135: number | null
        AOC_50012_135: number | null
        AOC_50013_135: number | null
        AOC_50014_135: number | null
        AOC_ALL_24196: number | null
        AOC_50011_24196: number | null
        AOC_50012_24196: number | null
        AOC_50013_24196: number | null
        AOC_50014_24196: number | null
        AOC_ALL_24197: number | null
        AOC_50011_24197: number | null
        AOC_50012_24197: number | null
        AOC_50013_24197: number | null
        AOC_50014_24197: number | null
        AOC_ALL_21: number | null
        AOC_50011_21: number | null
        AOC_50012_21: number | null
        AOC_50013_21: number | null
        AOC_50014_21: number | null
    }

    export type GA_ANKETA_OBOROT_COUNTSSumAggregateOutputType = {
        AOC_ABA_ID: bigint | null
        AOC_ALL_24189: number | null
        AOC_50011_24189: number | null
        AOC_50012_24189: number | null
        AOC_50013_24189: number | null
        AOC_50014_24189: number | null
        AOC_ALL_10566: number | null
        AOC_50011_10566: number | null
        AOC_50012_10566: number | null
        AOC_50013_10566: number | null
        AOC_50014_10566: number | null
        AOC_ALL_20079: number | null
        AOC_50011_20079: number | null
        AOC_50012_20079: number | null
        AOC_50013_20079: number | null
        AOC_50014_20079: number | null
        AOC_ALL_7251: number | null
        AOC_50011_7251: number | null
        AOC_50012_7251: number | null
        AOC_50013_7251: number | null
        AOC_50014_7251: number | null
        AOC_ALL_24191: number | null
        AOC_50011_24191: number | null
        AOC_50012_24191: number | null
        AOC_50013_24191: number | null
        AOC_50014_24191: number | null
        AOC_ALL_193: number | null
        AOC_50011_193: number | null
        AOC_50012_193: number | null
        AOC_50013_193: number | null
        AOC_50014_193: number | null
        AOC_ALL_7610: number | null
        AOC_50011_7610: number | null
        AOC_50012_7610: number | null
        AOC_50013_7610: number | null
        AOC_50014_7610: number | null
        AOC_ALL_10180: number | null
        AOC_50011_10180: number | null
        AOC_50012_10180: number | null
        AOC_50013_10180: number | null
        AOC_50014_10180: number | null
        AOC_ALL_177: number | null
        AOC_50011_177: number | null
        AOC_50012_177: number | null
        AOC_50013_177: number | null
        AOC_50014_177: number | null
        AOC_ALL_10223: number | null
        AOC_50011_10223: number | null
        AOC_50012_10223: number | null
        AOC_50013_10223: number | null
        AOC_50014_10223: number | null
        AOC_ALL_7230: number | null
        AOC_50011_7230: number | null
        AOC_50012_7230: number | null
        AOC_50013_7230: number | null
        AOC_50014_7230: number | null
        AOC_ALL_1359: number | null
        AOC_50011_1359: number | null
        AOC_50012_1359: number | null
        AOC_50013_1359: number | null
        AOC_50014_1359: number | null
        AOC_ALL_110: number | null
        AOC_50011_110: number | null
        AOC_50012_110: number | null
        AOC_50013_110: number | null
        AOC_50014_110: number | null
        AOC_ALL_20182: number | null
        AOC_50011_20182: number | null
        AOC_50012_20182: number | null
        AOC_50013_20182: number | null
        AOC_50014_20182: number | null
        AOC_ALL_20203: number | null
        AOC_50011_20203: number | null
        AOC_50012_20203: number | null
        AOC_50013_20203: number | null
        AOC_50014_20203: number | null
        AOC_ALL_24155: number | null
        AOC_50011_24155: number | null
        AOC_50012_24155: number | null
        AOC_50013_24155: number | null
        AOC_50014_24155: number | null
        AOC_ALL_24198: number | null
        AOC_50011_24198: number | null
        AOC_50012_24198: number | null
        AOC_50013_24198: number | null
        AOC_50014_24198: number | null
        AOC_ALL_135: number | null
        AOC_50011_135: number | null
        AOC_50012_135: number | null
        AOC_50013_135: number | null
        AOC_50014_135: number | null
        AOC_ALL_24196: number | null
        AOC_50011_24196: number | null
        AOC_50012_24196: number | null
        AOC_50013_24196: number | null
        AOC_50014_24196: number | null
        AOC_ALL_24197: number | null
        AOC_50011_24197: number | null
        AOC_50012_24197: number | null
        AOC_50013_24197: number | null
        AOC_50014_24197: number | null
        AOC_ALL_21: number | null
        AOC_50011_21: number | null
        AOC_50012_21: number | null
        AOC_50013_21: number | null
        AOC_50014_21: number | null
    }

    export type GA_ANKETA_OBOROT_COUNTSMinAggregateOutputType = {
        AOC_ABA_ID: bigint | null
        AOC_DATETIME: Date | null
        AOC_ALL_24189: number | null
        AOC_50011_24189: number | null
        AOC_50012_24189: number | null
        AOC_50013_24189: number | null
        AOC_50014_24189: number | null
        AOC_ALL_10566: number | null
        AOC_50011_10566: number | null
        AOC_50012_10566: number | null
        AOC_50013_10566: number | null
        AOC_50014_10566: number | null
        AOC_ALL_20079: number | null
        AOC_50011_20079: number | null
        AOC_50012_20079: number | null
        AOC_50013_20079: number | null
        AOC_50014_20079: number | null
        AOC_ALL_7251: number | null
        AOC_50011_7251: number | null
        AOC_50012_7251: number | null
        AOC_50013_7251: number | null
        AOC_50014_7251: number | null
        AOC_ALL_24191: number | null
        AOC_50011_24191: number | null
        AOC_50012_24191: number | null
        AOC_50013_24191: number | null
        AOC_50014_24191: number | null
        AOC_ALL_193: number | null
        AOC_50011_193: number | null
        AOC_50012_193: number | null
        AOC_50013_193: number | null
        AOC_50014_193: number | null
        AOC_ALL_7610: number | null
        AOC_50011_7610: number | null
        AOC_50012_7610: number | null
        AOC_50013_7610: number | null
        AOC_50014_7610: number | null
        AOC_ALL_10180: number | null
        AOC_50011_10180: number | null
        AOC_50012_10180: number | null
        AOC_50013_10180: number | null
        AOC_50014_10180: number | null
        AOC_ALL_177: number | null
        AOC_50011_177: number | null
        AOC_50012_177: number | null
        AOC_50013_177: number | null
        AOC_50014_177: number | null
        AOC_ALL_10223: number | null
        AOC_50011_10223: number | null
        AOC_50012_10223: number | null
        AOC_50013_10223: number | null
        AOC_50014_10223: number | null
        AOC_ALL_7230: number | null
        AOC_50011_7230: number | null
        AOC_50012_7230: number | null
        AOC_50013_7230: number | null
        AOC_50014_7230: number | null
        AOC_ALL_1359: number | null
        AOC_50011_1359: number | null
        AOC_50012_1359: number | null
        AOC_50013_1359: number | null
        AOC_50014_1359: number | null
        AOC_ALL_110: number | null
        AOC_50011_110: number | null
        AOC_50012_110: number | null
        AOC_50013_110: number | null
        AOC_50014_110: number | null
        AOC_ALL_20182: number | null
        AOC_50011_20182: number | null
        AOC_50012_20182: number | null
        AOC_50013_20182: number | null
        AOC_50014_20182: number | null
        AOC_ALL_20203: number | null
        AOC_50011_20203: number | null
        AOC_50012_20203: number | null
        AOC_50013_20203: number | null
        AOC_50014_20203: number | null
        AOC_ALL_24155: number | null
        AOC_50011_24155: number | null
        AOC_50012_24155: number | null
        AOC_50013_24155: number | null
        AOC_50014_24155: number | null
        AOC_ALL_24198: number | null
        AOC_50011_24198: number | null
        AOC_50012_24198: number | null
        AOC_50013_24198: number | null
        AOC_50014_24198: number | null
        AOC_ALL_135: number | null
        AOC_50011_135: number | null
        AOC_50012_135: number | null
        AOC_50013_135: number | null
        AOC_50014_135: number | null
        AOC_ALL_24196: number | null
        AOC_50011_24196: number | null
        AOC_50012_24196: number | null
        AOC_50013_24196: number | null
        AOC_50014_24196: number | null
        AOC_ALL_24197: number | null
        AOC_50011_24197: number | null
        AOC_50012_24197: number | null
        AOC_50013_24197: number | null
        AOC_50014_24197: number | null
        AOC_ALL_21: number | null
        AOC_50011_21: number | null
        AOC_50012_21: number | null
        AOC_50013_21: number | null
        AOC_50014_21: number | null
    }

    export type GA_ANKETA_OBOROT_COUNTSMaxAggregateOutputType = {
        AOC_ABA_ID: bigint | null
        AOC_DATETIME: Date | null
        AOC_ALL_24189: number | null
        AOC_50011_24189: number | null
        AOC_50012_24189: number | null
        AOC_50013_24189: number | null
        AOC_50014_24189: number | null
        AOC_ALL_10566: number | null
        AOC_50011_10566: number | null
        AOC_50012_10566: number | null
        AOC_50013_10566: number | null
        AOC_50014_10566: number | null
        AOC_ALL_20079: number | null
        AOC_50011_20079: number | null
        AOC_50012_20079: number | null
        AOC_50013_20079: number | null
        AOC_50014_20079: number | null
        AOC_ALL_7251: number | null
        AOC_50011_7251: number | null
        AOC_50012_7251: number | null
        AOC_50013_7251: number | null
        AOC_50014_7251: number | null
        AOC_ALL_24191: number | null
        AOC_50011_24191: number | null
        AOC_50012_24191: number | null
        AOC_50013_24191: number | null
        AOC_50014_24191: number | null
        AOC_ALL_193: number | null
        AOC_50011_193: number | null
        AOC_50012_193: number | null
        AOC_50013_193: number | null
        AOC_50014_193: number | null
        AOC_ALL_7610: number | null
        AOC_50011_7610: number | null
        AOC_50012_7610: number | null
        AOC_50013_7610: number | null
        AOC_50014_7610: number | null
        AOC_ALL_10180: number | null
        AOC_50011_10180: number | null
        AOC_50012_10180: number | null
        AOC_50013_10180: number | null
        AOC_50014_10180: number | null
        AOC_ALL_177: number | null
        AOC_50011_177: number | null
        AOC_50012_177: number | null
        AOC_50013_177: number | null
        AOC_50014_177: number | null
        AOC_ALL_10223: number | null
        AOC_50011_10223: number | null
        AOC_50012_10223: number | null
        AOC_50013_10223: number | null
        AOC_50014_10223: number | null
        AOC_ALL_7230: number | null
        AOC_50011_7230: number | null
        AOC_50012_7230: number | null
        AOC_50013_7230: number | null
        AOC_50014_7230: number | null
        AOC_ALL_1359: number | null
        AOC_50011_1359: number | null
        AOC_50012_1359: number | null
        AOC_50013_1359: number | null
        AOC_50014_1359: number | null
        AOC_ALL_110: number | null
        AOC_50011_110: number | null
        AOC_50012_110: number | null
        AOC_50013_110: number | null
        AOC_50014_110: number | null
        AOC_ALL_20182: number | null
        AOC_50011_20182: number | null
        AOC_50012_20182: number | null
        AOC_50013_20182: number | null
        AOC_50014_20182: number | null
        AOC_ALL_20203: number | null
        AOC_50011_20203: number | null
        AOC_50012_20203: number | null
        AOC_50013_20203: number | null
        AOC_50014_20203: number | null
        AOC_ALL_24155: number | null
        AOC_50011_24155: number | null
        AOC_50012_24155: number | null
        AOC_50013_24155: number | null
        AOC_50014_24155: number | null
        AOC_ALL_24198: number | null
        AOC_50011_24198: number | null
        AOC_50012_24198: number | null
        AOC_50013_24198: number | null
        AOC_50014_24198: number | null
        AOC_ALL_135: number | null
        AOC_50011_135: number | null
        AOC_50012_135: number | null
        AOC_50013_135: number | null
        AOC_50014_135: number | null
        AOC_ALL_24196: number | null
        AOC_50011_24196: number | null
        AOC_50012_24196: number | null
        AOC_50013_24196: number | null
        AOC_50014_24196: number | null
        AOC_ALL_24197: number | null
        AOC_50011_24197: number | null
        AOC_50012_24197: number | null
        AOC_50013_24197: number | null
        AOC_50014_24197: number | null
        AOC_ALL_21: number | null
        AOC_50011_21: number | null
        AOC_50012_21: number | null
        AOC_50013_21: number | null
        AOC_50014_21: number | null
    }

    export type GA_ANKETA_OBOROT_COUNTSCountAggregateOutputType = {
        AOC_ABA_ID: number
        AOC_DATETIME: number
        AOC_ALL_24189: number
        AOC_50011_24189: number
        AOC_50012_24189: number
        AOC_50013_24189: number
        AOC_50014_24189: number
        AOC_ALL_10566: number
        AOC_50011_10566: number
        AOC_50012_10566: number
        AOC_50013_10566: number
        AOC_50014_10566: number
        AOC_ALL_20079: number
        AOC_50011_20079: number
        AOC_50012_20079: number
        AOC_50013_20079: number
        AOC_50014_20079: number
        AOC_ALL_7251: number
        AOC_50011_7251: number
        AOC_50012_7251: number
        AOC_50013_7251: number
        AOC_50014_7251: number
        AOC_ALL_24191: number
        AOC_50011_24191: number
        AOC_50012_24191: number
        AOC_50013_24191: number
        AOC_50014_24191: number
        AOC_ALL_193: number
        AOC_50011_193: number
        AOC_50012_193: number
        AOC_50013_193: number
        AOC_50014_193: number
        AOC_ALL_7610: number
        AOC_50011_7610: number
        AOC_50012_7610: number
        AOC_50013_7610: number
        AOC_50014_7610: number
        AOC_ALL_10180: number
        AOC_50011_10180: number
        AOC_50012_10180: number
        AOC_50013_10180: number
        AOC_50014_10180: number
        AOC_ALL_177: number
        AOC_50011_177: number
        AOC_50012_177: number
        AOC_50013_177: number
        AOC_50014_177: number
        AOC_ALL_10223: number
        AOC_50011_10223: number
        AOC_50012_10223: number
        AOC_50013_10223: number
        AOC_50014_10223: number
        AOC_ALL_7230: number
        AOC_50011_7230: number
        AOC_50012_7230: number
        AOC_50013_7230: number
        AOC_50014_7230: number
        AOC_ALL_1359: number
        AOC_50011_1359: number
        AOC_50012_1359: number
        AOC_50013_1359: number
        AOC_50014_1359: number
        AOC_ALL_110: number
        AOC_50011_110: number
        AOC_50012_110: number
        AOC_50013_110: number
        AOC_50014_110: number
        AOC_ALL_20182: number
        AOC_50011_20182: number
        AOC_50012_20182: number
        AOC_50013_20182: number
        AOC_50014_20182: number
        AOC_ALL_20203: number
        AOC_50011_20203: number
        AOC_50012_20203: number
        AOC_50013_20203: number
        AOC_50014_20203: number
        AOC_ALL_24155: number
        AOC_50011_24155: number
        AOC_50012_24155: number
        AOC_50013_24155: number
        AOC_50014_24155: number
        AOC_ALL_24198: number
        AOC_50011_24198: number
        AOC_50012_24198: number
        AOC_50013_24198: number
        AOC_50014_24198: number
        AOC_ALL_135: number
        AOC_50011_135: number
        AOC_50012_135: number
        AOC_50013_135: number
        AOC_50014_135: number
        AOC_ALL_24196: number
        AOC_50011_24196: number
        AOC_50012_24196: number
        AOC_50013_24196: number
        AOC_50014_24196: number
        AOC_ALL_24197: number
        AOC_50011_24197: number
        AOC_50012_24197: number
        AOC_50013_24197: number
        AOC_50014_24197: number
        AOC_ALL_21: number
        AOC_50011_21: number
        AOC_50012_21: number
        AOC_50013_21: number
        AOC_50014_21: number
        _all: number
    }

    export type GA_ANKETA_OBOROT_COUNTSAvgAggregateInputType = {
        AOC_ABA_ID?: true
        AOC_ALL_24189?: true
        AOC_50011_24189?: true
        AOC_50012_24189?: true
        AOC_50013_24189?: true
        AOC_50014_24189?: true
        AOC_ALL_10566?: true
        AOC_50011_10566?: true
        AOC_50012_10566?: true
        AOC_50013_10566?: true
        AOC_50014_10566?: true
        AOC_ALL_20079?: true
        AOC_50011_20079?: true
        AOC_50012_20079?: true
        AOC_50013_20079?: true
        AOC_50014_20079?: true
        AOC_ALL_7251?: true
        AOC_50011_7251?: true
        AOC_50012_7251?: true
        AOC_50013_7251?: true
        AOC_50014_7251?: true
        AOC_ALL_24191?: true
        AOC_50011_24191?: true
        AOC_50012_24191?: true
        AOC_50013_24191?: true
        AOC_50014_24191?: true
        AOC_ALL_193?: true
        AOC_50011_193?: true
        AOC_50012_193?: true
        AOC_50013_193?: true
        AOC_50014_193?: true
        AOC_ALL_7610?: true
        AOC_50011_7610?: true
        AOC_50012_7610?: true
        AOC_50013_7610?: true
        AOC_50014_7610?: true
        AOC_ALL_10180?: true
        AOC_50011_10180?: true
        AOC_50012_10180?: true
        AOC_50013_10180?: true
        AOC_50014_10180?: true
        AOC_ALL_177?: true
        AOC_50011_177?: true
        AOC_50012_177?: true
        AOC_50013_177?: true
        AOC_50014_177?: true
        AOC_ALL_10223?: true
        AOC_50011_10223?: true
        AOC_50012_10223?: true
        AOC_50013_10223?: true
        AOC_50014_10223?: true
        AOC_ALL_7230?: true
        AOC_50011_7230?: true
        AOC_50012_7230?: true
        AOC_50013_7230?: true
        AOC_50014_7230?: true
        AOC_ALL_1359?: true
        AOC_50011_1359?: true
        AOC_50012_1359?: true
        AOC_50013_1359?: true
        AOC_50014_1359?: true
        AOC_ALL_110?: true
        AOC_50011_110?: true
        AOC_50012_110?: true
        AOC_50013_110?: true
        AOC_50014_110?: true
        AOC_ALL_20182?: true
        AOC_50011_20182?: true
        AOC_50012_20182?: true
        AOC_50013_20182?: true
        AOC_50014_20182?: true
        AOC_ALL_20203?: true
        AOC_50011_20203?: true
        AOC_50012_20203?: true
        AOC_50013_20203?: true
        AOC_50014_20203?: true
        AOC_ALL_24155?: true
        AOC_50011_24155?: true
        AOC_50012_24155?: true
        AOC_50013_24155?: true
        AOC_50014_24155?: true
        AOC_ALL_24198?: true
        AOC_50011_24198?: true
        AOC_50012_24198?: true
        AOC_50013_24198?: true
        AOC_50014_24198?: true
        AOC_ALL_135?: true
        AOC_50011_135?: true
        AOC_50012_135?: true
        AOC_50013_135?: true
        AOC_50014_135?: true
        AOC_ALL_24196?: true
        AOC_50011_24196?: true
        AOC_50012_24196?: true
        AOC_50013_24196?: true
        AOC_50014_24196?: true
        AOC_ALL_24197?: true
        AOC_50011_24197?: true
        AOC_50012_24197?: true
        AOC_50013_24197?: true
        AOC_50014_24197?: true
        AOC_ALL_21?: true
        AOC_50011_21?: true
        AOC_50012_21?: true
        AOC_50013_21?: true
        AOC_50014_21?: true
    }

    export type GA_ANKETA_OBOROT_COUNTSSumAggregateInputType = {
        AOC_ABA_ID?: true
        AOC_ALL_24189?: true
        AOC_50011_24189?: true
        AOC_50012_24189?: true
        AOC_50013_24189?: true
        AOC_50014_24189?: true
        AOC_ALL_10566?: true
        AOC_50011_10566?: true
        AOC_50012_10566?: true
        AOC_50013_10566?: true
        AOC_50014_10566?: true
        AOC_ALL_20079?: true
        AOC_50011_20079?: true
        AOC_50012_20079?: true
        AOC_50013_20079?: true
        AOC_50014_20079?: true
        AOC_ALL_7251?: true
        AOC_50011_7251?: true
        AOC_50012_7251?: true
        AOC_50013_7251?: true
        AOC_50014_7251?: true
        AOC_ALL_24191?: true
        AOC_50011_24191?: true
        AOC_50012_24191?: true
        AOC_50013_24191?: true
        AOC_50014_24191?: true
        AOC_ALL_193?: true
        AOC_50011_193?: true
        AOC_50012_193?: true
        AOC_50013_193?: true
        AOC_50014_193?: true
        AOC_ALL_7610?: true
        AOC_50011_7610?: true
        AOC_50012_7610?: true
        AOC_50013_7610?: true
        AOC_50014_7610?: true
        AOC_ALL_10180?: true
        AOC_50011_10180?: true
        AOC_50012_10180?: true
        AOC_50013_10180?: true
        AOC_50014_10180?: true
        AOC_ALL_177?: true
        AOC_50011_177?: true
        AOC_50012_177?: true
        AOC_50013_177?: true
        AOC_50014_177?: true
        AOC_ALL_10223?: true
        AOC_50011_10223?: true
        AOC_50012_10223?: true
        AOC_50013_10223?: true
        AOC_50014_10223?: true
        AOC_ALL_7230?: true
        AOC_50011_7230?: true
        AOC_50012_7230?: true
        AOC_50013_7230?: true
        AOC_50014_7230?: true
        AOC_ALL_1359?: true
        AOC_50011_1359?: true
        AOC_50012_1359?: true
        AOC_50013_1359?: true
        AOC_50014_1359?: true
        AOC_ALL_110?: true
        AOC_50011_110?: true
        AOC_50012_110?: true
        AOC_50013_110?: true
        AOC_50014_110?: true
        AOC_ALL_20182?: true
        AOC_50011_20182?: true
        AOC_50012_20182?: true
        AOC_50013_20182?: true
        AOC_50014_20182?: true
        AOC_ALL_20203?: true
        AOC_50011_20203?: true
        AOC_50012_20203?: true
        AOC_50013_20203?: true
        AOC_50014_20203?: true
        AOC_ALL_24155?: true
        AOC_50011_24155?: true
        AOC_50012_24155?: true
        AOC_50013_24155?: true
        AOC_50014_24155?: true
        AOC_ALL_24198?: true
        AOC_50011_24198?: true
        AOC_50012_24198?: true
        AOC_50013_24198?: true
        AOC_50014_24198?: true
        AOC_ALL_135?: true
        AOC_50011_135?: true
        AOC_50012_135?: true
        AOC_50013_135?: true
        AOC_50014_135?: true
        AOC_ALL_24196?: true
        AOC_50011_24196?: true
        AOC_50012_24196?: true
        AOC_50013_24196?: true
        AOC_50014_24196?: true
        AOC_ALL_24197?: true
        AOC_50011_24197?: true
        AOC_50012_24197?: true
        AOC_50013_24197?: true
        AOC_50014_24197?: true
        AOC_ALL_21?: true
        AOC_50011_21?: true
        AOC_50012_21?: true
        AOC_50013_21?: true
        AOC_50014_21?: true
    }

    export type GA_ANKETA_OBOROT_COUNTSMinAggregateInputType = {
        AOC_ABA_ID?: true
        AOC_DATETIME?: true
        AOC_ALL_24189?: true
        AOC_50011_24189?: true
        AOC_50012_24189?: true
        AOC_50013_24189?: true
        AOC_50014_24189?: true
        AOC_ALL_10566?: true
        AOC_50011_10566?: true
        AOC_50012_10566?: true
        AOC_50013_10566?: true
        AOC_50014_10566?: true
        AOC_ALL_20079?: true
        AOC_50011_20079?: true
        AOC_50012_20079?: true
        AOC_50013_20079?: true
        AOC_50014_20079?: true
        AOC_ALL_7251?: true
        AOC_50011_7251?: true
        AOC_50012_7251?: true
        AOC_50013_7251?: true
        AOC_50014_7251?: true
        AOC_ALL_24191?: true
        AOC_50011_24191?: true
        AOC_50012_24191?: true
        AOC_50013_24191?: true
        AOC_50014_24191?: true
        AOC_ALL_193?: true
        AOC_50011_193?: true
        AOC_50012_193?: true
        AOC_50013_193?: true
        AOC_50014_193?: true
        AOC_ALL_7610?: true
        AOC_50011_7610?: true
        AOC_50012_7610?: true
        AOC_50013_7610?: true
        AOC_50014_7610?: true
        AOC_ALL_10180?: true
        AOC_50011_10180?: true
        AOC_50012_10180?: true
        AOC_50013_10180?: true
        AOC_50014_10180?: true
        AOC_ALL_177?: true
        AOC_50011_177?: true
        AOC_50012_177?: true
        AOC_50013_177?: true
        AOC_50014_177?: true
        AOC_ALL_10223?: true
        AOC_50011_10223?: true
        AOC_50012_10223?: true
        AOC_50013_10223?: true
        AOC_50014_10223?: true
        AOC_ALL_7230?: true
        AOC_50011_7230?: true
        AOC_50012_7230?: true
        AOC_50013_7230?: true
        AOC_50014_7230?: true
        AOC_ALL_1359?: true
        AOC_50011_1359?: true
        AOC_50012_1359?: true
        AOC_50013_1359?: true
        AOC_50014_1359?: true
        AOC_ALL_110?: true
        AOC_50011_110?: true
        AOC_50012_110?: true
        AOC_50013_110?: true
        AOC_50014_110?: true
        AOC_ALL_20182?: true
        AOC_50011_20182?: true
        AOC_50012_20182?: true
        AOC_50013_20182?: true
        AOC_50014_20182?: true
        AOC_ALL_20203?: true
        AOC_50011_20203?: true
        AOC_50012_20203?: true
        AOC_50013_20203?: true
        AOC_50014_20203?: true
        AOC_ALL_24155?: true
        AOC_50011_24155?: true
        AOC_50012_24155?: true
        AOC_50013_24155?: true
        AOC_50014_24155?: true
        AOC_ALL_24198?: true
        AOC_50011_24198?: true
        AOC_50012_24198?: true
        AOC_50013_24198?: true
        AOC_50014_24198?: true
        AOC_ALL_135?: true
        AOC_50011_135?: true
        AOC_50012_135?: true
        AOC_50013_135?: true
        AOC_50014_135?: true
        AOC_ALL_24196?: true
        AOC_50011_24196?: true
        AOC_50012_24196?: true
        AOC_50013_24196?: true
        AOC_50014_24196?: true
        AOC_ALL_24197?: true
        AOC_50011_24197?: true
        AOC_50012_24197?: true
        AOC_50013_24197?: true
        AOC_50014_24197?: true
        AOC_ALL_21?: true
        AOC_50011_21?: true
        AOC_50012_21?: true
        AOC_50013_21?: true
        AOC_50014_21?: true
    }

    export type GA_ANKETA_OBOROT_COUNTSMaxAggregateInputType = {
        AOC_ABA_ID?: true
        AOC_DATETIME?: true
        AOC_ALL_24189?: true
        AOC_50011_24189?: true
        AOC_50012_24189?: true
        AOC_50013_24189?: true
        AOC_50014_24189?: true
        AOC_ALL_10566?: true
        AOC_50011_10566?: true
        AOC_50012_10566?: true
        AOC_50013_10566?: true
        AOC_50014_10566?: true
        AOC_ALL_20079?: true
        AOC_50011_20079?: true
        AOC_50012_20079?: true
        AOC_50013_20079?: true
        AOC_50014_20079?: true
        AOC_ALL_7251?: true
        AOC_50011_7251?: true
        AOC_50012_7251?: true
        AOC_50013_7251?: true
        AOC_50014_7251?: true
        AOC_ALL_24191?: true
        AOC_50011_24191?: true
        AOC_50012_24191?: true
        AOC_50013_24191?: true
        AOC_50014_24191?: true
        AOC_ALL_193?: true
        AOC_50011_193?: true
        AOC_50012_193?: true
        AOC_50013_193?: true
        AOC_50014_193?: true
        AOC_ALL_7610?: true
        AOC_50011_7610?: true
        AOC_50012_7610?: true
        AOC_50013_7610?: true
        AOC_50014_7610?: true
        AOC_ALL_10180?: true
        AOC_50011_10180?: true
        AOC_50012_10180?: true
        AOC_50013_10180?: true
        AOC_50014_10180?: true
        AOC_ALL_177?: true
        AOC_50011_177?: true
        AOC_50012_177?: true
        AOC_50013_177?: true
        AOC_50014_177?: true
        AOC_ALL_10223?: true
        AOC_50011_10223?: true
        AOC_50012_10223?: true
        AOC_50013_10223?: true
        AOC_50014_10223?: true
        AOC_ALL_7230?: true
        AOC_50011_7230?: true
        AOC_50012_7230?: true
        AOC_50013_7230?: true
        AOC_50014_7230?: true
        AOC_ALL_1359?: true
        AOC_50011_1359?: true
        AOC_50012_1359?: true
        AOC_50013_1359?: true
        AOC_50014_1359?: true
        AOC_ALL_110?: true
        AOC_50011_110?: true
        AOC_50012_110?: true
        AOC_50013_110?: true
        AOC_50014_110?: true
        AOC_ALL_20182?: true
        AOC_50011_20182?: true
        AOC_50012_20182?: true
        AOC_50013_20182?: true
        AOC_50014_20182?: true
        AOC_ALL_20203?: true
        AOC_50011_20203?: true
        AOC_50012_20203?: true
        AOC_50013_20203?: true
        AOC_50014_20203?: true
        AOC_ALL_24155?: true
        AOC_50011_24155?: true
        AOC_50012_24155?: true
        AOC_50013_24155?: true
        AOC_50014_24155?: true
        AOC_ALL_24198?: true
        AOC_50011_24198?: true
        AOC_50012_24198?: true
        AOC_50013_24198?: true
        AOC_50014_24198?: true
        AOC_ALL_135?: true
        AOC_50011_135?: true
        AOC_50012_135?: true
        AOC_50013_135?: true
        AOC_50014_135?: true
        AOC_ALL_24196?: true
        AOC_50011_24196?: true
        AOC_50012_24196?: true
        AOC_50013_24196?: true
        AOC_50014_24196?: true
        AOC_ALL_24197?: true
        AOC_50011_24197?: true
        AOC_50012_24197?: true
        AOC_50013_24197?: true
        AOC_50014_24197?: true
        AOC_ALL_21?: true
        AOC_50011_21?: true
        AOC_50012_21?: true
        AOC_50013_21?: true
        AOC_50014_21?: true
    }

    export type GA_ANKETA_OBOROT_COUNTSCountAggregateInputType = {
        AOC_ABA_ID?: true
        AOC_DATETIME?: true
        AOC_ALL_24189?: true
        AOC_50011_24189?: true
        AOC_50012_24189?: true
        AOC_50013_24189?: true
        AOC_50014_24189?: true
        AOC_ALL_10566?: true
        AOC_50011_10566?: true
        AOC_50012_10566?: true
        AOC_50013_10566?: true
        AOC_50014_10566?: true
        AOC_ALL_20079?: true
        AOC_50011_20079?: true
        AOC_50012_20079?: true
        AOC_50013_20079?: true
        AOC_50014_20079?: true
        AOC_ALL_7251?: true
        AOC_50011_7251?: true
        AOC_50012_7251?: true
        AOC_50013_7251?: true
        AOC_50014_7251?: true
        AOC_ALL_24191?: true
        AOC_50011_24191?: true
        AOC_50012_24191?: true
        AOC_50013_24191?: true
        AOC_50014_24191?: true
        AOC_ALL_193?: true
        AOC_50011_193?: true
        AOC_50012_193?: true
        AOC_50013_193?: true
        AOC_50014_193?: true
        AOC_ALL_7610?: true
        AOC_50011_7610?: true
        AOC_50012_7610?: true
        AOC_50013_7610?: true
        AOC_50014_7610?: true
        AOC_ALL_10180?: true
        AOC_50011_10180?: true
        AOC_50012_10180?: true
        AOC_50013_10180?: true
        AOC_50014_10180?: true
        AOC_ALL_177?: true
        AOC_50011_177?: true
        AOC_50012_177?: true
        AOC_50013_177?: true
        AOC_50014_177?: true
        AOC_ALL_10223?: true
        AOC_50011_10223?: true
        AOC_50012_10223?: true
        AOC_50013_10223?: true
        AOC_50014_10223?: true
        AOC_ALL_7230?: true
        AOC_50011_7230?: true
        AOC_50012_7230?: true
        AOC_50013_7230?: true
        AOC_50014_7230?: true
        AOC_ALL_1359?: true
        AOC_50011_1359?: true
        AOC_50012_1359?: true
        AOC_50013_1359?: true
        AOC_50014_1359?: true
        AOC_ALL_110?: true
        AOC_50011_110?: true
        AOC_50012_110?: true
        AOC_50013_110?: true
        AOC_50014_110?: true
        AOC_ALL_20182?: true
        AOC_50011_20182?: true
        AOC_50012_20182?: true
        AOC_50013_20182?: true
        AOC_50014_20182?: true
        AOC_ALL_20203?: true
        AOC_50011_20203?: true
        AOC_50012_20203?: true
        AOC_50013_20203?: true
        AOC_50014_20203?: true
        AOC_ALL_24155?: true
        AOC_50011_24155?: true
        AOC_50012_24155?: true
        AOC_50013_24155?: true
        AOC_50014_24155?: true
        AOC_ALL_24198?: true
        AOC_50011_24198?: true
        AOC_50012_24198?: true
        AOC_50013_24198?: true
        AOC_50014_24198?: true
        AOC_ALL_135?: true
        AOC_50011_135?: true
        AOC_50012_135?: true
        AOC_50013_135?: true
        AOC_50014_135?: true
        AOC_ALL_24196?: true
        AOC_50011_24196?: true
        AOC_50012_24196?: true
        AOC_50013_24196?: true
        AOC_50014_24196?: true
        AOC_ALL_24197?: true
        AOC_50011_24197?: true
        AOC_50012_24197?: true
        AOC_50013_24197?: true
        AOC_50014_24197?: true
        AOC_ALL_21?: true
        AOC_50011_21?: true
        AOC_50012_21?: true
        AOC_50013_21?: true
        AOC_50014_21?: true
        _all?: true
    }

    export type GA_ANKETA_OBOROT_COUNTSAggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_OBOROT_COUNTS to aggregate.
         */
        where?: GA_ANKETA_OBOROT_COUNTSWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROT_COUNTS to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROT_COUNTSOrderByWithRelationInput
            | GA_ANKETA_OBOROT_COUNTSOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_ANKETA_OBOROT_COUNTSWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROT_COUNTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROT_COUNTS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_ANKETA_OBOROT_COUNTS
         **/
        _count?: true | GA_ANKETA_OBOROT_COUNTSCountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_ANKETA_OBOROT_COUNTSAvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_ANKETA_OBOROT_COUNTSSumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_ANKETA_OBOROT_COUNTSMinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_ANKETA_OBOROT_COUNTSMaxAggregateInputType
    }

    export type GetGA_ANKETA_OBOROT_COUNTSAggregateType<
        T extends GA_ANKETA_OBOROT_COUNTSAggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_ANKETA_OBOROT_COUNTS]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_ANKETA_OBOROT_COUNTS[P]>
            : GetScalarType<T[P], AggregateGA_ANKETA_OBOROT_COUNTS[P]>
    }

    export type GA_ANKETA_OBOROT_COUNTSGroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_ANKETA_OBOROT_COUNTSWhereInput
        orderBy?:
            | GA_ANKETA_OBOROT_COUNTSOrderByWithAggregationInput
            | GA_ANKETA_OBOROT_COUNTSOrderByWithAggregationInput[]
        by:
            | GA_ANKETA_OBOROT_COUNTSScalarFieldEnum[]
            | GA_ANKETA_OBOROT_COUNTSScalarFieldEnum
        having?: GA_ANKETA_OBOROT_COUNTSScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_ANKETA_OBOROT_COUNTSCountAggregateInputType | true
        _avg?: GA_ANKETA_OBOROT_COUNTSAvgAggregateInputType
        _sum?: GA_ANKETA_OBOROT_COUNTSSumAggregateInputType
        _min?: GA_ANKETA_OBOROT_COUNTSMinAggregateInputType
        _max?: GA_ANKETA_OBOROT_COUNTSMaxAggregateInputType
    }

    export type GA_ANKETA_OBOROT_COUNTSGroupByOutputType = {
        AOC_ABA_ID: bigint
        AOC_DATETIME: Date
        AOC_ALL_24189: number
        AOC_50011_24189: number
        AOC_50012_24189: number
        AOC_50013_24189: number
        AOC_50014_24189: number
        AOC_ALL_10566: number
        AOC_50011_10566: number
        AOC_50012_10566: number
        AOC_50013_10566: number
        AOC_50014_10566: number
        AOC_ALL_20079: number
        AOC_50011_20079: number
        AOC_50012_20079: number
        AOC_50013_20079: number
        AOC_50014_20079: number
        AOC_ALL_7251: number
        AOC_50011_7251: number
        AOC_50012_7251: number
        AOC_50013_7251: number
        AOC_50014_7251: number
        AOC_ALL_24191: number
        AOC_50011_24191: number
        AOC_50012_24191: number
        AOC_50013_24191: number
        AOC_50014_24191: number
        AOC_ALL_193: number
        AOC_50011_193: number
        AOC_50012_193: number
        AOC_50013_193: number
        AOC_50014_193: number
        AOC_ALL_7610: number
        AOC_50011_7610: number
        AOC_50012_7610: number
        AOC_50013_7610: number
        AOC_50014_7610: number
        AOC_ALL_10180: number
        AOC_50011_10180: number
        AOC_50012_10180: number
        AOC_50013_10180: number
        AOC_50014_10180: number
        AOC_ALL_177: number
        AOC_50011_177: number
        AOC_50012_177: number
        AOC_50013_177: number
        AOC_50014_177: number
        AOC_ALL_10223: number
        AOC_50011_10223: number
        AOC_50012_10223: number
        AOC_50013_10223: number
        AOC_50014_10223: number
        AOC_ALL_7230: number
        AOC_50011_7230: number
        AOC_50012_7230: number
        AOC_50013_7230: number
        AOC_50014_7230: number
        AOC_ALL_1359: number
        AOC_50011_1359: number
        AOC_50012_1359: number
        AOC_50013_1359: number
        AOC_50014_1359: number
        AOC_ALL_110: number
        AOC_50011_110: number
        AOC_50012_110: number
        AOC_50013_110: number
        AOC_50014_110: number
        AOC_ALL_20182: number
        AOC_50011_20182: number
        AOC_50012_20182: number
        AOC_50013_20182: number
        AOC_50014_20182: number
        AOC_ALL_20203: number
        AOC_50011_20203: number
        AOC_50012_20203: number
        AOC_50013_20203: number
        AOC_50014_20203: number
        AOC_ALL_24155: number
        AOC_50011_24155: number
        AOC_50012_24155: number
        AOC_50013_24155: number
        AOC_50014_24155: number
        AOC_ALL_24198: number
        AOC_50011_24198: number
        AOC_50012_24198: number
        AOC_50013_24198: number
        AOC_50014_24198: number
        AOC_ALL_135: number
        AOC_50011_135: number
        AOC_50012_135: number
        AOC_50013_135: number
        AOC_50014_135: number
        AOC_ALL_24196: number
        AOC_50011_24196: number
        AOC_50012_24196: number
        AOC_50013_24196: number
        AOC_50014_24196: number
        AOC_ALL_24197: number
        AOC_50011_24197: number
        AOC_50012_24197: number
        AOC_50013_24197: number
        AOC_50014_24197: number
        AOC_ALL_21: number
        AOC_50011_21: number
        AOC_50012_21: number
        AOC_50013_21: number
        AOC_50014_21: number
        _count: GA_ANKETA_OBOROT_COUNTSCountAggregateOutputType | null
        _avg: GA_ANKETA_OBOROT_COUNTSAvgAggregateOutputType | null
        _sum: GA_ANKETA_OBOROT_COUNTSSumAggregateOutputType | null
        _min: GA_ANKETA_OBOROT_COUNTSMinAggregateOutputType | null
        _max: GA_ANKETA_OBOROT_COUNTSMaxAggregateOutputType | null
    }

    type GetGA_ANKETA_OBOROT_COUNTSGroupByPayload<
        T extends GA_ANKETA_OBOROT_COUNTSGroupByArgs,
    > = Prisma.PrismaPromise<
        Array<
            PickEnumerable<
                GA_ANKETA_OBOROT_COUNTSGroupByOutputType,
                T['by']
            > & {
                [P in keyof T &
                    keyof GA_ANKETA_OBOROT_COUNTSGroupByOutputType]: P extends '_count'
                    ? T[P] extends boolean
                        ? number
                        : GetScalarType<
                              T[P],
                              GA_ANKETA_OBOROT_COUNTSGroupByOutputType[P]
                          >
                    : GetScalarType<
                          T[P],
                          GA_ANKETA_OBOROT_COUNTSGroupByOutputType[P]
                      >
            }
        >
    >

    export type GA_ANKETA_OBOROT_COUNTSSelect<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            AOC_ABA_ID?: boolean
            AOC_DATETIME?: boolean
            AOC_ALL_24189?: boolean
            AOC_50011_24189?: boolean
            AOC_50012_24189?: boolean
            AOC_50013_24189?: boolean
            AOC_50014_24189?: boolean
            AOC_ALL_10566?: boolean
            AOC_50011_10566?: boolean
            AOC_50012_10566?: boolean
            AOC_50013_10566?: boolean
            AOC_50014_10566?: boolean
            AOC_ALL_20079?: boolean
            AOC_50011_20079?: boolean
            AOC_50012_20079?: boolean
            AOC_50013_20079?: boolean
            AOC_50014_20079?: boolean
            AOC_ALL_7251?: boolean
            AOC_50011_7251?: boolean
            AOC_50012_7251?: boolean
            AOC_50013_7251?: boolean
            AOC_50014_7251?: boolean
            AOC_ALL_24191?: boolean
            AOC_50011_24191?: boolean
            AOC_50012_24191?: boolean
            AOC_50013_24191?: boolean
            AOC_50014_24191?: boolean
            AOC_ALL_193?: boolean
            AOC_50011_193?: boolean
            AOC_50012_193?: boolean
            AOC_50013_193?: boolean
            AOC_50014_193?: boolean
            AOC_ALL_7610?: boolean
            AOC_50011_7610?: boolean
            AOC_50012_7610?: boolean
            AOC_50013_7610?: boolean
            AOC_50014_7610?: boolean
            AOC_ALL_10180?: boolean
            AOC_50011_10180?: boolean
            AOC_50012_10180?: boolean
            AOC_50013_10180?: boolean
            AOC_50014_10180?: boolean
            AOC_ALL_177?: boolean
            AOC_50011_177?: boolean
            AOC_50012_177?: boolean
            AOC_50013_177?: boolean
            AOC_50014_177?: boolean
            AOC_ALL_10223?: boolean
            AOC_50011_10223?: boolean
            AOC_50012_10223?: boolean
            AOC_50013_10223?: boolean
            AOC_50014_10223?: boolean
            AOC_ALL_7230?: boolean
            AOC_50011_7230?: boolean
            AOC_50012_7230?: boolean
            AOC_50013_7230?: boolean
            AOC_50014_7230?: boolean
            AOC_ALL_1359?: boolean
            AOC_50011_1359?: boolean
            AOC_50012_1359?: boolean
            AOC_50013_1359?: boolean
            AOC_50014_1359?: boolean
            AOC_ALL_110?: boolean
            AOC_50011_110?: boolean
            AOC_50012_110?: boolean
            AOC_50013_110?: boolean
            AOC_50014_110?: boolean
            AOC_ALL_20182?: boolean
            AOC_50011_20182?: boolean
            AOC_50012_20182?: boolean
            AOC_50013_20182?: boolean
            AOC_50014_20182?: boolean
            AOC_ALL_20203?: boolean
            AOC_50011_20203?: boolean
            AOC_50012_20203?: boolean
            AOC_50013_20203?: boolean
            AOC_50014_20203?: boolean
            AOC_ALL_24155?: boolean
            AOC_50011_24155?: boolean
            AOC_50012_24155?: boolean
            AOC_50013_24155?: boolean
            AOC_50014_24155?: boolean
            AOC_ALL_24198?: boolean
            AOC_50011_24198?: boolean
            AOC_50012_24198?: boolean
            AOC_50013_24198?: boolean
            AOC_50014_24198?: boolean
            AOC_ALL_135?: boolean
            AOC_50011_135?: boolean
            AOC_50012_135?: boolean
            AOC_50013_135?: boolean
            AOC_50014_135?: boolean
            AOC_ALL_24196?: boolean
            AOC_50011_24196?: boolean
            AOC_50012_24196?: boolean
            AOC_50013_24196?: boolean
            AOC_50014_24196?: boolean
            AOC_ALL_24197?: boolean
            AOC_50011_24197?: boolean
            AOC_50012_24197?: boolean
            AOC_50013_24197?: boolean
            AOC_50014_24197?: boolean
            AOC_ALL_21?: boolean
            AOC_50011_21?: boolean
            AOC_50012_21?: boolean
            AOC_50013_21?: boolean
            AOC_50014_21?: boolean
        },
        ExtArgs['result']['gA_ANKETA_OBOROT_COUNTS']
    >

    export type GA_ANKETA_OBOROT_COUNTSSelectScalar = {
        AOC_ABA_ID?: boolean
        AOC_DATETIME?: boolean
        AOC_ALL_24189?: boolean
        AOC_50011_24189?: boolean
        AOC_50012_24189?: boolean
        AOC_50013_24189?: boolean
        AOC_50014_24189?: boolean
        AOC_ALL_10566?: boolean
        AOC_50011_10566?: boolean
        AOC_50012_10566?: boolean
        AOC_50013_10566?: boolean
        AOC_50014_10566?: boolean
        AOC_ALL_20079?: boolean
        AOC_50011_20079?: boolean
        AOC_50012_20079?: boolean
        AOC_50013_20079?: boolean
        AOC_50014_20079?: boolean
        AOC_ALL_7251?: boolean
        AOC_50011_7251?: boolean
        AOC_50012_7251?: boolean
        AOC_50013_7251?: boolean
        AOC_50014_7251?: boolean
        AOC_ALL_24191?: boolean
        AOC_50011_24191?: boolean
        AOC_50012_24191?: boolean
        AOC_50013_24191?: boolean
        AOC_50014_24191?: boolean
        AOC_ALL_193?: boolean
        AOC_50011_193?: boolean
        AOC_50012_193?: boolean
        AOC_50013_193?: boolean
        AOC_50014_193?: boolean
        AOC_ALL_7610?: boolean
        AOC_50011_7610?: boolean
        AOC_50012_7610?: boolean
        AOC_50013_7610?: boolean
        AOC_50014_7610?: boolean
        AOC_ALL_10180?: boolean
        AOC_50011_10180?: boolean
        AOC_50012_10180?: boolean
        AOC_50013_10180?: boolean
        AOC_50014_10180?: boolean
        AOC_ALL_177?: boolean
        AOC_50011_177?: boolean
        AOC_50012_177?: boolean
        AOC_50013_177?: boolean
        AOC_50014_177?: boolean
        AOC_ALL_10223?: boolean
        AOC_50011_10223?: boolean
        AOC_50012_10223?: boolean
        AOC_50013_10223?: boolean
        AOC_50014_10223?: boolean
        AOC_ALL_7230?: boolean
        AOC_50011_7230?: boolean
        AOC_50012_7230?: boolean
        AOC_50013_7230?: boolean
        AOC_50014_7230?: boolean
        AOC_ALL_1359?: boolean
        AOC_50011_1359?: boolean
        AOC_50012_1359?: boolean
        AOC_50013_1359?: boolean
        AOC_50014_1359?: boolean
        AOC_ALL_110?: boolean
        AOC_50011_110?: boolean
        AOC_50012_110?: boolean
        AOC_50013_110?: boolean
        AOC_50014_110?: boolean
        AOC_ALL_20182?: boolean
        AOC_50011_20182?: boolean
        AOC_50012_20182?: boolean
        AOC_50013_20182?: boolean
        AOC_50014_20182?: boolean
        AOC_ALL_20203?: boolean
        AOC_50011_20203?: boolean
        AOC_50012_20203?: boolean
        AOC_50013_20203?: boolean
        AOC_50014_20203?: boolean
        AOC_ALL_24155?: boolean
        AOC_50011_24155?: boolean
        AOC_50012_24155?: boolean
        AOC_50013_24155?: boolean
        AOC_50014_24155?: boolean
        AOC_ALL_24198?: boolean
        AOC_50011_24198?: boolean
        AOC_50012_24198?: boolean
        AOC_50013_24198?: boolean
        AOC_50014_24198?: boolean
        AOC_ALL_135?: boolean
        AOC_50011_135?: boolean
        AOC_50012_135?: boolean
        AOC_50013_135?: boolean
        AOC_50014_135?: boolean
        AOC_ALL_24196?: boolean
        AOC_50011_24196?: boolean
        AOC_50012_24196?: boolean
        AOC_50013_24196?: boolean
        AOC_50014_24196?: boolean
        AOC_ALL_24197?: boolean
        AOC_50011_24197?: boolean
        AOC_50012_24197?: boolean
        AOC_50013_24197?: boolean
        AOC_50014_24197?: boolean
        AOC_ALL_21?: boolean
        AOC_50011_21?: boolean
        AOC_50012_21?: boolean
        AOC_50013_21?: boolean
        AOC_50014_21?: boolean
    }

    export type $GA_ANKETA_OBOROT_COUNTSPayload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_ANKETA_OBOROT_COUNTS'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                AOC_ABA_ID: bigint
                AOC_DATETIME: Date
                AOC_ALL_24189: number
                AOC_50011_24189: number
                AOC_50012_24189: number
                AOC_50013_24189: number
                AOC_50014_24189: number
                AOC_ALL_10566: number
                AOC_50011_10566: number
                AOC_50012_10566: number
                AOC_50013_10566: number
                AOC_50014_10566: number
                AOC_ALL_20079: number
                AOC_50011_20079: number
                AOC_50012_20079: number
                AOC_50013_20079: number
                AOC_50014_20079: number
                AOC_ALL_7251: number
                AOC_50011_7251: number
                AOC_50012_7251: number
                AOC_50013_7251: number
                AOC_50014_7251: number
                AOC_ALL_24191: number
                AOC_50011_24191: number
                AOC_50012_24191: number
                AOC_50013_24191: number
                AOC_50014_24191: number
                AOC_ALL_193: number
                AOC_50011_193: number
                AOC_50012_193: number
                AOC_50013_193: number
                AOC_50014_193: number
                AOC_ALL_7610: number
                AOC_50011_7610: number
                AOC_50012_7610: number
                AOC_50013_7610: number
                AOC_50014_7610: number
                AOC_ALL_10180: number
                AOC_50011_10180: number
                AOC_50012_10180: number
                AOC_50013_10180: number
                AOC_50014_10180: number
                AOC_ALL_177: number
                AOC_50011_177: number
                AOC_50012_177: number
                AOC_50013_177: number
                AOC_50014_177: number
                AOC_ALL_10223: number
                AOC_50011_10223: number
                AOC_50012_10223: number
                AOC_50013_10223: number
                AOC_50014_10223: number
                AOC_ALL_7230: number
                AOC_50011_7230: number
                AOC_50012_7230: number
                AOC_50013_7230: number
                AOC_50014_7230: number
                AOC_ALL_1359: number
                AOC_50011_1359: number
                AOC_50012_1359: number
                AOC_50013_1359: number
                AOC_50014_1359: number
                AOC_ALL_110: number
                AOC_50011_110: number
                AOC_50012_110: number
                AOC_50013_110: number
                AOC_50014_110: number
                AOC_ALL_20182: number
                AOC_50011_20182: number
                AOC_50012_20182: number
                AOC_50013_20182: number
                AOC_50014_20182: number
                AOC_ALL_20203: number
                AOC_50011_20203: number
                AOC_50012_20203: number
                AOC_50013_20203: number
                AOC_50014_20203: number
                AOC_ALL_24155: number
                AOC_50011_24155: number
                AOC_50012_24155: number
                AOC_50013_24155: number
                AOC_50014_24155: number
                AOC_ALL_24198: number
                AOC_50011_24198: number
                AOC_50012_24198: number
                AOC_50013_24198: number
                AOC_50014_24198: number
                AOC_ALL_135: number
                AOC_50011_135: number
                AOC_50012_135: number
                AOC_50013_135: number
                AOC_50014_135: number
                AOC_ALL_24196: number
                AOC_50011_24196: number
                AOC_50012_24196: number
                AOC_50013_24196: number
                AOC_50014_24196: number
                AOC_ALL_24197: number
                AOC_50011_24197: number
                AOC_50012_24197: number
                AOC_50013_24197: number
                AOC_50014_24197: number
                AOC_ALL_21: number
                AOC_50011_21: number
                AOC_50012_21: number
                AOC_50013_21: number
                AOC_50014_21: number
            },
            ExtArgs['result']['gA_ANKETA_OBOROT_COUNTS']
        >
        composites: {}
    }

    type GA_ANKETA_OBOROT_COUNTSGetPayload<
        S extends
            | boolean
            | null
            | undefined
            | GA_ANKETA_OBOROT_COUNTSDefaultArgs,
    > = $Result.GetResult<Prisma.$GA_ANKETA_OBOROT_COUNTSPayload, S>

    type GA_ANKETA_OBOROT_COUNTSCountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<
        GA_ANKETA_OBOROT_COUNTSFindManyArgs,
        'select' | 'include' | 'distinct'
    > & {
        select?: GA_ANKETA_OBOROT_COUNTSCountAggregateInputType | true
    }

    export interface GA_ANKETA_OBOROT_COUNTSDelegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_ANKETA_OBOROT_COUNTS']
            meta: { name: 'GA_ANKETA_OBOROT_COUNTS' }
        }
        /**
         * Find zero or one GA_ANKETA_OBOROT_COUNTS that matches the filter.
         * @param {GA_ANKETA_OBOROT_COUNTSFindUniqueArgs} args - Arguments to find a GA_ANKETA_OBOROT_COUNTS
         * @example
         * // Get one GA_ANKETA_OBOROT_COUNTS
         * const gA_ANKETA_OBOROT_COUNTS = await prisma.gA_ANKETA_OBOROT_COUNTS.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_ANKETA_OBOROT_COUNTSFindUniqueArgs<ExtArgs>>(
            args: SelectSubset<
                T,
                GA_ANKETA_OBOROT_COUNTSFindUniqueArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_OBOROT_COUNTSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_COUNTSPayload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_ANKETA_OBOROT_COUNTS that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_ANKETA_OBOROT_COUNTSFindUniqueOrThrowArgs} args - Arguments to find a GA_ANKETA_OBOROT_COUNTS
         * @example
         * // Get one GA_ANKETA_OBOROT_COUNTS
         * const gA_ANKETA_OBOROT_COUNTS = await prisma.gA_ANKETA_OBOROT_COUNTS.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_ANKETA_OBOROT_COUNTSFindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_COUNTSFindUniqueOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_OBOROT_COUNTSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_COUNTSPayload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_OBOROT_COUNTS that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_COUNTSFindFirstArgs} args - Arguments to find a GA_ANKETA_OBOROT_COUNTS
         * @example
         * // Get one GA_ANKETA_OBOROT_COUNTS
         * const gA_ANKETA_OBOROT_COUNTS = await prisma.gA_ANKETA_OBOROT_COUNTS.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_ANKETA_OBOROT_COUNTSFindFirstArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_COUNTSFindFirstArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_OBOROT_COUNTSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_COUNTSPayload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_OBOROT_COUNTS that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_COUNTSFindFirstOrThrowArgs} args - Arguments to find a GA_ANKETA_OBOROT_COUNTS
         * @example
         * // Get one GA_ANKETA_OBOROT_COUNTS
         * const gA_ANKETA_OBOROT_COUNTS = await prisma.gA_ANKETA_OBOROT_COUNTS.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<
            T extends GA_ANKETA_OBOROT_COUNTSFindFirstOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_COUNTSFindFirstOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_OBOROT_COUNTSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_COUNTSPayload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_ANKETA_OBOROT_COUNTS that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_COUNTSFindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_ANKETA_OBOROT_COUNTS
         * const gA_ANKETA_OBOROT_COUNTS = await prisma.gA_ANKETA_OBOROT_COUNTS.findMany()
         *
         * // Get first 10 GA_ANKETA_OBOROT_COUNTS
         * const gA_ANKETA_OBOROT_COUNTS = await prisma.gA_ANKETA_OBOROT_COUNTS.findMany({ take: 10 })
         *
         * // Only select the `AOC_ABA_ID`
         * const gA_ANKETA_OBOROT_COUNTSWithAOC_ABA_IDOnly = await prisma.gA_ANKETA_OBOROT_COUNTS.findMany({ select: { AOC_ABA_ID: true } })
         *
         **/
        findMany<T extends GA_ANKETA_OBOROT_COUNTSFindManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_OBOROT_COUNTSFindManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_COUNTSPayload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_ANKETA_OBOROT_COUNTS.
         * @param {GA_ANKETA_OBOROT_COUNTSCreateArgs} args - Arguments to create a GA_ANKETA_OBOROT_COUNTS.
         * @example
         * // Create one GA_ANKETA_OBOROT_COUNTS
         * const GA_ANKETA_OBOROT_COUNTS = await prisma.gA_ANKETA_OBOROT_COUNTS.create({
         *   data: {
         *     // ... data to create a GA_ANKETA_OBOROT_COUNTS
         *   }
         * })
         *
         **/
        create<T extends GA_ANKETA_OBOROT_COUNTSCreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROT_COUNTSCreateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROT_COUNTSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_COUNTSPayload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_ANKETA_OBOROT_COUNTS.
         *     @param {GA_ANKETA_OBOROT_COUNTSCreateManyArgs} args - Arguments to create many GA_ANKETA_OBOROT_COUNTS.
         *     @example
         *     // Create many GA_ANKETA_OBOROT_COUNTS
         *     const gA_ANKETA_OBOROT_COUNTS = await prisma.gA_ANKETA_OBOROT_COUNTS.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_ANKETA_OBOROT_COUNTSCreateManyArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_COUNTSCreateManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_ANKETA_OBOROT_COUNTS.
         * @param {GA_ANKETA_OBOROT_COUNTSDeleteArgs} args - Arguments to delete one GA_ANKETA_OBOROT_COUNTS.
         * @example
         * // Delete one GA_ANKETA_OBOROT_COUNTS
         * const GA_ANKETA_OBOROT_COUNTS = await prisma.gA_ANKETA_OBOROT_COUNTS.delete({
         *   where: {
         *     // ... filter to delete one GA_ANKETA_OBOROT_COUNTS
         *   }
         * })
         *
         **/
        delete<T extends GA_ANKETA_OBOROT_COUNTSDeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROT_COUNTSDeleteArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROT_COUNTSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_COUNTSPayload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_ANKETA_OBOROT_COUNTS.
         * @param {GA_ANKETA_OBOROT_COUNTSUpdateArgs} args - Arguments to update one GA_ANKETA_OBOROT_COUNTS.
         * @example
         * // Update one GA_ANKETA_OBOROT_COUNTS
         * const gA_ANKETA_OBOROT_COUNTS = await prisma.gA_ANKETA_OBOROT_COUNTS.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_ANKETA_OBOROT_COUNTSUpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROT_COUNTSUpdateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROT_COUNTSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_COUNTSPayload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_ANKETA_OBOROT_COUNTS.
         * @param {GA_ANKETA_OBOROT_COUNTSDeleteManyArgs} args - Arguments to filter GA_ANKETA_OBOROT_COUNTS to delete.
         * @example
         * // Delete a few GA_ANKETA_OBOROT_COUNTS
         * const { count } = await prisma.gA_ANKETA_OBOROT_COUNTS.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_ANKETA_OBOROT_COUNTSDeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_OBOROT_COUNTSDeleteManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_ANKETA_OBOROT_COUNTS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_COUNTSUpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_ANKETA_OBOROT_COUNTS
         * const gA_ANKETA_OBOROT_COUNTS = await prisma.gA_ANKETA_OBOROT_COUNTS.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_ANKETA_OBOROT_COUNTSUpdateManyArgs<ExtArgs>>(
            args: SelectSubset<
                T,
                GA_ANKETA_OBOROT_COUNTSUpdateManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_ANKETA_OBOROT_COUNTS.
         * @param {GA_ANKETA_OBOROT_COUNTSUpsertArgs} args - Arguments to update or create a GA_ANKETA_OBOROT_COUNTS.
         * @example
         * // Update or create a GA_ANKETA_OBOROT_COUNTS
         * const gA_ANKETA_OBOROT_COUNTS = await prisma.gA_ANKETA_OBOROT_COUNTS.upsert({
         *   create: {
         *     // ... data to create a GA_ANKETA_OBOROT_COUNTS
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_ANKETA_OBOROT_COUNTS we want to update
         *   }
         * })
         **/
        upsert<T extends GA_ANKETA_OBOROT_COUNTSUpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_OBOROT_COUNTSUpsertArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_OBOROT_COUNTSClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_OBOROT_COUNTSPayload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_ANKETA_OBOROT_COUNTS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_COUNTSCountArgs} args - Arguments to filter GA_ANKETA_OBOROT_COUNTS to count.
         * @example
         * // Count the number of GA_ANKETA_OBOROT_COUNTS
         * const count = await prisma.gA_ANKETA_OBOROT_COUNTS.count({
         *   where: {
         *     // ... the filter for the GA_ANKETA_OBOROT_COUNTS we want to count
         *   }
         * })
         **/
        count<T extends GA_ANKETA_OBOROT_COUNTSCountArgs>(
            args?: Subset<T, GA_ANKETA_OBOROT_COUNTSCountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_ANKETA_OBOROT_COUNTSCountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_ANKETA_OBOROT_COUNTS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_COUNTSAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_ANKETA_OBOROT_COUNTSAggregateArgs>(
            args: Subset<T, GA_ANKETA_OBOROT_COUNTSAggregateArgs>
        ): Prisma.PrismaPromise<GetGA_ANKETA_OBOROT_COUNTSAggregateType<T>>

        /**
         * Group by GA_ANKETA_OBOROT_COUNTS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_OBOROT_COUNTSGroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_ANKETA_OBOROT_COUNTSGroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_ANKETA_OBOROT_COUNTSGroupByArgs['orderBy'] }
                : { orderBy?: GA_ANKETA_OBOROT_COUNTSGroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<
                T,
                GA_ANKETA_OBOROT_COUNTSGroupByArgs,
                OrderByArg
            > &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_ANKETA_OBOROT_COUNTSGroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_ANKETA_OBOROT_COUNTS model
         */
        readonly fields: GA_ANKETA_OBOROT_COUNTSFieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_ANKETA_OBOROT_COUNTS.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_ANKETA_OBOROT_COUNTSClient<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_ANKETA_OBOROT_COUNTS model
     */
    interface GA_ANKETA_OBOROT_COUNTSFieldRefs {
        readonly AOC_ABA_ID: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'BigInt'>
        readonly AOC_DATETIME: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'DateTime'>
        readonly AOC_ALL_24189: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_24189: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_24189: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_24189: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_24189: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_10566: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_10566: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_10566: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_10566: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_10566: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_20079: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_20079: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_20079: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_20079: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_20079: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_7251: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_7251: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_7251: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_7251: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_7251: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_24191: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_24191: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_24191: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_24191: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_24191: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_193: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_193: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_193: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_193: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_193: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_7610: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_7610: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_7610: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_7610: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_7610: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_10180: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_10180: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_10180: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_10180: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_10180: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_177: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_177: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_177: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_177: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_177: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_10223: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_10223: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_10223: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_10223: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_10223: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_7230: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_7230: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_7230: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_7230: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_7230: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_1359: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_1359: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_1359: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_1359: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_1359: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_110: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_110: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_110: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_110: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_110: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_20182: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_20182: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_20182: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_20182: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_20182: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_20203: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_20203: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_20203: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_20203: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_20203: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_24155: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_24155: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_24155: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_24155: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_24155: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_24198: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_24198: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_24198: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_24198: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_24198: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_135: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_135: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_135: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_135: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_135: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_24196: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_24196: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_24196: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_24196: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_24196: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_24197: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_24197: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_24197: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_24197: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_24197: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_ALL_21: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50011_21: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50012_21: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50013_21: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
        readonly AOC_50014_21: FieldRef<'GA_ANKETA_OBOROT_COUNTS', 'Int'>
    }

    // Custom InputTypes

    /**
     * GA_ANKETA_OBOROT_COUNTS findUnique
     */
    export type GA_ANKETA_OBOROT_COUNTSFindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_COUNTS
         */
        select?: GA_ANKETA_OBOROT_COUNTSSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT_COUNTS to fetch.
         */
        where: GA_ANKETA_OBOROT_COUNTSWhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT_COUNTS findUniqueOrThrow
     */
    export type GA_ANKETA_OBOROT_COUNTSFindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_COUNTS
         */
        select?: GA_ANKETA_OBOROT_COUNTSSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT_COUNTS to fetch.
         */
        where: GA_ANKETA_OBOROT_COUNTSWhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT_COUNTS findFirst
     */
    export type GA_ANKETA_OBOROT_COUNTSFindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_COUNTS
         */
        select?: GA_ANKETA_OBOROT_COUNTSSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT_COUNTS to fetch.
         */
        where?: GA_ANKETA_OBOROT_COUNTSWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROT_COUNTS to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROT_COUNTSOrderByWithRelationInput
            | GA_ANKETA_OBOROT_COUNTSOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_OBOROT_COUNTS.
         */
        cursor?: GA_ANKETA_OBOROT_COUNTSWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROT_COUNTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROT_COUNTS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_OBOROT_COUNTS.
         */
        distinct?:
            | GA_ANKETA_OBOROT_COUNTSScalarFieldEnum
            | GA_ANKETA_OBOROT_COUNTSScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_OBOROT_COUNTS findFirstOrThrow
     */
    export type GA_ANKETA_OBOROT_COUNTSFindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_COUNTS
         */
        select?: GA_ANKETA_OBOROT_COUNTSSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT_COUNTS to fetch.
         */
        where?: GA_ANKETA_OBOROT_COUNTSWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROT_COUNTS to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROT_COUNTSOrderByWithRelationInput
            | GA_ANKETA_OBOROT_COUNTSOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_OBOROT_COUNTS.
         */
        cursor?: GA_ANKETA_OBOROT_COUNTSWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROT_COUNTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROT_COUNTS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_OBOROT_COUNTS.
         */
        distinct?:
            | GA_ANKETA_OBOROT_COUNTSScalarFieldEnum
            | GA_ANKETA_OBOROT_COUNTSScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_OBOROT_COUNTS findMany
     */
    export type GA_ANKETA_OBOROT_COUNTSFindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_COUNTS
         */
        select?: GA_ANKETA_OBOROT_COUNTSSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_OBOROT_COUNTS to fetch.
         */
        where?: GA_ANKETA_OBOROT_COUNTSWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_OBOROT_COUNTS to fetch.
         */
        orderBy?:
            | GA_ANKETA_OBOROT_COUNTSOrderByWithRelationInput
            | GA_ANKETA_OBOROT_COUNTSOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_ANKETA_OBOROT_COUNTS.
         */
        cursor?: GA_ANKETA_OBOROT_COUNTSWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_OBOROT_COUNTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_OBOROT_COUNTS.
         */
        skip?: number
        distinct?:
            | GA_ANKETA_OBOROT_COUNTSScalarFieldEnum
            | GA_ANKETA_OBOROT_COUNTSScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_OBOROT_COUNTS create
     */
    export type GA_ANKETA_OBOROT_COUNTSCreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_COUNTS
         */
        select?: GA_ANKETA_OBOROT_COUNTSSelect<ExtArgs> | null
        /**
         * The data needed to create a GA_ANKETA_OBOROT_COUNTS.
         */
        data: XOR<
            GA_ANKETA_OBOROT_COUNTSCreateInput,
            GA_ANKETA_OBOROT_COUNTSUncheckedCreateInput
        >
    }

    /**
     * GA_ANKETA_OBOROT_COUNTS createMany
     */
    export type GA_ANKETA_OBOROT_COUNTSCreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_ANKETA_OBOROT_COUNTS.
         */
        data:
            | GA_ANKETA_OBOROT_COUNTSCreateManyInput
            | GA_ANKETA_OBOROT_COUNTSCreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_ANKETA_OBOROT_COUNTS update
     */
    export type GA_ANKETA_OBOROT_COUNTSUpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_COUNTS
         */
        select?: GA_ANKETA_OBOROT_COUNTSSelect<ExtArgs> | null
        /**
         * The data needed to update a GA_ANKETA_OBOROT_COUNTS.
         */
        data: XOR<
            GA_ANKETA_OBOROT_COUNTSUpdateInput,
            GA_ANKETA_OBOROT_COUNTSUncheckedUpdateInput
        >
        /**
         * Choose, which GA_ANKETA_OBOROT_COUNTS to update.
         */
        where: GA_ANKETA_OBOROT_COUNTSWhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT_COUNTS updateMany
     */
    export type GA_ANKETA_OBOROT_COUNTSUpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_ANKETA_OBOROT_COUNTS.
         */
        data: XOR<
            GA_ANKETA_OBOROT_COUNTSUpdateManyMutationInput,
            GA_ANKETA_OBOROT_COUNTSUncheckedUpdateManyInput
        >
        /**
         * Filter which GA_ANKETA_OBOROT_COUNTS to update
         */
        where?: GA_ANKETA_OBOROT_COUNTSWhereInput
    }

    /**
     * GA_ANKETA_OBOROT_COUNTS upsert
     */
    export type GA_ANKETA_OBOROT_COUNTSUpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_COUNTS
         */
        select?: GA_ANKETA_OBOROT_COUNTSSelect<ExtArgs> | null
        /**
         * The filter to search for the GA_ANKETA_OBOROT_COUNTS to update in case it exists.
         */
        where: GA_ANKETA_OBOROT_COUNTSWhereUniqueInput
        /**
         * In case the GA_ANKETA_OBOROT_COUNTS found by the `where` argument doesn't exist, create a new GA_ANKETA_OBOROT_COUNTS with this data.
         */
        create: XOR<
            GA_ANKETA_OBOROT_COUNTSCreateInput,
            GA_ANKETA_OBOROT_COUNTSUncheckedCreateInput
        >
        /**
         * In case the GA_ANKETA_OBOROT_COUNTS was found with the provided `where` argument, update it with this data.
         */
        update: XOR<
            GA_ANKETA_OBOROT_COUNTSUpdateInput,
            GA_ANKETA_OBOROT_COUNTSUncheckedUpdateInput
        >
    }

    /**
     * GA_ANKETA_OBOROT_COUNTS delete
     */
    export type GA_ANKETA_OBOROT_COUNTSDeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_COUNTS
         */
        select?: GA_ANKETA_OBOROT_COUNTSSelect<ExtArgs> | null
        /**
         * Filter which GA_ANKETA_OBOROT_COUNTS to delete.
         */
        where: GA_ANKETA_OBOROT_COUNTSWhereUniqueInput
    }

    /**
     * GA_ANKETA_OBOROT_COUNTS deleteMany
     */
    export type GA_ANKETA_OBOROT_COUNTSDeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_OBOROT_COUNTS to delete
         */
        where?: GA_ANKETA_OBOROT_COUNTSWhereInput
    }

    /**
     * GA_ANKETA_OBOROT_COUNTS without action
     */
    export type GA_ANKETA_OBOROT_COUNTSDefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_OBOROT_COUNTS
         */
        select?: GA_ANKETA_OBOROT_COUNTSSelect<ExtArgs> | null
    }

    /**
     * Model GA_ANKETA_SCORES
     */

    export type AggregateGA_ANKETA_SCORES = {
        _count: GA_ANKETA_SCORESCountAggregateOutputType | null
        _avg: GA_ANKETA_SCORESAvgAggregateOutputType | null
        _sum: GA_ANKETA_SCORESSumAggregateOutputType | null
        _min: GA_ANKETA_SCORESMinAggregateOutputType | null
        _max: GA_ANKETA_SCORESMaxAggregateOutputType | null
    }

    export type GA_ANKETA_SCORESAvgAggregateOutputType = {
        ANS_WSU_ID: number | null
        ANS_SCORES: number | null
    }

    export type GA_ANKETA_SCORESSumAggregateOutputType = {
        ANS_WSU_ID: bigint | null
        ANS_SCORES: number | null
    }

    export type GA_ANKETA_SCORESMinAggregateOutputType = {
        ANS_WSU_ID: bigint | null
        ANS_SCORES: number | null
        ANS_DATETIME: Date | null
        ANS_ISSHOW: boolean | null
    }

    export type GA_ANKETA_SCORESMaxAggregateOutputType = {
        ANS_WSU_ID: bigint | null
        ANS_SCORES: number | null
        ANS_DATETIME: Date | null
        ANS_ISSHOW: boolean | null
    }

    export type GA_ANKETA_SCORESCountAggregateOutputType = {
        ANS_WSU_ID: number
        ANS_SCORES: number
        ANS_DATETIME: number
        ANS_ISSHOW: number
        _all: number
    }

    export type GA_ANKETA_SCORESAvgAggregateInputType = {
        ANS_WSU_ID?: true
        ANS_SCORES?: true
    }

    export type GA_ANKETA_SCORESSumAggregateInputType = {
        ANS_WSU_ID?: true
        ANS_SCORES?: true
    }

    export type GA_ANKETA_SCORESMinAggregateInputType = {
        ANS_WSU_ID?: true
        ANS_SCORES?: true
        ANS_DATETIME?: true
        ANS_ISSHOW?: true
    }

    export type GA_ANKETA_SCORESMaxAggregateInputType = {
        ANS_WSU_ID?: true
        ANS_SCORES?: true
        ANS_DATETIME?: true
        ANS_ISSHOW?: true
    }

    export type GA_ANKETA_SCORESCountAggregateInputType = {
        ANS_WSU_ID?: true
        ANS_SCORES?: true
        ANS_DATETIME?: true
        ANS_ISSHOW?: true
        _all?: true
    }

    export type GA_ANKETA_SCORESAggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_SCORES to aggregate.
         */
        where?: GA_ANKETA_SCORESWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_SCORES to fetch.
         */
        orderBy?:
            | GA_ANKETA_SCORESOrderByWithRelationInput
            | GA_ANKETA_SCORESOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_ANKETA_SCORESWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_SCORES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_SCORES.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_ANKETA_SCORES
         **/
        _count?: true | GA_ANKETA_SCORESCountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_ANKETA_SCORESAvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_ANKETA_SCORESSumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_ANKETA_SCORESMinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_ANKETA_SCORESMaxAggregateInputType
    }

    export type GetGA_ANKETA_SCORESAggregateType<
        T extends GA_ANKETA_SCORESAggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_ANKETA_SCORES]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_ANKETA_SCORES[P]>
            : GetScalarType<T[P], AggregateGA_ANKETA_SCORES[P]>
    }

    export type GA_ANKETA_SCORESGroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_ANKETA_SCORESWhereInput
        orderBy?:
            | GA_ANKETA_SCORESOrderByWithAggregationInput
            | GA_ANKETA_SCORESOrderByWithAggregationInput[]
        by: GA_ANKETA_SCORESScalarFieldEnum[] | GA_ANKETA_SCORESScalarFieldEnum
        having?: GA_ANKETA_SCORESScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_ANKETA_SCORESCountAggregateInputType | true
        _avg?: GA_ANKETA_SCORESAvgAggregateInputType
        _sum?: GA_ANKETA_SCORESSumAggregateInputType
        _min?: GA_ANKETA_SCORESMinAggregateInputType
        _max?: GA_ANKETA_SCORESMaxAggregateInputType
    }

    export type GA_ANKETA_SCORESGroupByOutputType = {
        ANS_WSU_ID: bigint
        ANS_SCORES: number
        ANS_DATETIME: Date
        ANS_ISSHOW: boolean
        _count: GA_ANKETA_SCORESCountAggregateOutputType | null
        _avg: GA_ANKETA_SCORESAvgAggregateOutputType | null
        _sum: GA_ANKETA_SCORESSumAggregateOutputType | null
        _min: GA_ANKETA_SCORESMinAggregateOutputType | null
        _max: GA_ANKETA_SCORESMaxAggregateOutputType | null
    }

    type GetGA_ANKETA_SCORESGroupByPayload<
        T extends GA_ANKETA_SCORESGroupByArgs,
    > = Prisma.PrismaPromise<
        Array<
            PickEnumerable<GA_ANKETA_SCORESGroupByOutputType, T['by']> & {
                [P in keyof T &
                    keyof GA_ANKETA_SCORESGroupByOutputType]: P extends '_count'
                    ? T[P] extends boolean
                        ? number
                        : GetScalarType<
                              T[P],
                              GA_ANKETA_SCORESGroupByOutputType[P]
                          >
                    : GetScalarType<T[P], GA_ANKETA_SCORESGroupByOutputType[P]>
            }
        >
    >

    export type GA_ANKETA_SCORESSelect<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            ANS_WSU_ID?: boolean
            ANS_SCORES?: boolean
            ANS_DATETIME?: boolean
            ANS_ISSHOW?: boolean
        },
        ExtArgs['result']['gA_ANKETA_SCORES']
    >

    export type GA_ANKETA_SCORESSelectScalar = {
        ANS_WSU_ID?: boolean
        ANS_SCORES?: boolean
        ANS_DATETIME?: boolean
        ANS_ISSHOW?: boolean
    }

    export type $GA_ANKETA_SCORESPayload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_ANKETA_SCORES'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                ANS_WSU_ID: bigint
                ANS_SCORES: number
                ANS_DATETIME: Date
                ANS_ISSHOW: boolean
            },
            ExtArgs['result']['gA_ANKETA_SCORES']
        >
        composites: {}
    }

    type GA_ANKETA_SCORESGetPayload<
        S extends boolean | null | undefined | GA_ANKETA_SCORESDefaultArgs,
    > = $Result.GetResult<Prisma.$GA_ANKETA_SCORESPayload, S>

    type GA_ANKETA_SCORESCountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<
        GA_ANKETA_SCORESFindManyArgs,
        'select' | 'include' | 'distinct'
    > & {
        select?: GA_ANKETA_SCORESCountAggregateInputType | true
    }

    export interface GA_ANKETA_SCORESDelegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_ANKETA_SCORES']
            meta: { name: 'GA_ANKETA_SCORES' }
        }
        /**
         * Find zero or one GA_ANKETA_SCORES that matches the filter.
         * @param {GA_ANKETA_SCORESFindUniqueArgs} args - Arguments to find a GA_ANKETA_SCORES
         * @example
         * // Get one GA_ANKETA_SCORES
         * const gA_ANKETA_SCORES = await prisma.gA_ANKETA_SCORES.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_ANKETA_SCORESFindUniqueArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SCORESFindUniqueArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SCORESClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORESPayload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_ANKETA_SCORES that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_ANKETA_SCORESFindUniqueOrThrowArgs} args - Arguments to find a GA_ANKETA_SCORES
         * @example
         * // Get one GA_ANKETA_SCORES
         * const gA_ANKETA_SCORES = await prisma.gA_ANKETA_SCORES.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_ANKETA_SCORESFindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_SCORESFindUniqueOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_SCORESClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORESPayload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_SCORES that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SCORESFindFirstArgs} args - Arguments to find a GA_ANKETA_SCORES
         * @example
         * // Get one GA_ANKETA_SCORES
         * const gA_ANKETA_SCORES = await prisma.gA_ANKETA_SCORES.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_ANKETA_SCORESFindFirstArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_SCORESFindFirstArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SCORESClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORESPayload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_SCORES that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SCORESFindFirstOrThrowArgs} args - Arguments to find a GA_ANKETA_SCORES
         * @example
         * // Get one GA_ANKETA_SCORES
         * const gA_ANKETA_SCORES = await prisma.gA_ANKETA_SCORES.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<
            T extends GA_ANKETA_SCORESFindFirstOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_SCORESFindFirstOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_SCORESClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORESPayload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_ANKETA_SCORES that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SCORESFindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_ANKETA_SCORES
         * const gA_ANKETA_SCORES = await prisma.gA_ANKETA_SCORES.findMany()
         *
         * // Get first 10 GA_ANKETA_SCORES
         * const gA_ANKETA_SCORES = await prisma.gA_ANKETA_SCORES.findMany({ take: 10 })
         *
         * // Only select the `ANS_WSU_ID`
         * const gA_ANKETA_SCORESWithANS_WSU_IDOnly = await prisma.gA_ANKETA_SCORES.findMany({ select: { ANS_WSU_ID: true } })
         *
         **/
        findMany<T extends GA_ANKETA_SCORESFindManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_SCORESFindManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORESPayload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_ANKETA_SCORES.
         * @param {GA_ANKETA_SCORESCreateArgs} args - Arguments to create a GA_ANKETA_SCORES.
         * @example
         * // Create one GA_ANKETA_SCORES
         * const GA_ANKETA_SCORES = await prisma.gA_ANKETA_SCORES.create({
         *   data: {
         *     // ... data to create a GA_ANKETA_SCORES
         *   }
         * })
         *
         **/
        create<T extends GA_ANKETA_SCORESCreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SCORESCreateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SCORESClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORESPayload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_ANKETA_SCORES.
         *     @param {GA_ANKETA_SCORESCreateManyArgs} args - Arguments to create many GA_ANKETA_SCORES.
         *     @example
         *     // Create many GA_ANKETA_SCORES
         *     const gA_ANKETA_SCORES = await prisma.gA_ANKETA_SCORES.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_ANKETA_SCORESCreateManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_SCORESCreateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_ANKETA_SCORES.
         * @param {GA_ANKETA_SCORESDeleteArgs} args - Arguments to delete one GA_ANKETA_SCORES.
         * @example
         * // Delete one GA_ANKETA_SCORES
         * const GA_ANKETA_SCORES = await prisma.gA_ANKETA_SCORES.delete({
         *   where: {
         *     // ... filter to delete one GA_ANKETA_SCORES
         *   }
         * })
         *
         **/
        delete<T extends GA_ANKETA_SCORESDeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SCORESDeleteArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SCORESClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORESPayload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_ANKETA_SCORES.
         * @param {GA_ANKETA_SCORESUpdateArgs} args - Arguments to update one GA_ANKETA_SCORES.
         * @example
         * // Update one GA_ANKETA_SCORES
         * const gA_ANKETA_SCORES = await prisma.gA_ANKETA_SCORES.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_ANKETA_SCORESUpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SCORESUpdateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SCORESClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORESPayload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_ANKETA_SCORES.
         * @param {GA_ANKETA_SCORESDeleteManyArgs} args - Arguments to filter GA_ANKETA_SCORES to delete.
         * @example
         * // Delete a few GA_ANKETA_SCORES
         * const { count } = await prisma.gA_ANKETA_SCORES.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_ANKETA_SCORESDeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_SCORESDeleteManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_ANKETA_SCORES.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SCORESUpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_ANKETA_SCORES
         * const gA_ANKETA_SCORES = await prisma.gA_ANKETA_SCORES.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_ANKETA_SCORESUpdateManyArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SCORESUpdateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_ANKETA_SCORES.
         * @param {GA_ANKETA_SCORESUpsertArgs} args - Arguments to update or create a GA_ANKETA_SCORES.
         * @example
         * // Update or create a GA_ANKETA_SCORES
         * const gA_ANKETA_SCORES = await prisma.gA_ANKETA_SCORES.upsert({
         *   create: {
         *     // ... data to create a GA_ANKETA_SCORES
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_ANKETA_SCORES we want to update
         *   }
         * })
         **/
        upsert<T extends GA_ANKETA_SCORESUpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SCORESUpsertArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SCORESClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORESPayload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_ANKETA_SCORES.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SCORESCountArgs} args - Arguments to filter GA_ANKETA_SCORES to count.
         * @example
         * // Count the number of GA_ANKETA_SCORES
         * const count = await prisma.gA_ANKETA_SCORES.count({
         *   where: {
         *     // ... the filter for the GA_ANKETA_SCORES we want to count
         *   }
         * })
         **/
        count<T extends GA_ANKETA_SCORESCountArgs>(
            args?: Subset<T, GA_ANKETA_SCORESCountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_ANKETA_SCORESCountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_ANKETA_SCORES.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SCORESAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_ANKETA_SCORESAggregateArgs>(
            args: Subset<T, GA_ANKETA_SCORESAggregateArgs>
        ): Prisma.PrismaPromise<GetGA_ANKETA_SCORESAggregateType<T>>

        /**
         * Group by GA_ANKETA_SCORES.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SCORESGroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_ANKETA_SCORESGroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_ANKETA_SCORESGroupByArgs['orderBy'] }
                : { orderBy?: GA_ANKETA_SCORESGroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<
                T,
                GA_ANKETA_SCORESGroupByArgs,
                OrderByArg
            > &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_ANKETA_SCORESGroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_ANKETA_SCORES model
         */
        readonly fields: GA_ANKETA_SCORESFieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_ANKETA_SCORES.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_ANKETA_SCORESClient<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_ANKETA_SCORES model
     */
    interface GA_ANKETA_SCORESFieldRefs {
        readonly ANS_WSU_ID: FieldRef<'GA_ANKETA_SCORES', 'BigInt'>
        readonly ANS_SCORES: FieldRef<'GA_ANKETA_SCORES', 'Int'>
        readonly ANS_DATETIME: FieldRef<'GA_ANKETA_SCORES', 'DateTime'>
        readonly ANS_ISSHOW: FieldRef<'GA_ANKETA_SCORES', 'Boolean'>
    }

    // Custom InputTypes

    /**
     * GA_ANKETA_SCORES findUnique
     */
    export type GA_ANKETA_SCORESFindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES
         */
        select?: GA_ANKETA_SCORESSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_SCORES to fetch.
         */
        where: GA_ANKETA_SCORESWhereUniqueInput
    }

    /**
     * GA_ANKETA_SCORES findUniqueOrThrow
     */
    export type GA_ANKETA_SCORESFindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES
         */
        select?: GA_ANKETA_SCORESSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_SCORES to fetch.
         */
        where: GA_ANKETA_SCORESWhereUniqueInput
    }

    /**
     * GA_ANKETA_SCORES findFirst
     */
    export type GA_ANKETA_SCORESFindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES
         */
        select?: GA_ANKETA_SCORESSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_SCORES to fetch.
         */
        where?: GA_ANKETA_SCORESWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_SCORES to fetch.
         */
        orderBy?:
            | GA_ANKETA_SCORESOrderByWithRelationInput
            | GA_ANKETA_SCORESOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_SCORES.
         */
        cursor?: GA_ANKETA_SCORESWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_SCORES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_SCORES.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_SCORES.
         */
        distinct?:
            | GA_ANKETA_SCORESScalarFieldEnum
            | GA_ANKETA_SCORESScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_SCORES findFirstOrThrow
     */
    export type GA_ANKETA_SCORESFindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES
         */
        select?: GA_ANKETA_SCORESSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_SCORES to fetch.
         */
        where?: GA_ANKETA_SCORESWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_SCORES to fetch.
         */
        orderBy?:
            | GA_ANKETA_SCORESOrderByWithRelationInput
            | GA_ANKETA_SCORESOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_SCORES.
         */
        cursor?: GA_ANKETA_SCORESWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_SCORES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_SCORES.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_SCORES.
         */
        distinct?:
            | GA_ANKETA_SCORESScalarFieldEnum
            | GA_ANKETA_SCORESScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_SCORES findMany
     */
    export type GA_ANKETA_SCORESFindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES
         */
        select?: GA_ANKETA_SCORESSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_SCORES to fetch.
         */
        where?: GA_ANKETA_SCORESWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_SCORES to fetch.
         */
        orderBy?:
            | GA_ANKETA_SCORESOrderByWithRelationInput
            | GA_ANKETA_SCORESOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_ANKETA_SCORES.
         */
        cursor?: GA_ANKETA_SCORESWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_SCORES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_SCORES.
         */
        skip?: number
        distinct?:
            | GA_ANKETA_SCORESScalarFieldEnum
            | GA_ANKETA_SCORESScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_SCORES create
     */
    export type GA_ANKETA_SCORESCreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES
         */
        select?: GA_ANKETA_SCORESSelect<ExtArgs> | null
        /**
         * The data needed to create a GA_ANKETA_SCORES.
         */
        data: XOR<
            GA_ANKETA_SCORESCreateInput,
            GA_ANKETA_SCORESUncheckedCreateInput
        >
    }

    /**
     * GA_ANKETA_SCORES createMany
     */
    export type GA_ANKETA_SCORESCreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_ANKETA_SCORES.
         */
        data:
            | GA_ANKETA_SCORESCreateManyInput
            | GA_ANKETA_SCORESCreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_ANKETA_SCORES update
     */
    export type GA_ANKETA_SCORESUpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES
         */
        select?: GA_ANKETA_SCORESSelect<ExtArgs> | null
        /**
         * The data needed to update a GA_ANKETA_SCORES.
         */
        data: XOR<
            GA_ANKETA_SCORESUpdateInput,
            GA_ANKETA_SCORESUncheckedUpdateInput
        >
        /**
         * Choose, which GA_ANKETA_SCORES to update.
         */
        where: GA_ANKETA_SCORESWhereUniqueInput
    }

    /**
     * GA_ANKETA_SCORES updateMany
     */
    export type GA_ANKETA_SCORESUpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_ANKETA_SCORES.
         */
        data: XOR<
            GA_ANKETA_SCORESUpdateManyMutationInput,
            GA_ANKETA_SCORESUncheckedUpdateManyInput
        >
        /**
         * Filter which GA_ANKETA_SCORES to update
         */
        where?: GA_ANKETA_SCORESWhereInput
    }

    /**
     * GA_ANKETA_SCORES upsert
     */
    export type GA_ANKETA_SCORESUpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES
         */
        select?: GA_ANKETA_SCORESSelect<ExtArgs> | null
        /**
         * The filter to search for the GA_ANKETA_SCORES to update in case it exists.
         */
        where: GA_ANKETA_SCORESWhereUniqueInput
        /**
         * In case the GA_ANKETA_SCORES found by the `where` argument doesn't exist, create a new GA_ANKETA_SCORES with this data.
         */
        create: XOR<
            GA_ANKETA_SCORESCreateInput,
            GA_ANKETA_SCORESUncheckedCreateInput
        >
        /**
         * In case the GA_ANKETA_SCORES was found with the provided `where` argument, update it with this data.
         */
        update: XOR<
            GA_ANKETA_SCORESUpdateInput,
            GA_ANKETA_SCORESUncheckedUpdateInput
        >
    }

    /**
     * GA_ANKETA_SCORES delete
     */
    export type GA_ANKETA_SCORESDeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES
         */
        select?: GA_ANKETA_SCORESSelect<ExtArgs> | null
        /**
         * Filter which GA_ANKETA_SCORES to delete.
         */
        where: GA_ANKETA_SCORESWhereUniqueInput
    }

    /**
     * GA_ANKETA_SCORES deleteMany
     */
    export type GA_ANKETA_SCORESDeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_SCORES to delete
         */
        where?: GA_ANKETA_SCORESWhereInput
    }

    /**
     * GA_ANKETA_SCORES without action
     */
    export type GA_ANKETA_SCORESDefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES
         */
        select?: GA_ANKETA_SCORESSelect<ExtArgs> | null
    }

    /**
     * Model GA_ANKETA_SCORES_HISTORY
     */

    export type AggregateGA_ANKETA_SCORES_HISTORY = {
        _count: GA_ANKETA_SCORES_HISTORYCountAggregateOutputType | null
        _avg: GA_ANKETA_SCORES_HISTORYAvgAggregateOutputType | null
        _sum: GA_ANKETA_SCORES_HISTORYSumAggregateOutputType | null
        _min: GA_ANKETA_SCORES_HISTORYMinAggregateOutputType | null
        _max: GA_ANKETA_SCORES_HISTORYMaxAggregateOutputType | null
    }

    export type GA_ANKETA_SCORES_HISTORYAvgAggregateOutputType = {
        ASH_WSU_ID: number | null
        ASH_SCORES: number | null
        ASH_TYPE: number | null
        ASH_SCORES_OLD: number | null
        ASH_IZO_ID: number | null
    }

    export type GA_ANKETA_SCORES_HISTORYSumAggregateOutputType = {
        ASH_WSU_ID: bigint | null
        ASH_SCORES: number | null
        ASH_TYPE: number | null
        ASH_SCORES_OLD: number | null
        ASH_IZO_ID: bigint | null
    }

    export type GA_ANKETA_SCORES_HISTORYMinAggregateOutputType = {
        ASH_WSU_ID: bigint | null
        ASH_SCORES: number | null
        ASH_DATETIME: Date | null
        ASH_DESC: string | null
        ASH_TYPE: number | null
        ASH_SCORES_OLD: number | null
        ASH_EVENT_STATUS: boolean | null
        ASH_DATETIME_UPDATE: Date | null
        ASH_IZO_ID: bigint | null
    }

    export type GA_ANKETA_SCORES_HISTORYMaxAggregateOutputType = {
        ASH_WSU_ID: bigint | null
        ASH_SCORES: number | null
        ASH_DATETIME: Date | null
        ASH_DESC: string | null
        ASH_TYPE: number | null
        ASH_SCORES_OLD: number | null
        ASH_EVENT_STATUS: boolean | null
        ASH_DATETIME_UPDATE: Date | null
        ASH_IZO_ID: bigint | null
    }

    export type GA_ANKETA_SCORES_HISTORYCountAggregateOutputType = {
        ASH_WSU_ID: number
        ASH_SCORES: number
        ASH_DATETIME: number
        ASH_DESC: number
        ASH_TYPE: number
        ASH_SCORES_OLD: number
        ASH_EVENT_STATUS: number
        ASH_DATETIME_UPDATE: number
        ASH_IZO_ID: number
        _all: number
    }

    export type GA_ANKETA_SCORES_HISTORYAvgAggregateInputType = {
        ASH_WSU_ID?: true
        ASH_SCORES?: true
        ASH_TYPE?: true
        ASH_SCORES_OLD?: true
        ASH_IZO_ID?: true
    }

    export type GA_ANKETA_SCORES_HISTORYSumAggregateInputType = {
        ASH_WSU_ID?: true
        ASH_SCORES?: true
        ASH_TYPE?: true
        ASH_SCORES_OLD?: true
        ASH_IZO_ID?: true
    }

    export type GA_ANKETA_SCORES_HISTORYMinAggregateInputType = {
        ASH_WSU_ID?: true
        ASH_SCORES?: true
        ASH_DATETIME?: true
        ASH_DESC?: true
        ASH_TYPE?: true
        ASH_SCORES_OLD?: true
        ASH_EVENT_STATUS?: true
        ASH_DATETIME_UPDATE?: true
        ASH_IZO_ID?: true
    }

    export type GA_ANKETA_SCORES_HISTORYMaxAggregateInputType = {
        ASH_WSU_ID?: true
        ASH_SCORES?: true
        ASH_DATETIME?: true
        ASH_DESC?: true
        ASH_TYPE?: true
        ASH_SCORES_OLD?: true
        ASH_EVENT_STATUS?: true
        ASH_DATETIME_UPDATE?: true
        ASH_IZO_ID?: true
    }

    export type GA_ANKETA_SCORES_HISTORYCountAggregateInputType = {
        ASH_WSU_ID?: true
        ASH_SCORES?: true
        ASH_DATETIME?: true
        ASH_DESC?: true
        ASH_TYPE?: true
        ASH_SCORES_OLD?: true
        ASH_EVENT_STATUS?: true
        ASH_DATETIME_UPDATE?: true
        ASH_IZO_ID?: true
        _all?: true
    }

    export type GA_ANKETA_SCORES_HISTORYAggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_SCORES_HISTORY to aggregate.
         */
        where?: GA_ANKETA_SCORES_HISTORYWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_SCORES_HISTORIES to fetch.
         */
        orderBy?:
            | GA_ANKETA_SCORES_HISTORYOrderByWithRelationInput
            | GA_ANKETA_SCORES_HISTORYOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_ANKETA_SCORES_HISTORYWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_SCORES_HISTORIES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_SCORES_HISTORIES.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_ANKETA_SCORES_HISTORIES
         **/
        _count?: true | GA_ANKETA_SCORES_HISTORYCountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_ANKETA_SCORES_HISTORYAvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_ANKETA_SCORES_HISTORYSumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_ANKETA_SCORES_HISTORYMinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_ANKETA_SCORES_HISTORYMaxAggregateInputType
    }

    export type GetGA_ANKETA_SCORES_HISTORYAggregateType<
        T extends GA_ANKETA_SCORES_HISTORYAggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_ANKETA_SCORES_HISTORY]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_ANKETA_SCORES_HISTORY[P]>
            : GetScalarType<T[P], AggregateGA_ANKETA_SCORES_HISTORY[P]>
    }

    export type GA_ANKETA_SCORES_HISTORYGroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_ANKETA_SCORES_HISTORYWhereInput
        orderBy?:
            | GA_ANKETA_SCORES_HISTORYOrderByWithAggregationInput
            | GA_ANKETA_SCORES_HISTORYOrderByWithAggregationInput[]
        by:
            | GA_ANKETA_SCORES_HISTORYScalarFieldEnum[]
            | GA_ANKETA_SCORES_HISTORYScalarFieldEnum
        having?: GA_ANKETA_SCORES_HISTORYScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_ANKETA_SCORES_HISTORYCountAggregateInputType | true
        _avg?: GA_ANKETA_SCORES_HISTORYAvgAggregateInputType
        _sum?: GA_ANKETA_SCORES_HISTORYSumAggregateInputType
        _min?: GA_ANKETA_SCORES_HISTORYMinAggregateInputType
        _max?: GA_ANKETA_SCORES_HISTORYMaxAggregateInputType
    }

    export type GA_ANKETA_SCORES_HISTORYGroupByOutputType = {
        ASH_WSU_ID: bigint
        ASH_SCORES: number
        ASH_DATETIME: Date
        ASH_DESC: string
        ASH_TYPE: number
        ASH_SCORES_OLD: number
        ASH_EVENT_STATUS: boolean
        ASH_DATETIME_UPDATE: Date
        ASH_IZO_ID: bigint
        _count: GA_ANKETA_SCORES_HISTORYCountAggregateOutputType | null
        _avg: GA_ANKETA_SCORES_HISTORYAvgAggregateOutputType | null
        _sum: GA_ANKETA_SCORES_HISTORYSumAggregateOutputType | null
        _min: GA_ANKETA_SCORES_HISTORYMinAggregateOutputType | null
        _max: GA_ANKETA_SCORES_HISTORYMaxAggregateOutputType | null
    }

    type GetGA_ANKETA_SCORES_HISTORYGroupByPayload<
        T extends GA_ANKETA_SCORES_HISTORYGroupByArgs,
    > = Prisma.PrismaPromise<
        Array<
            PickEnumerable<
                GA_ANKETA_SCORES_HISTORYGroupByOutputType,
                T['by']
            > & {
                [P in keyof T &
                    keyof GA_ANKETA_SCORES_HISTORYGroupByOutputType]: P extends '_count'
                    ? T[P] extends boolean
                        ? number
                        : GetScalarType<
                              T[P],
                              GA_ANKETA_SCORES_HISTORYGroupByOutputType[P]
                          >
                    : GetScalarType<
                          T[P],
                          GA_ANKETA_SCORES_HISTORYGroupByOutputType[P]
                      >
            }
        >
    >

    export type GA_ANKETA_SCORES_HISTORYSelect<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            ASH_WSU_ID?: boolean
            ASH_SCORES?: boolean
            ASH_DATETIME?: boolean
            ASH_DESC?: boolean
            ASH_TYPE?: boolean
            ASH_SCORES_OLD?: boolean
            ASH_EVENT_STATUS?: boolean
            ASH_DATETIME_UPDATE?: boolean
            ASH_IZO_ID?: boolean
        },
        ExtArgs['result']['gA_ANKETA_SCORES_HISTORY']
    >

    export type GA_ANKETA_SCORES_HISTORYSelectScalar = {
        ASH_WSU_ID?: boolean
        ASH_SCORES?: boolean
        ASH_DATETIME?: boolean
        ASH_DESC?: boolean
        ASH_TYPE?: boolean
        ASH_SCORES_OLD?: boolean
        ASH_EVENT_STATUS?: boolean
        ASH_DATETIME_UPDATE?: boolean
        ASH_IZO_ID?: boolean
    }

    export type $GA_ANKETA_SCORES_HISTORYPayload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_ANKETA_SCORES_HISTORY'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                ASH_WSU_ID: bigint
                ASH_SCORES: number
                ASH_DATETIME: Date
                ASH_DESC: string
                ASH_TYPE: number
                ASH_SCORES_OLD: number
                ASH_EVENT_STATUS: boolean
                ASH_DATETIME_UPDATE: Date
                ASH_IZO_ID: bigint
            },
            ExtArgs['result']['gA_ANKETA_SCORES_HISTORY']
        >
        composites: {}
    }

    type GA_ANKETA_SCORES_HISTORYGetPayload<
        S extends
            | boolean
            | null
            | undefined
            | GA_ANKETA_SCORES_HISTORYDefaultArgs,
    > = $Result.GetResult<Prisma.$GA_ANKETA_SCORES_HISTORYPayload, S>

    type GA_ANKETA_SCORES_HISTORYCountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<
        GA_ANKETA_SCORES_HISTORYFindManyArgs,
        'select' | 'include' | 'distinct'
    > & {
        select?: GA_ANKETA_SCORES_HISTORYCountAggregateInputType | true
    }

    export interface GA_ANKETA_SCORES_HISTORYDelegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_ANKETA_SCORES_HISTORY']
            meta: { name: 'GA_ANKETA_SCORES_HISTORY' }
        }
        /**
         * Find zero or one GA_ANKETA_SCORES_HISTORY that matches the filter.
         * @param {GA_ANKETA_SCORES_HISTORYFindUniqueArgs} args - Arguments to find a GA_ANKETA_SCORES_HISTORY
         * @example
         * // Get one GA_ANKETA_SCORES_HISTORY
         * const gA_ANKETA_SCORES_HISTORY = await prisma.gA_ANKETA_SCORES_HISTORY.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_ANKETA_SCORES_HISTORYFindUniqueArgs<ExtArgs>>(
            args: SelectSubset<
                T,
                GA_ANKETA_SCORES_HISTORYFindUniqueArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_SCORES_HISTORYClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORES_HISTORYPayload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_ANKETA_SCORES_HISTORY that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_ANKETA_SCORES_HISTORYFindUniqueOrThrowArgs} args - Arguments to find a GA_ANKETA_SCORES_HISTORY
         * @example
         * // Get one GA_ANKETA_SCORES_HISTORY
         * const gA_ANKETA_SCORES_HISTORY = await prisma.gA_ANKETA_SCORES_HISTORY.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_ANKETA_SCORES_HISTORYFindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_SCORES_HISTORYFindUniqueOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_SCORES_HISTORYClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORES_HISTORYPayload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_SCORES_HISTORY that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SCORES_HISTORYFindFirstArgs} args - Arguments to find a GA_ANKETA_SCORES_HISTORY
         * @example
         * // Get one GA_ANKETA_SCORES_HISTORY
         * const gA_ANKETA_SCORES_HISTORY = await prisma.gA_ANKETA_SCORES_HISTORY.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_ANKETA_SCORES_HISTORYFindFirstArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_SCORES_HISTORYFindFirstArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_SCORES_HISTORYClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORES_HISTORYPayload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_SCORES_HISTORY that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SCORES_HISTORYFindFirstOrThrowArgs} args - Arguments to find a GA_ANKETA_SCORES_HISTORY
         * @example
         * // Get one GA_ANKETA_SCORES_HISTORY
         * const gA_ANKETA_SCORES_HISTORY = await prisma.gA_ANKETA_SCORES_HISTORY.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<
            T extends GA_ANKETA_SCORES_HISTORYFindFirstOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_SCORES_HISTORYFindFirstOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_SCORES_HISTORYClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORES_HISTORYPayload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_ANKETA_SCORES_HISTORIES that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SCORES_HISTORYFindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_ANKETA_SCORES_HISTORIES
         * const gA_ANKETA_SCORES_HISTORIES = await prisma.gA_ANKETA_SCORES_HISTORY.findMany()
         *
         * // Get first 10 GA_ANKETA_SCORES_HISTORIES
         * const gA_ANKETA_SCORES_HISTORIES = await prisma.gA_ANKETA_SCORES_HISTORY.findMany({ take: 10 })
         *
         * // Only select the `ASH_WSU_ID`
         * const gA_ANKETA_SCORES_HISTORYWithASH_WSU_IDOnly = await prisma.gA_ANKETA_SCORES_HISTORY.findMany({ select: { ASH_WSU_ID: true } })
         *
         **/
        findMany<T extends GA_ANKETA_SCORES_HISTORYFindManyArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_SCORES_HISTORYFindManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORES_HISTORYPayload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_ANKETA_SCORES_HISTORY.
         * @param {GA_ANKETA_SCORES_HISTORYCreateArgs} args - Arguments to create a GA_ANKETA_SCORES_HISTORY.
         * @example
         * // Create one GA_ANKETA_SCORES_HISTORY
         * const GA_ANKETA_SCORES_HISTORY = await prisma.gA_ANKETA_SCORES_HISTORY.create({
         *   data: {
         *     // ... data to create a GA_ANKETA_SCORES_HISTORY
         *   }
         * })
         *
         **/
        create<T extends GA_ANKETA_SCORES_HISTORYCreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SCORES_HISTORYCreateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SCORES_HISTORYClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORES_HISTORYPayload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_ANKETA_SCORES_HISTORIES.
         *     @param {GA_ANKETA_SCORES_HISTORYCreateManyArgs} args - Arguments to create many GA_ANKETA_SCORES_HISTORIES.
         *     @example
         *     // Create many GA_ANKETA_SCORES_HISTORIES
         *     const gA_ANKETA_SCORES_HISTORY = await prisma.gA_ANKETA_SCORES_HISTORY.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_ANKETA_SCORES_HISTORYCreateManyArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_SCORES_HISTORYCreateManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_ANKETA_SCORES_HISTORY.
         * @param {GA_ANKETA_SCORES_HISTORYDeleteArgs} args - Arguments to delete one GA_ANKETA_SCORES_HISTORY.
         * @example
         * // Delete one GA_ANKETA_SCORES_HISTORY
         * const GA_ANKETA_SCORES_HISTORY = await prisma.gA_ANKETA_SCORES_HISTORY.delete({
         *   where: {
         *     // ... filter to delete one GA_ANKETA_SCORES_HISTORY
         *   }
         * })
         *
         **/
        delete<T extends GA_ANKETA_SCORES_HISTORYDeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SCORES_HISTORYDeleteArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SCORES_HISTORYClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORES_HISTORYPayload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_ANKETA_SCORES_HISTORY.
         * @param {GA_ANKETA_SCORES_HISTORYUpdateArgs} args - Arguments to update one GA_ANKETA_SCORES_HISTORY.
         * @example
         * // Update one GA_ANKETA_SCORES_HISTORY
         * const gA_ANKETA_SCORES_HISTORY = await prisma.gA_ANKETA_SCORES_HISTORY.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_ANKETA_SCORES_HISTORYUpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SCORES_HISTORYUpdateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SCORES_HISTORYClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORES_HISTORYPayload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_ANKETA_SCORES_HISTORIES.
         * @param {GA_ANKETA_SCORES_HISTORYDeleteManyArgs} args - Arguments to filter GA_ANKETA_SCORES_HISTORIES to delete.
         * @example
         * // Delete a few GA_ANKETA_SCORES_HISTORIES
         * const { count } = await prisma.gA_ANKETA_SCORES_HISTORY.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_ANKETA_SCORES_HISTORYDeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_SCORES_HISTORYDeleteManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_ANKETA_SCORES_HISTORIES.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SCORES_HISTORYUpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_ANKETA_SCORES_HISTORIES
         * const gA_ANKETA_SCORES_HISTORY = await prisma.gA_ANKETA_SCORES_HISTORY.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_ANKETA_SCORES_HISTORYUpdateManyArgs<ExtArgs>>(
            args: SelectSubset<
                T,
                GA_ANKETA_SCORES_HISTORYUpdateManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_ANKETA_SCORES_HISTORY.
         * @param {GA_ANKETA_SCORES_HISTORYUpsertArgs} args - Arguments to update or create a GA_ANKETA_SCORES_HISTORY.
         * @example
         * // Update or create a GA_ANKETA_SCORES_HISTORY
         * const gA_ANKETA_SCORES_HISTORY = await prisma.gA_ANKETA_SCORES_HISTORY.upsert({
         *   create: {
         *     // ... data to create a GA_ANKETA_SCORES_HISTORY
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_ANKETA_SCORES_HISTORY we want to update
         *   }
         * })
         **/
        upsert<T extends GA_ANKETA_SCORES_HISTORYUpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SCORES_HISTORYUpsertArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SCORES_HISTORYClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SCORES_HISTORYPayload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_ANKETA_SCORES_HISTORIES.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SCORES_HISTORYCountArgs} args - Arguments to filter GA_ANKETA_SCORES_HISTORIES to count.
         * @example
         * // Count the number of GA_ANKETA_SCORES_HISTORIES
         * const count = await prisma.gA_ANKETA_SCORES_HISTORY.count({
         *   where: {
         *     // ... the filter for the GA_ANKETA_SCORES_HISTORIES we want to count
         *   }
         * })
         **/
        count<T extends GA_ANKETA_SCORES_HISTORYCountArgs>(
            args?: Subset<T, GA_ANKETA_SCORES_HISTORYCountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_ANKETA_SCORES_HISTORYCountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_ANKETA_SCORES_HISTORY.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SCORES_HISTORYAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_ANKETA_SCORES_HISTORYAggregateArgs>(
            args: Subset<T, GA_ANKETA_SCORES_HISTORYAggregateArgs>
        ): Prisma.PrismaPromise<GetGA_ANKETA_SCORES_HISTORYAggregateType<T>>

        /**
         * Group by GA_ANKETA_SCORES_HISTORY.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SCORES_HISTORYGroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_ANKETA_SCORES_HISTORYGroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_ANKETA_SCORES_HISTORYGroupByArgs['orderBy'] }
                : { orderBy?: GA_ANKETA_SCORES_HISTORYGroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<
                T,
                GA_ANKETA_SCORES_HISTORYGroupByArgs,
                OrderByArg
            > &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_ANKETA_SCORES_HISTORYGroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_ANKETA_SCORES_HISTORY model
         */
        readonly fields: GA_ANKETA_SCORES_HISTORYFieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_ANKETA_SCORES_HISTORY.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_ANKETA_SCORES_HISTORYClient<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_ANKETA_SCORES_HISTORY model
     */
    interface GA_ANKETA_SCORES_HISTORYFieldRefs {
        readonly ASH_WSU_ID: FieldRef<'GA_ANKETA_SCORES_HISTORY', 'BigInt'>
        readonly ASH_SCORES: FieldRef<'GA_ANKETA_SCORES_HISTORY', 'Int'>
        readonly ASH_DATETIME: FieldRef<'GA_ANKETA_SCORES_HISTORY', 'DateTime'>
        readonly ASH_DESC: FieldRef<'GA_ANKETA_SCORES_HISTORY', 'String'>
        readonly ASH_TYPE: FieldRef<'GA_ANKETA_SCORES_HISTORY', 'Int'>
        readonly ASH_SCORES_OLD: FieldRef<'GA_ANKETA_SCORES_HISTORY', 'Int'>
        readonly ASH_EVENT_STATUS: FieldRef<
            'GA_ANKETA_SCORES_HISTORY',
            'Boolean'
        >
        readonly ASH_DATETIME_UPDATE: FieldRef<
            'GA_ANKETA_SCORES_HISTORY',
            'DateTime'
        >
        readonly ASH_IZO_ID: FieldRef<'GA_ANKETA_SCORES_HISTORY', 'BigInt'>
    }

    // Custom InputTypes

    /**
     * GA_ANKETA_SCORES_HISTORY findUnique
     */
    export type GA_ANKETA_SCORES_HISTORYFindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES_HISTORY
         */
        select?: GA_ANKETA_SCORES_HISTORYSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_SCORES_HISTORY to fetch.
         */
        where: GA_ANKETA_SCORES_HISTORYWhereUniqueInput
    }

    /**
     * GA_ANKETA_SCORES_HISTORY findUniqueOrThrow
     */
    export type GA_ANKETA_SCORES_HISTORYFindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES_HISTORY
         */
        select?: GA_ANKETA_SCORES_HISTORYSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_SCORES_HISTORY to fetch.
         */
        where: GA_ANKETA_SCORES_HISTORYWhereUniqueInput
    }

    /**
     * GA_ANKETA_SCORES_HISTORY findFirst
     */
    export type GA_ANKETA_SCORES_HISTORYFindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES_HISTORY
         */
        select?: GA_ANKETA_SCORES_HISTORYSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_SCORES_HISTORY to fetch.
         */
        where?: GA_ANKETA_SCORES_HISTORYWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_SCORES_HISTORIES to fetch.
         */
        orderBy?:
            | GA_ANKETA_SCORES_HISTORYOrderByWithRelationInput
            | GA_ANKETA_SCORES_HISTORYOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_SCORES_HISTORIES.
         */
        cursor?: GA_ANKETA_SCORES_HISTORYWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_SCORES_HISTORIES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_SCORES_HISTORIES.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_SCORES_HISTORIES.
         */
        distinct?:
            | GA_ANKETA_SCORES_HISTORYScalarFieldEnum
            | GA_ANKETA_SCORES_HISTORYScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_SCORES_HISTORY findFirstOrThrow
     */
    export type GA_ANKETA_SCORES_HISTORYFindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES_HISTORY
         */
        select?: GA_ANKETA_SCORES_HISTORYSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_SCORES_HISTORY to fetch.
         */
        where?: GA_ANKETA_SCORES_HISTORYWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_SCORES_HISTORIES to fetch.
         */
        orderBy?:
            | GA_ANKETA_SCORES_HISTORYOrderByWithRelationInput
            | GA_ANKETA_SCORES_HISTORYOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_SCORES_HISTORIES.
         */
        cursor?: GA_ANKETA_SCORES_HISTORYWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_SCORES_HISTORIES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_SCORES_HISTORIES.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_SCORES_HISTORIES.
         */
        distinct?:
            | GA_ANKETA_SCORES_HISTORYScalarFieldEnum
            | GA_ANKETA_SCORES_HISTORYScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_SCORES_HISTORY findMany
     */
    export type GA_ANKETA_SCORES_HISTORYFindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES_HISTORY
         */
        select?: GA_ANKETA_SCORES_HISTORYSelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_SCORES_HISTORIES to fetch.
         */
        where?: GA_ANKETA_SCORES_HISTORYWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_SCORES_HISTORIES to fetch.
         */
        orderBy?:
            | GA_ANKETA_SCORES_HISTORYOrderByWithRelationInput
            | GA_ANKETA_SCORES_HISTORYOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_ANKETA_SCORES_HISTORIES.
         */
        cursor?: GA_ANKETA_SCORES_HISTORYWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_SCORES_HISTORIES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_SCORES_HISTORIES.
         */
        skip?: number
        distinct?:
            | GA_ANKETA_SCORES_HISTORYScalarFieldEnum
            | GA_ANKETA_SCORES_HISTORYScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_SCORES_HISTORY create
     */
    export type GA_ANKETA_SCORES_HISTORYCreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES_HISTORY
         */
        select?: GA_ANKETA_SCORES_HISTORYSelect<ExtArgs> | null
        /**
         * The data needed to create a GA_ANKETA_SCORES_HISTORY.
         */
        data: XOR<
            GA_ANKETA_SCORES_HISTORYCreateInput,
            GA_ANKETA_SCORES_HISTORYUncheckedCreateInput
        >
    }

    /**
     * GA_ANKETA_SCORES_HISTORY createMany
     */
    export type GA_ANKETA_SCORES_HISTORYCreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_ANKETA_SCORES_HISTORIES.
         */
        data:
            | GA_ANKETA_SCORES_HISTORYCreateManyInput
            | GA_ANKETA_SCORES_HISTORYCreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_ANKETA_SCORES_HISTORY update
     */
    export type GA_ANKETA_SCORES_HISTORYUpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES_HISTORY
         */
        select?: GA_ANKETA_SCORES_HISTORYSelect<ExtArgs> | null
        /**
         * The data needed to update a GA_ANKETA_SCORES_HISTORY.
         */
        data: XOR<
            GA_ANKETA_SCORES_HISTORYUpdateInput,
            GA_ANKETA_SCORES_HISTORYUncheckedUpdateInput
        >
        /**
         * Choose, which GA_ANKETA_SCORES_HISTORY to update.
         */
        where: GA_ANKETA_SCORES_HISTORYWhereUniqueInput
    }

    /**
     * GA_ANKETA_SCORES_HISTORY updateMany
     */
    export type GA_ANKETA_SCORES_HISTORYUpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_ANKETA_SCORES_HISTORIES.
         */
        data: XOR<
            GA_ANKETA_SCORES_HISTORYUpdateManyMutationInput,
            GA_ANKETA_SCORES_HISTORYUncheckedUpdateManyInput
        >
        /**
         * Filter which GA_ANKETA_SCORES_HISTORIES to update
         */
        where?: GA_ANKETA_SCORES_HISTORYWhereInput
    }

    /**
     * GA_ANKETA_SCORES_HISTORY upsert
     */
    export type GA_ANKETA_SCORES_HISTORYUpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES_HISTORY
         */
        select?: GA_ANKETA_SCORES_HISTORYSelect<ExtArgs> | null
        /**
         * The filter to search for the GA_ANKETA_SCORES_HISTORY to update in case it exists.
         */
        where: GA_ANKETA_SCORES_HISTORYWhereUniqueInput
        /**
         * In case the GA_ANKETA_SCORES_HISTORY found by the `where` argument doesn't exist, create a new GA_ANKETA_SCORES_HISTORY with this data.
         */
        create: XOR<
            GA_ANKETA_SCORES_HISTORYCreateInput,
            GA_ANKETA_SCORES_HISTORYUncheckedCreateInput
        >
        /**
         * In case the GA_ANKETA_SCORES_HISTORY was found with the provided `where` argument, update it with this data.
         */
        update: XOR<
            GA_ANKETA_SCORES_HISTORYUpdateInput,
            GA_ANKETA_SCORES_HISTORYUncheckedUpdateInput
        >
    }

    /**
     * GA_ANKETA_SCORES_HISTORY delete
     */
    export type GA_ANKETA_SCORES_HISTORYDeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES_HISTORY
         */
        select?: GA_ANKETA_SCORES_HISTORYSelect<ExtArgs> | null
        /**
         * Filter which GA_ANKETA_SCORES_HISTORY to delete.
         */
        where: GA_ANKETA_SCORES_HISTORYWhereUniqueInput
    }

    /**
     * GA_ANKETA_SCORES_HISTORY deleteMany
     */
    export type GA_ANKETA_SCORES_HISTORYDeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_SCORES_HISTORIES to delete
         */
        where?: GA_ANKETA_SCORES_HISTORYWhereInput
    }

    /**
     * GA_ANKETA_SCORES_HISTORY without action
     */
    export type GA_ANKETA_SCORES_HISTORYDefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SCORES_HISTORY
         */
        select?: GA_ANKETA_SCORES_HISTORYSelect<ExtArgs> | null
    }

    /**
     * Model GA_ANKETA_SOREVNOVANIE
     */

    export type AggregateGA_ANKETA_SOREVNOVANIE = {
        _count: GA_ANKETA_SOREVNOVANIECountAggregateOutputType | null
        _avg: GA_ANKETA_SOREVNOVANIEAvgAggregateOutputType | null
        _sum: GA_ANKETA_SOREVNOVANIESumAggregateOutputType | null
        _min: GA_ANKETA_SOREVNOVANIEMinAggregateOutputType | null
        _max: GA_ANKETA_SOREVNOVANIEMaxAggregateOutputType | null
    }

    export type GA_ANKETA_SOREVNOVANIEAvgAggregateOutputType = {
        ASR_YEAR: number | null
        ASR_MONTH: number | null
        ASR_WSU_ID: number | null
        ASR_SCORE: number | null
    }

    export type GA_ANKETA_SOREVNOVANIESumAggregateOutputType = {
        ASR_YEAR: number | null
        ASR_MONTH: number | null
        ASR_WSU_ID: bigint | null
        ASR_SCORE: number | null
    }

    export type GA_ANKETA_SOREVNOVANIEMinAggregateOutputType = {
        ASR_YEAR: number | null
        ASR_MONTH: number | null
        ASR_WSU_ID: bigint | null
        ASR_LOGIN: string | null
        ASR_FIO: string | null
        ASR_SCORE: number | null
        ASR_DOLJNOST: string | null
        ASR_RUKOVODITEL: boolean | null
    }

    export type GA_ANKETA_SOREVNOVANIEMaxAggregateOutputType = {
        ASR_YEAR: number | null
        ASR_MONTH: number | null
        ASR_WSU_ID: bigint | null
        ASR_LOGIN: string | null
        ASR_FIO: string | null
        ASR_SCORE: number | null
        ASR_DOLJNOST: string | null
        ASR_RUKOVODITEL: boolean | null
    }

    export type GA_ANKETA_SOREVNOVANIECountAggregateOutputType = {
        ASR_YEAR: number
        ASR_MONTH: number
        ASR_WSU_ID: number
        ASR_LOGIN: number
        ASR_FIO: number
        ASR_SCORE: number
        ASR_DOLJNOST: number
        ASR_RUKOVODITEL: number
        _all: number
    }

    export type GA_ANKETA_SOREVNOVANIEAvgAggregateInputType = {
        ASR_YEAR?: true
        ASR_MONTH?: true
        ASR_WSU_ID?: true
        ASR_SCORE?: true
    }

    export type GA_ANKETA_SOREVNOVANIESumAggregateInputType = {
        ASR_YEAR?: true
        ASR_MONTH?: true
        ASR_WSU_ID?: true
        ASR_SCORE?: true
    }

    export type GA_ANKETA_SOREVNOVANIEMinAggregateInputType = {
        ASR_YEAR?: true
        ASR_MONTH?: true
        ASR_WSU_ID?: true
        ASR_LOGIN?: true
        ASR_FIO?: true
        ASR_SCORE?: true
        ASR_DOLJNOST?: true
        ASR_RUKOVODITEL?: true
    }

    export type GA_ANKETA_SOREVNOVANIEMaxAggregateInputType = {
        ASR_YEAR?: true
        ASR_MONTH?: true
        ASR_WSU_ID?: true
        ASR_LOGIN?: true
        ASR_FIO?: true
        ASR_SCORE?: true
        ASR_DOLJNOST?: true
        ASR_RUKOVODITEL?: true
    }

    export type GA_ANKETA_SOREVNOVANIECountAggregateInputType = {
        ASR_YEAR?: true
        ASR_MONTH?: true
        ASR_WSU_ID?: true
        ASR_LOGIN?: true
        ASR_FIO?: true
        ASR_SCORE?: true
        ASR_DOLJNOST?: true
        ASR_RUKOVODITEL?: true
        _all?: true
    }

    export type GA_ANKETA_SOREVNOVANIEAggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_SOREVNOVANIE to aggregate.
         */
        where?: GA_ANKETA_SOREVNOVANIEWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_SOREVNOVANIES to fetch.
         */
        orderBy?:
            | GA_ANKETA_SOREVNOVANIEOrderByWithRelationInput
            | GA_ANKETA_SOREVNOVANIEOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_ANKETA_SOREVNOVANIEWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_SOREVNOVANIES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_SOREVNOVANIES.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_ANKETA_SOREVNOVANIES
         **/
        _count?: true | GA_ANKETA_SOREVNOVANIECountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_ANKETA_SOREVNOVANIEAvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_ANKETA_SOREVNOVANIESumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_ANKETA_SOREVNOVANIEMinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_ANKETA_SOREVNOVANIEMaxAggregateInputType
    }

    export type GetGA_ANKETA_SOREVNOVANIEAggregateType<
        T extends GA_ANKETA_SOREVNOVANIEAggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_ANKETA_SOREVNOVANIE]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_ANKETA_SOREVNOVANIE[P]>
            : GetScalarType<T[P], AggregateGA_ANKETA_SOREVNOVANIE[P]>
    }

    export type GA_ANKETA_SOREVNOVANIEGroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_ANKETA_SOREVNOVANIEWhereInput
        orderBy?:
            | GA_ANKETA_SOREVNOVANIEOrderByWithAggregationInput
            | GA_ANKETA_SOREVNOVANIEOrderByWithAggregationInput[]
        by:
            | GA_ANKETA_SOREVNOVANIEScalarFieldEnum[]
            | GA_ANKETA_SOREVNOVANIEScalarFieldEnum
        having?: GA_ANKETA_SOREVNOVANIEScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_ANKETA_SOREVNOVANIECountAggregateInputType | true
        _avg?: GA_ANKETA_SOREVNOVANIEAvgAggregateInputType
        _sum?: GA_ANKETA_SOREVNOVANIESumAggregateInputType
        _min?: GA_ANKETA_SOREVNOVANIEMinAggregateInputType
        _max?: GA_ANKETA_SOREVNOVANIEMaxAggregateInputType
    }

    export type GA_ANKETA_SOREVNOVANIEGroupByOutputType = {
        ASR_YEAR: number
        ASR_MONTH: number
        ASR_WSU_ID: bigint
        ASR_LOGIN: string
        ASR_FIO: string
        ASR_SCORE: number
        ASR_DOLJNOST: string
        ASR_RUKOVODITEL: boolean
        _count: GA_ANKETA_SOREVNOVANIECountAggregateOutputType | null
        _avg: GA_ANKETA_SOREVNOVANIEAvgAggregateOutputType | null
        _sum: GA_ANKETA_SOREVNOVANIESumAggregateOutputType | null
        _min: GA_ANKETA_SOREVNOVANIEMinAggregateOutputType | null
        _max: GA_ANKETA_SOREVNOVANIEMaxAggregateOutputType | null
    }

    type GetGA_ANKETA_SOREVNOVANIEGroupByPayload<
        T extends GA_ANKETA_SOREVNOVANIEGroupByArgs,
    > = Prisma.PrismaPromise<
        Array<
            PickEnumerable<GA_ANKETA_SOREVNOVANIEGroupByOutputType, T['by']> & {
                [P in keyof T &
                    keyof GA_ANKETA_SOREVNOVANIEGroupByOutputType]: P extends '_count'
                    ? T[P] extends boolean
                        ? number
                        : GetScalarType<
                              T[P],
                              GA_ANKETA_SOREVNOVANIEGroupByOutputType[P]
                          >
                    : GetScalarType<
                          T[P],
                          GA_ANKETA_SOREVNOVANIEGroupByOutputType[P]
                      >
            }
        >
    >

    export type GA_ANKETA_SOREVNOVANIESelect<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            ASR_YEAR?: boolean
            ASR_MONTH?: boolean
            ASR_WSU_ID?: boolean
            ASR_LOGIN?: boolean
            ASR_FIO?: boolean
            ASR_SCORE?: boolean
            ASR_DOLJNOST?: boolean
            ASR_RUKOVODITEL?: boolean
        },
        ExtArgs['result']['gA_ANKETA_SOREVNOVANIE']
    >

    export type GA_ANKETA_SOREVNOVANIESelectScalar = {
        ASR_YEAR?: boolean
        ASR_MONTH?: boolean
        ASR_WSU_ID?: boolean
        ASR_LOGIN?: boolean
        ASR_FIO?: boolean
        ASR_SCORE?: boolean
        ASR_DOLJNOST?: boolean
        ASR_RUKOVODITEL?: boolean
    }

    export type $GA_ANKETA_SOREVNOVANIEPayload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_ANKETA_SOREVNOVANIE'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                ASR_YEAR: number
                ASR_MONTH: number
                ASR_WSU_ID: bigint
                ASR_LOGIN: string
                ASR_FIO: string
                ASR_SCORE: number
                ASR_DOLJNOST: string
                ASR_RUKOVODITEL: boolean
            },
            ExtArgs['result']['gA_ANKETA_SOREVNOVANIE']
        >
        composites: {}
    }

    type GA_ANKETA_SOREVNOVANIEGetPayload<
        S extends
            | boolean
            | null
            | undefined
            | GA_ANKETA_SOREVNOVANIEDefaultArgs,
    > = $Result.GetResult<Prisma.$GA_ANKETA_SOREVNOVANIEPayload, S>

    type GA_ANKETA_SOREVNOVANIECountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<
        GA_ANKETA_SOREVNOVANIEFindManyArgs,
        'select' | 'include' | 'distinct'
    > & {
        select?: GA_ANKETA_SOREVNOVANIECountAggregateInputType | true
    }

    export interface GA_ANKETA_SOREVNOVANIEDelegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_ANKETA_SOREVNOVANIE']
            meta: { name: 'GA_ANKETA_SOREVNOVANIE' }
        }
        /**
         * Find zero or one GA_ANKETA_SOREVNOVANIE that matches the filter.
         * @param {GA_ANKETA_SOREVNOVANIEFindUniqueArgs} args - Arguments to find a GA_ANKETA_SOREVNOVANIE
         * @example
         * // Get one GA_ANKETA_SOREVNOVANIE
         * const gA_ANKETA_SOREVNOVANIE = await prisma.gA_ANKETA_SOREVNOVANIE.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_ANKETA_SOREVNOVANIEFindUniqueArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SOREVNOVANIEFindUniqueArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SOREVNOVANIEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SOREVNOVANIEPayload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_ANKETA_SOREVNOVANIE that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_ANKETA_SOREVNOVANIEFindUniqueOrThrowArgs} args - Arguments to find a GA_ANKETA_SOREVNOVANIE
         * @example
         * // Get one GA_ANKETA_SOREVNOVANIE
         * const gA_ANKETA_SOREVNOVANIE = await prisma.gA_ANKETA_SOREVNOVANIE.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_ANKETA_SOREVNOVANIEFindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_SOREVNOVANIEFindUniqueOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_SOREVNOVANIEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SOREVNOVANIEPayload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_SOREVNOVANIE that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SOREVNOVANIEFindFirstArgs} args - Arguments to find a GA_ANKETA_SOREVNOVANIE
         * @example
         * // Get one GA_ANKETA_SOREVNOVANIE
         * const gA_ANKETA_SOREVNOVANIE = await prisma.gA_ANKETA_SOREVNOVANIE.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_ANKETA_SOREVNOVANIEFindFirstArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_SOREVNOVANIEFindFirstArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SOREVNOVANIEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SOREVNOVANIEPayload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_ANKETA_SOREVNOVANIE that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SOREVNOVANIEFindFirstOrThrowArgs} args - Arguments to find a GA_ANKETA_SOREVNOVANIE
         * @example
         * // Get one GA_ANKETA_SOREVNOVANIE
         * const gA_ANKETA_SOREVNOVANIE = await prisma.gA_ANKETA_SOREVNOVANIE.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<
            T extends GA_ANKETA_SOREVNOVANIEFindFirstOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_ANKETA_SOREVNOVANIEFindFirstOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_ANKETA_SOREVNOVANIEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SOREVNOVANIEPayload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_ANKETA_SOREVNOVANIES that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SOREVNOVANIEFindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_ANKETA_SOREVNOVANIES
         * const gA_ANKETA_SOREVNOVANIES = await prisma.gA_ANKETA_SOREVNOVANIE.findMany()
         *
         * // Get first 10 GA_ANKETA_SOREVNOVANIES
         * const gA_ANKETA_SOREVNOVANIES = await prisma.gA_ANKETA_SOREVNOVANIE.findMany({ take: 10 })
         *
         * // Only select the `ASR_YEAR`
         * const gA_ANKETA_SOREVNOVANIEWithASR_YEAROnly = await prisma.gA_ANKETA_SOREVNOVANIE.findMany({ select: { ASR_YEAR: true } })
         *
         **/
        findMany<T extends GA_ANKETA_SOREVNOVANIEFindManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_ANKETA_SOREVNOVANIEFindManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SOREVNOVANIEPayload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_ANKETA_SOREVNOVANIE.
         * @param {GA_ANKETA_SOREVNOVANIECreateArgs} args - Arguments to create a GA_ANKETA_SOREVNOVANIE.
         * @example
         * // Create one GA_ANKETA_SOREVNOVANIE
         * const GA_ANKETA_SOREVNOVANIE = await prisma.gA_ANKETA_SOREVNOVANIE.create({
         *   data: {
         *     // ... data to create a GA_ANKETA_SOREVNOVANIE
         *   }
         * })
         *
         **/
        create<T extends GA_ANKETA_SOREVNOVANIECreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SOREVNOVANIECreateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SOREVNOVANIEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SOREVNOVANIEPayload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_ANKETA_SOREVNOVANIES.
         *     @param {GA_ANKETA_SOREVNOVANIECreateManyArgs} args - Arguments to create many GA_ANKETA_SOREVNOVANIES.
         *     @example
         *     // Create many GA_ANKETA_SOREVNOVANIES
         *     const gA_ANKETA_SOREVNOVANIE = await prisma.gA_ANKETA_SOREVNOVANIE.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_ANKETA_SOREVNOVANIECreateManyArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_SOREVNOVANIECreateManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_ANKETA_SOREVNOVANIE.
         * @param {GA_ANKETA_SOREVNOVANIEDeleteArgs} args - Arguments to delete one GA_ANKETA_SOREVNOVANIE.
         * @example
         * // Delete one GA_ANKETA_SOREVNOVANIE
         * const GA_ANKETA_SOREVNOVANIE = await prisma.gA_ANKETA_SOREVNOVANIE.delete({
         *   where: {
         *     // ... filter to delete one GA_ANKETA_SOREVNOVANIE
         *   }
         * })
         *
         **/
        delete<T extends GA_ANKETA_SOREVNOVANIEDeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SOREVNOVANIEDeleteArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SOREVNOVANIEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SOREVNOVANIEPayload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_ANKETA_SOREVNOVANIE.
         * @param {GA_ANKETA_SOREVNOVANIEUpdateArgs} args - Arguments to update one GA_ANKETA_SOREVNOVANIE.
         * @example
         * // Update one GA_ANKETA_SOREVNOVANIE
         * const gA_ANKETA_SOREVNOVANIE = await prisma.gA_ANKETA_SOREVNOVANIE.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_ANKETA_SOREVNOVANIEUpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SOREVNOVANIEUpdateArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SOREVNOVANIEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SOREVNOVANIEPayload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_ANKETA_SOREVNOVANIES.
         * @param {GA_ANKETA_SOREVNOVANIEDeleteManyArgs} args - Arguments to filter GA_ANKETA_SOREVNOVANIES to delete.
         * @example
         * // Delete a few GA_ANKETA_SOREVNOVANIES
         * const { count } = await prisma.gA_ANKETA_SOREVNOVANIE.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_ANKETA_SOREVNOVANIEDeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<
                T,
                GA_ANKETA_SOREVNOVANIEDeleteManyArgs<ExtArgs>
            >
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_ANKETA_SOREVNOVANIES.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SOREVNOVANIEUpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_ANKETA_SOREVNOVANIES
         * const gA_ANKETA_SOREVNOVANIE = await prisma.gA_ANKETA_SOREVNOVANIE.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_ANKETA_SOREVNOVANIEUpdateManyArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SOREVNOVANIEUpdateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_ANKETA_SOREVNOVANIE.
         * @param {GA_ANKETA_SOREVNOVANIEUpsertArgs} args - Arguments to update or create a GA_ANKETA_SOREVNOVANIE.
         * @example
         * // Update or create a GA_ANKETA_SOREVNOVANIE
         * const gA_ANKETA_SOREVNOVANIE = await prisma.gA_ANKETA_SOREVNOVANIE.upsert({
         *   create: {
         *     // ... data to create a GA_ANKETA_SOREVNOVANIE
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_ANKETA_SOREVNOVANIE we want to update
         *   }
         * })
         **/
        upsert<T extends GA_ANKETA_SOREVNOVANIEUpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_ANKETA_SOREVNOVANIEUpsertArgs<ExtArgs>>
        ): Prisma__GA_ANKETA_SOREVNOVANIEClient<
            $Result.GetResult<
                Prisma.$GA_ANKETA_SOREVNOVANIEPayload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_ANKETA_SOREVNOVANIES.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SOREVNOVANIECountArgs} args - Arguments to filter GA_ANKETA_SOREVNOVANIES to count.
         * @example
         * // Count the number of GA_ANKETA_SOREVNOVANIES
         * const count = await prisma.gA_ANKETA_SOREVNOVANIE.count({
         *   where: {
         *     // ... the filter for the GA_ANKETA_SOREVNOVANIES we want to count
         *   }
         * })
         **/
        count<T extends GA_ANKETA_SOREVNOVANIECountArgs>(
            args?: Subset<T, GA_ANKETA_SOREVNOVANIECountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_ANKETA_SOREVNOVANIECountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_ANKETA_SOREVNOVANIE.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SOREVNOVANIEAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_ANKETA_SOREVNOVANIEAggregateArgs>(
            args: Subset<T, GA_ANKETA_SOREVNOVANIEAggregateArgs>
        ): Prisma.PrismaPromise<GetGA_ANKETA_SOREVNOVANIEAggregateType<T>>

        /**
         * Group by GA_ANKETA_SOREVNOVANIE.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_ANKETA_SOREVNOVANIEGroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_ANKETA_SOREVNOVANIEGroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_ANKETA_SOREVNOVANIEGroupByArgs['orderBy'] }
                : { orderBy?: GA_ANKETA_SOREVNOVANIEGroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<
                T,
                GA_ANKETA_SOREVNOVANIEGroupByArgs,
                OrderByArg
            > &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_ANKETA_SOREVNOVANIEGroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_ANKETA_SOREVNOVANIE model
         */
        readonly fields: GA_ANKETA_SOREVNOVANIEFieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_ANKETA_SOREVNOVANIE.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_ANKETA_SOREVNOVANIEClient<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_ANKETA_SOREVNOVANIE model
     */
    interface GA_ANKETA_SOREVNOVANIEFieldRefs {
        readonly ASR_YEAR: FieldRef<'GA_ANKETA_SOREVNOVANIE', 'Int'>
        readonly ASR_MONTH: FieldRef<'GA_ANKETA_SOREVNOVANIE', 'Int'>
        readonly ASR_WSU_ID: FieldRef<'GA_ANKETA_SOREVNOVANIE', 'BigInt'>
        readonly ASR_LOGIN: FieldRef<'GA_ANKETA_SOREVNOVANIE', 'String'>
        readonly ASR_FIO: FieldRef<'GA_ANKETA_SOREVNOVANIE', 'String'>
        readonly ASR_SCORE: FieldRef<'GA_ANKETA_SOREVNOVANIE', 'Int'>
        readonly ASR_DOLJNOST: FieldRef<'GA_ANKETA_SOREVNOVANIE', 'String'>
        readonly ASR_RUKOVODITEL: FieldRef<'GA_ANKETA_SOREVNOVANIE', 'Boolean'>
    }

    // Custom InputTypes

    /**
     * GA_ANKETA_SOREVNOVANIE findUnique
     */
    export type GA_ANKETA_SOREVNOVANIEFindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SOREVNOVANIE
         */
        select?: GA_ANKETA_SOREVNOVANIESelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_SOREVNOVANIE to fetch.
         */
        where: GA_ANKETA_SOREVNOVANIEWhereUniqueInput
    }

    /**
     * GA_ANKETA_SOREVNOVANIE findUniqueOrThrow
     */
    export type GA_ANKETA_SOREVNOVANIEFindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SOREVNOVANIE
         */
        select?: GA_ANKETA_SOREVNOVANIESelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_SOREVNOVANIE to fetch.
         */
        where: GA_ANKETA_SOREVNOVANIEWhereUniqueInput
    }

    /**
     * GA_ANKETA_SOREVNOVANIE findFirst
     */
    export type GA_ANKETA_SOREVNOVANIEFindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SOREVNOVANIE
         */
        select?: GA_ANKETA_SOREVNOVANIESelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_SOREVNOVANIE to fetch.
         */
        where?: GA_ANKETA_SOREVNOVANIEWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_SOREVNOVANIES to fetch.
         */
        orderBy?:
            | GA_ANKETA_SOREVNOVANIEOrderByWithRelationInput
            | GA_ANKETA_SOREVNOVANIEOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_SOREVNOVANIES.
         */
        cursor?: GA_ANKETA_SOREVNOVANIEWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_SOREVNOVANIES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_SOREVNOVANIES.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_SOREVNOVANIES.
         */
        distinct?:
            | GA_ANKETA_SOREVNOVANIEScalarFieldEnum
            | GA_ANKETA_SOREVNOVANIEScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_SOREVNOVANIE findFirstOrThrow
     */
    export type GA_ANKETA_SOREVNOVANIEFindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SOREVNOVANIE
         */
        select?: GA_ANKETA_SOREVNOVANIESelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_SOREVNOVANIE to fetch.
         */
        where?: GA_ANKETA_SOREVNOVANIEWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_SOREVNOVANIES to fetch.
         */
        orderBy?:
            | GA_ANKETA_SOREVNOVANIEOrderByWithRelationInput
            | GA_ANKETA_SOREVNOVANIEOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_ANKETA_SOREVNOVANIES.
         */
        cursor?: GA_ANKETA_SOREVNOVANIEWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_SOREVNOVANIES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_SOREVNOVANIES.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_ANKETA_SOREVNOVANIES.
         */
        distinct?:
            | GA_ANKETA_SOREVNOVANIEScalarFieldEnum
            | GA_ANKETA_SOREVNOVANIEScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_SOREVNOVANIE findMany
     */
    export type GA_ANKETA_SOREVNOVANIEFindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SOREVNOVANIE
         */
        select?: GA_ANKETA_SOREVNOVANIESelect<ExtArgs> | null
        /**
         * Filter, which GA_ANKETA_SOREVNOVANIES to fetch.
         */
        where?: GA_ANKETA_SOREVNOVANIEWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_ANKETA_SOREVNOVANIES to fetch.
         */
        orderBy?:
            | GA_ANKETA_SOREVNOVANIEOrderByWithRelationInput
            | GA_ANKETA_SOREVNOVANIEOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_ANKETA_SOREVNOVANIES.
         */
        cursor?: GA_ANKETA_SOREVNOVANIEWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_ANKETA_SOREVNOVANIES from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_ANKETA_SOREVNOVANIES.
         */
        skip?: number
        distinct?:
            | GA_ANKETA_SOREVNOVANIEScalarFieldEnum
            | GA_ANKETA_SOREVNOVANIEScalarFieldEnum[]
    }

    /**
     * GA_ANKETA_SOREVNOVANIE create
     */
    export type GA_ANKETA_SOREVNOVANIECreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SOREVNOVANIE
         */
        select?: GA_ANKETA_SOREVNOVANIESelect<ExtArgs> | null
        /**
         * The data needed to create a GA_ANKETA_SOREVNOVANIE.
         */
        data: XOR<
            GA_ANKETA_SOREVNOVANIECreateInput,
            GA_ANKETA_SOREVNOVANIEUncheckedCreateInput
        >
    }

    /**
     * GA_ANKETA_SOREVNOVANIE createMany
     */
    export type GA_ANKETA_SOREVNOVANIECreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_ANKETA_SOREVNOVANIES.
         */
        data:
            | GA_ANKETA_SOREVNOVANIECreateManyInput
            | GA_ANKETA_SOREVNOVANIECreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_ANKETA_SOREVNOVANIE update
     */
    export type GA_ANKETA_SOREVNOVANIEUpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SOREVNOVANIE
         */
        select?: GA_ANKETA_SOREVNOVANIESelect<ExtArgs> | null
        /**
         * The data needed to update a GA_ANKETA_SOREVNOVANIE.
         */
        data: XOR<
            GA_ANKETA_SOREVNOVANIEUpdateInput,
            GA_ANKETA_SOREVNOVANIEUncheckedUpdateInput
        >
        /**
         * Choose, which GA_ANKETA_SOREVNOVANIE to update.
         */
        where: GA_ANKETA_SOREVNOVANIEWhereUniqueInput
    }

    /**
     * GA_ANKETA_SOREVNOVANIE updateMany
     */
    export type GA_ANKETA_SOREVNOVANIEUpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_ANKETA_SOREVNOVANIES.
         */
        data: XOR<
            GA_ANKETA_SOREVNOVANIEUpdateManyMutationInput,
            GA_ANKETA_SOREVNOVANIEUncheckedUpdateManyInput
        >
        /**
         * Filter which GA_ANKETA_SOREVNOVANIES to update
         */
        where?: GA_ANKETA_SOREVNOVANIEWhereInput
    }

    /**
     * GA_ANKETA_SOREVNOVANIE upsert
     */
    export type GA_ANKETA_SOREVNOVANIEUpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SOREVNOVANIE
         */
        select?: GA_ANKETA_SOREVNOVANIESelect<ExtArgs> | null
        /**
         * The filter to search for the GA_ANKETA_SOREVNOVANIE to update in case it exists.
         */
        where: GA_ANKETA_SOREVNOVANIEWhereUniqueInput
        /**
         * In case the GA_ANKETA_SOREVNOVANIE found by the `where` argument doesn't exist, create a new GA_ANKETA_SOREVNOVANIE with this data.
         */
        create: XOR<
            GA_ANKETA_SOREVNOVANIECreateInput,
            GA_ANKETA_SOREVNOVANIEUncheckedCreateInput
        >
        /**
         * In case the GA_ANKETA_SOREVNOVANIE was found with the provided `where` argument, update it with this data.
         */
        update: XOR<
            GA_ANKETA_SOREVNOVANIEUpdateInput,
            GA_ANKETA_SOREVNOVANIEUncheckedUpdateInput
        >
    }

    /**
     * GA_ANKETA_SOREVNOVANIE delete
     */
    export type GA_ANKETA_SOREVNOVANIEDeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SOREVNOVANIE
         */
        select?: GA_ANKETA_SOREVNOVANIESelect<ExtArgs> | null
        /**
         * Filter which GA_ANKETA_SOREVNOVANIE to delete.
         */
        where: GA_ANKETA_SOREVNOVANIEWhereUniqueInput
    }

    /**
     * GA_ANKETA_SOREVNOVANIE deleteMany
     */
    export type GA_ANKETA_SOREVNOVANIEDeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_ANKETA_SOREVNOVANIES to delete
         */
        where?: GA_ANKETA_SOREVNOVANIEWhereInput
    }

    /**
     * GA_ANKETA_SOREVNOVANIE without action
     */
    export type GA_ANKETA_SOREVNOVANIEDefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_ANKETA_SOREVNOVANIE
         */
        select?: GA_ANKETA_SOREVNOVANIESelect<ExtArgs> | null
    }

    /**
     * Model GA_SUP_50012_SELLOUT
     */

    export type AggregateGA_SUP_50012_SELLOUT = {
        _count: GA_SUP_50012_SELLOUTCountAggregateOutputType | null
        _avg: GA_SUP_50012_SELLOUTAvgAggregateOutputType | null
        _sum: GA_SUP_50012_SELLOUTSumAggregateOutputType | null
        _min: GA_SUP_50012_SELLOUTMinAggregateOutputType | null
        _max: GA_SUP_50012_SELLOUTMaxAggregateOutputType | null
    }

    export type GA_SUP_50012_SELLOUTAvgAggregateOutputType = {
        SPR_SPH_ID: number | null
        SPR_QTY: number | null
        SPR_PRICE: number | null
        SPR_SUMMA: number | null
        SPR_ART_ID: number | null
    }

    export type GA_SUP_50012_SELLOUTSumAggregateOutputType = {
        SPR_SPH_ID: number | null
        SPR_QTY: number | null
        SPR_PRICE: number | null
        SPR_SUMMA: number | null
        SPR_ART_ID: number | null
    }

    export type GA_SUP_50012_SELLOUTMinAggregateOutputType = {
        SPR_SPH_ID: number | null
        SPR_INN: string | null
        SPR_CLIENT: string | null
        SPR_GROUPTYPE: string | null
        SPR_ARTICLE: string | null
        SPR_BRAND: string | null
        SPR_INFO: string | null
        SPR_QTY: number | null
        SPR_PRICE: number | null
        SPR_SUMMA: number | null
        SPR_ART_ID: number | null
        SPR_DATETIME: Date | null
        SPR_ADDR: string | null
        SPR_CLIENT_CODE: string | null
        SPR_CLIENT_ID: string | null
        SPR_CLIENT_CODE2: string | null
        SPR_ADDR_ENC: string | null
    }

    export type GA_SUP_50012_SELLOUTMaxAggregateOutputType = {
        SPR_SPH_ID: number | null
        SPR_INN: string | null
        SPR_CLIENT: string | null
        SPR_GROUPTYPE: string | null
        SPR_ARTICLE: string | null
        SPR_BRAND: string | null
        SPR_INFO: string | null
        SPR_QTY: number | null
        SPR_PRICE: number | null
        SPR_SUMMA: number | null
        SPR_ART_ID: number | null
        SPR_DATETIME: Date | null
        SPR_ADDR: string | null
        SPR_CLIENT_CODE: string | null
        SPR_CLIENT_ID: string | null
        SPR_CLIENT_CODE2: string | null
        SPR_ADDR_ENC: string | null
    }

    export type GA_SUP_50012_SELLOUTCountAggregateOutputType = {
        SPR_SPH_ID: number
        SPR_INN: number
        SPR_CLIENT: number
        SPR_GROUPTYPE: number
        SPR_ARTICLE: number
        SPR_BRAND: number
        SPR_INFO: number
        SPR_QTY: number
        SPR_PRICE: number
        SPR_SUMMA: number
        SPR_ART_ID: number
        SPR_DATETIME: number
        SPR_ADDR: number
        SPR_CLIENT_CODE: number
        SPR_CLIENT_ID: number
        SPR_CLIENT_CODE2: number
        SPR_ADDR_ENC: number
        _all: number
    }

    export type GA_SUP_50012_SELLOUTAvgAggregateInputType = {
        SPR_SPH_ID?: true
        SPR_QTY?: true
        SPR_PRICE?: true
        SPR_SUMMA?: true
        SPR_ART_ID?: true
    }

    export type GA_SUP_50012_SELLOUTSumAggregateInputType = {
        SPR_SPH_ID?: true
        SPR_QTY?: true
        SPR_PRICE?: true
        SPR_SUMMA?: true
        SPR_ART_ID?: true
    }

    export type GA_SUP_50012_SELLOUTMinAggregateInputType = {
        SPR_SPH_ID?: true
        SPR_INN?: true
        SPR_CLIENT?: true
        SPR_GROUPTYPE?: true
        SPR_ARTICLE?: true
        SPR_BRAND?: true
        SPR_INFO?: true
        SPR_QTY?: true
        SPR_PRICE?: true
        SPR_SUMMA?: true
        SPR_ART_ID?: true
        SPR_DATETIME?: true
        SPR_ADDR?: true
        SPR_CLIENT_CODE?: true
        SPR_CLIENT_ID?: true
        SPR_CLIENT_CODE2?: true
        SPR_ADDR_ENC?: true
    }

    export type GA_SUP_50012_SELLOUTMaxAggregateInputType = {
        SPR_SPH_ID?: true
        SPR_INN?: true
        SPR_CLIENT?: true
        SPR_GROUPTYPE?: true
        SPR_ARTICLE?: true
        SPR_BRAND?: true
        SPR_INFO?: true
        SPR_QTY?: true
        SPR_PRICE?: true
        SPR_SUMMA?: true
        SPR_ART_ID?: true
        SPR_DATETIME?: true
        SPR_ADDR?: true
        SPR_CLIENT_CODE?: true
        SPR_CLIENT_ID?: true
        SPR_CLIENT_CODE2?: true
        SPR_ADDR_ENC?: true
    }

    export type GA_SUP_50012_SELLOUTCountAggregateInputType = {
        SPR_SPH_ID?: true
        SPR_INN?: true
        SPR_CLIENT?: true
        SPR_GROUPTYPE?: true
        SPR_ARTICLE?: true
        SPR_BRAND?: true
        SPR_INFO?: true
        SPR_QTY?: true
        SPR_PRICE?: true
        SPR_SUMMA?: true
        SPR_ART_ID?: true
        SPR_DATETIME?: true
        SPR_ADDR?: true
        SPR_CLIENT_CODE?: true
        SPR_CLIENT_ID?: true
        SPR_CLIENT_CODE2?: true
        SPR_ADDR_ENC?: true
        _all?: true
    }

    export type GA_SUP_50012_SELLOUTAggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_SUP_50012_SELLOUT to aggregate.
         */
        where?: GA_SUP_50012_SELLOUTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_SUP_50012_SELLOUTS to fetch.
         */
        orderBy?:
            | GA_SUP_50012_SELLOUTOrderByWithRelationInput
            | GA_SUP_50012_SELLOUTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_SUP_50012_SELLOUTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_SUP_50012_SELLOUTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_SUP_50012_SELLOUTS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_SUP_50012_SELLOUTS
         **/
        _count?: true | GA_SUP_50012_SELLOUTCountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_SUP_50012_SELLOUTAvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_SUP_50012_SELLOUTSumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_SUP_50012_SELLOUTMinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_SUP_50012_SELLOUTMaxAggregateInputType
    }

    export type GetGA_SUP_50012_SELLOUTAggregateType<
        T extends GA_SUP_50012_SELLOUTAggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_SUP_50012_SELLOUT]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_SUP_50012_SELLOUT[P]>
            : GetScalarType<T[P], AggregateGA_SUP_50012_SELLOUT[P]>
    }

    export type GA_SUP_50012_SELLOUTGroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_SUP_50012_SELLOUTWhereInput
        orderBy?:
            | GA_SUP_50012_SELLOUTOrderByWithAggregationInput
            | GA_SUP_50012_SELLOUTOrderByWithAggregationInput[]
        by:
            | GA_SUP_50012_SELLOUTScalarFieldEnum[]
            | GA_SUP_50012_SELLOUTScalarFieldEnum
        having?: GA_SUP_50012_SELLOUTScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_SUP_50012_SELLOUTCountAggregateInputType | true
        _avg?: GA_SUP_50012_SELLOUTAvgAggregateInputType
        _sum?: GA_SUP_50012_SELLOUTSumAggregateInputType
        _min?: GA_SUP_50012_SELLOUTMinAggregateInputType
        _max?: GA_SUP_50012_SELLOUTMaxAggregateInputType
    }

    export type GA_SUP_50012_SELLOUTGroupByOutputType = {
        SPR_SPH_ID: number
        SPR_INN: string
        SPR_CLIENT: string
        SPR_GROUPTYPE: string
        SPR_ARTICLE: string
        SPR_BRAND: string
        SPR_INFO: string
        SPR_QTY: number
        SPR_PRICE: number
        SPR_SUMMA: number
        SPR_ART_ID: number
        SPR_DATETIME: Date
        SPR_ADDR: string
        SPR_CLIENT_CODE: string
        SPR_CLIENT_ID: string
        SPR_CLIENT_CODE2: string
        SPR_ADDR_ENC: string
        _count: GA_SUP_50012_SELLOUTCountAggregateOutputType | null
        _avg: GA_SUP_50012_SELLOUTAvgAggregateOutputType | null
        _sum: GA_SUP_50012_SELLOUTSumAggregateOutputType | null
        _min: GA_SUP_50012_SELLOUTMinAggregateOutputType | null
        _max: GA_SUP_50012_SELLOUTMaxAggregateOutputType | null
    }

    type GetGA_SUP_50012_SELLOUTGroupByPayload<
        T extends GA_SUP_50012_SELLOUTGroupByArgs,
    > = Prisma.PrismaPromise<
        Array<
            PickEnumerable<GA_SUP_50012_SELLOUTGroupByOutputType, T['by']> & {
                [P in keyof T &
                    keyof GA_SUP_50012_SELLOUTGroupByOutputType]: P extends '_count'
                    ? T[P] extends boolean
                        ? number
                        : GetScalarType<
                              T[P],
                              GA_SUP_50012_SELLOUTGroupByOutputType[P]
                          >
                    : GetScalarType<
                          T[P],
                          GA_SUP_50012_SELLOUTGroupByOutputType[P]
                      >
            }
        >
    >

    export type GA_SUP_50012_SELLOUTSelect<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            SPR_SPH_ID?: boolean
            SPR_INN?: boolean
            SPR_CLIENT?: boolean
            SPR_GROUPTYPE?: boolean
            SPR_ARTICLE?: boolean
            SPR_BRAND?: boolean
            SPR_INFO?: boolean
            SPR_QTY?: boolean
            SPR_PRICE?: boolean
            SPR_SUMMA?: boolean
            SPR_ART_ID?: boolean
            SPR_DATETIME?: boolean
            SPR_ADDR?: boolean
            SPR_CLIENT_CODE?: boolean
            SPR_CLIENT_ID?: boolean
            SPR_CLIENT_CODE2?: boolean
            SPR_ADDR_ENC?: boolean
        },
        ExtArgs['result']['gA_SUP_50012_SELLOUT']
    >

    export type GA_SUP_50012_SELLOUTSelectScalar = {
        SPR_SPH_ID?: boolean
        SPR_INN?: boolean
        SPR_CLIENT?: boolean
        SPR_GROUPTYPE?: boolean
        SPR_ARTICLE?: boolean
        SPR_BRAND?: boolean
        SPR_INFO?: boolean
        SPR_QTY?: boolean
        SPR_PRICE?: boolean
        SPR_SUMMA?: boolean
        SPR_ART_ID?: boolean
        SPR_DATETIME?: boolean
        SPR_ADDR?: boolean
        SPR_CLIENT_CODE?: boolean
        SPR_CLIENT_ID?: boolean
        SPR_CLIENT_CODE2?: boolean
        SPR_ADDR_ENC?: boolean
    }

    export type $GA_SUP_50012_SELLOUTPayload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_SUP_50012_SELLOUT'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                SPR_SPH_ID: number
                SPR_INN: string
                SPR_CLIENT: string
                SPR_GROUPTYPE: string
                SPR_ARTICLE: string
                SPR_BRAND: string
                SPR_INFO: string
                SPR_QTY: number
                SPR_PRICE: number
                SPR_SUMMA: number
                SPR_ART_ID: number
                SPR_DATETIME: Date
                SPR_ADDR: string
                SPR_CLIENT_CODE: string
                SPR_CLIENT_ID: string
                SPR_CLIENT_CODE2: string
                SPR_ADDR_ENC: string
            },
            ExtArgs['result']['gA_SUP_50012_SELLOUT']
        >
        composites: {}
    }

    type GA_SUP_50012_SELLOUTGetPayload<
        S extends boolean | null | undefined | GA_SUP_50012_SELLOUTDefaultArgs,
    > = $Result.GetResult<Prisma.$GA_SUP_50012_SELLOUTPayload, S>

    type GA_SUP_50012_SELLOUTCountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<
        GA_SUP_50012_SELLOUTFindManyArgs,
        'select' | 'include' | 'distinct'
    > & {
        select?: GA_SUP_50012_SELLOUTCountAggregateInputType | true
    }

    export interface GA_SUP_50012_SELLOUTDelegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_SUP_50012_SELLOUT']
            meta: { name: 'GA_SUP_50012_SELLOUT' }
        }
        /**
         * Find zero or one GA_SUP_50012_SELLOUT that matches the filter.
         * @param {GA_SUP_50012_SELLOUTFindUniqueArgs} args - Arguments to find a GA_SUP_50012_SELLOUT
         * @example
         * // Get one GA_SUP_50012_SELLOUT
         * const gA_SUP_50012_SELLOUT = await prisma.gA_SUP_50012_SELLOUT.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_SUP_50012_SELLOUTFindUniqueArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50012_SELLOUTFindUniqueArgs<ExtArgs>>
        ): Prisma__GA_SUP_50012_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50012_SELLOUTPayload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_SUP_50012_SELLOUT that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_SUP_50012_SELLOUTFindUniqueOrThrowArgs} args - Arguments to find a GA_SUP_50012_SELLOUT
         * @example
         * // Get one GA_SUP_50012_SELLOUT
         * const gA_SUP_50012_SELLOUT = await prisma.gA_SUP_50012_SELLOUT.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_SUP_50012_SELLOUTFindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_SUP_50012_SELLOUTFindUniqueOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_SUP_50012_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50012_SELLOUTPayload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_SUP_50012_SELLOUT that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50012_SELLOUTFindFirstArgs} args - Arguments to find a GA_SUP_50012_SELLOUT
         * @example
         * // Get one GA_SUP_50012_SELLOUT
         * const gA_SUP_50012_SELLOUT = await prisma.gA_SUP_50012_SELLOUT.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_SUP_50012_SELLOUTFindFirstArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_SUP_50012_SELLOUTFindFirstArgs<ExtArgs>>
        ): Prisma__GA_SUP_50012_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50012_SELLOUTPayload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_SUP_50012_SELLOUT that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50012_SELLOUTFindFirstOrThrowArgs} args - Arguments to find a GA_SUP_50012_SELLOUT
         * @example
         * // Get one GA_SUP_50012_SELLOUT
         * const gA_SUP_50012_SELLOUT = await prisma.gA_SUP_50012_SELLOUT.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<
            T extends GA_SUP_50012_SELLOUTFindFirstOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_SUP_50012_SELLOUTFindFirstOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_SUP_50012_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50012_SELLOUTPayload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_SUP_50012_SELLOUTS that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50012_SELLOUTFindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_SUP_50012_SELLOUTS
         * const gA_SUP_50012_SELLOUTS = await prisma.gA_SUP_50012_SELLOUT.findMany()
         *
         * // Get first 10 GA_SUP_50012_SELLOUTS
         * const gA_SUP_50012_SELLOUTS = await prisma.gA_SUP_50012_SELLOUT.findMany({ take: 10 })
         *
         * // Only select the `SPR_SPH_ID`
         * const gA_SUP_50012_SELLOUTWithSPR_SPH_IDOnly = await prisma.gA_SUP_50012_SELLOUT.findMany({ select: { SPR_SPH_ID: true } })
         *
         **/
        findMany<T extends GA_SUP_50012_SELLOUTFindManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_SUP_50012_SELLOUTFindManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_SUP_50012_SELLOUTPayload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_SUP_50012_SELLOUT.
         * @param {GA_SUP_50012_SELLOUTCreateArgs} args - Arguments to create a GA_SUP_50012_SELLOUT.
         * @example
         * // Create one GA_SUP_50012_SELLOUT
         * const GA_SUP_50012_SELLOUT = await prisma.gA_SUP_50012_SELLOUT.create({
         *   data: {
         *     // ... data to create a GA_SUP_50012_SELLOUT
         *   }
         * })
         *
         **/
        create<T extends GA_SUP_50012_SELLOUTCreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50012_SELLOUTCreateArgs<ExtArgs>>
        ): Prisma__GA_SUP_50012_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50012_SELLOUTPayload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_SUP_50012_SELLOUTS.
         *     @param {GA_SUP_50012_SELLOUTCreateManyArgs} args - Arguments to create many GA_SUP_50012_SELLOUTS.
         *     @example
         *     // Create many GA_SUP_50012_SELLOUTS
         *     const gA_SUP_50012_SELLOUT = await prisma.gA_SUP_50012_SELLOUT.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_SUP_50012_SELLOUTCreateManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_SUP_50012_SELLOUTCreateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_SUP_50012_SELLOUT.
         * @param {GA_SUP_50012_SELLOUTDeleteArgs} args - Arguments to delete one GA_SUP_50012_SELLOUT.
         * @example
         * // Delete one GA_SUP_50012_SELLOUT
         * const GA_SUP_50012_SELLOUT = await prisma.gA_SUP_50012_SELLOUT.delete({
         *   where: {
         *     // ... filter to delete one GA_SUP_50012_SELLOUT
         *   }
         * })
         *
         **/
        delete<T extends GA_SUP_50012_SELLOUTDeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50012_SELLOUTDeleteArgs<ExtArgs>>
        ): Prisma__GA_SUP_50012_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50012_SELLOUTPayload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_SUP_50012_SELLOUT.
         * @param {GA_SUP_50012_SELLOUTUpdateArgs} args - Arguments to update one GA_SUP_50012_SELLOUT.
         * @example
         * // Update one GA_SUP_50012_SELLOUT
         * const gA_SUP_50012_SELLOUT = await prisma.gA_SUP_50012_SELLOUT.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_SUP_50012_SELLOUTUpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50012_SELLOUTUpdateArgs<ExtArgs>>
        ): Prisma__GA_SUP_50012_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50012_SELLOUTPayload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_SUP_50012_SELLOUTS.
         * @param {GA_SUP_50012_SELLOUTDeleteManyArgs} args - Arguments to filter GA_SUP_50012_SELLOUTS to delete.
         * @example
         * // Delete a few GA_SUP_50012_SELLOUTS
         * const { count } = await prisma.gA_SUP_50012_SELLOUT.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_SUP_50012_SELLOUTDeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_SUP_50012_SELLOUTDeleteManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_SUP_50012_SELLOUTS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50012_SELLOUTUpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_SUP_50012_SELLOUTS
         * const gA_SUP_50012_SELLOUT = await prisma.gA_SUP_50012_SELLOUT.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_SUP_50012_SELLOUTUpdateManyArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50012_SELLOUTUpdateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_SUP_50012_SELLOUT.
         * @param {GA_SUP_50012_SELLOUTUpsertArgs} args - Arguments to update or create a GA_SUP_50012_SELLOUT.
         * @example
         * // Update or create a GA_SUP_50012_SELLOUT
         * const gA_SUP_50012_SELLOUT = await prisma.gA_SUP_50012_SELLOUT.upsert({
         *   create: {
         *     // ... data to create a GA_SUP_50012_SELLOUT
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_SUP_50012_SELLOUT we want to update
         *   }
         * })
         **/
        upsert<T extends GA_SUP_50012_SELLOUTUpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50012_SELLOUTUpsertArgs<ExtArgs>>
        ): Prisma__GA_SUP_50012_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50012_SELLOUTPayload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_SUP_50012_SELLOUTS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50012_SELLOUTCountArgs} args - Arguments to filter GA_SUP_50012_SELLOUTS to count.
         * @example
         * // Count the number of GA_SUP_50012_SELLOUTS
         * const count = await prisma.gA_SUP_50012_SELLOUT.count({
         *   where: {
         *     // ... the filter for the GA_SUP_50012_SELLOUTS we want to count
         *   }
         * })
         **/
        count<T extends GA_SUP_50012_SELLOUTCountArgs>(
            args?: Subset<T, GA_SUP_50012_SELLOUTCountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_SUP_50012_SELLOUTCountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_SUP_50012_SELLOUT.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50012_SELLOUTAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_SUP_50012_SELLOUTAggregateArgs>(
            args: Subset<T, GA_SUP_50012_SELLOUTAggregateArgs>
        ): Prisma.PrismaPromise<GetGA_SUP_50012_SELLOUTAggregateType<T>>

        /**
         * Group by GA_SUP_50012_SELLOUT.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50012_SELLOUTGroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_SUP_50012_SELLOUTGroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_SUP_50012_SELLOUTGroupByArgs['orderBy'] }
                : { orderBy?: GA_SUP_50012_SELLOUTGroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<
                T,
                GA_SUP_50012_SELLOUTGroupByArgs,
                OrderByArg
            > &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_SUP_50012_SELLOUTGroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_SUP_50012_SELLOUT model
         */
        readonly fields: GA_SUP_50012_SELLOUTFieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_SUP_50012_SELLOUT.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_SUP_50012_SELLOUTClient<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_SUP_50012_SELLOUT model
     */
    interface GA_SUP_50012_SELLOUTFieldRefs {
        readonly SPR_SPH_ID: FieldRef<'GA_SUP_50012_SELLOUT', 'Int'>
        readonly SPR_INN: FieldRef<'GA_SUP_50012_SELLOUT', 'String'>
        readonly SPR_CLIENT: FieldRef<'GA_SUP_50012_SELLOUT', 'String'>
        readonly SPR_GROUPTYPE: FieldRef<'GA_SUP_50012_SELLOUT', 'String'>
        readonly SPR_ARTICLE: FieldRef<'GA_SUP_50012_SELLOUT', 'String'>
        readonly SPR_BRAND: FieldRef<'GA_SUP_50012_SELLOUT', 'String'>
        readonly SPR_INFO: FieldRef<'GA_SUP_50012_SELLOUT', 'String'>
        readonly SPR_QTY: FieldRef<'GA_SUP_50012_SELLOUT', 'Float'>
        readonly SPR_PRICE: FieldRef<'GA_SUP_50012_SELLOUT', 'Float'>
        readonly SPR_SUMMA: FieldRef<'GA_SUP_50012_SELLOUT', 'Float'>
        readonly SPR_ART_ID: FieldRef<'GA_SUP_50012_SELLOUT', 'Int'>
        readonly SPR_DATETIME: FieldRef<'GA_SUP_50012_SELLOUT', 'DateTime'>
        readonly SPR_ADDR: FieldRef<'GA_SUP_50012_SELLOUT', 'String'>
        readonly SPR_CLIENT_CODE: FieldRef<'GA_SUP_50012_SELLOUT', 'String'>
        readonly SPR_CLIENT_ID: FieldRef<'GA_SUP_50012_SELLOUT', 'String'>
        readonly SPR_CLIENT_CODE2: FieldRef<'GA_SUP_50012_SELLOUT', 'String'>
        readonly SPR_ADDR_ENC: FieldRef<'GA_SUP_50012_SELLOUT', 'String'>
    }

    // Custom InputTypes

    /**
     * GA_SUP_50012_SELLOUT findUnique
     */
    export type GA_SUP_50012_SELLOUTFindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50012_SELLOUT
         */
        select?: GA_SUP_50012_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter, which GA_SUP_50012_SELLOUT to fetch.
         */
        where: GA_SUP_50012_SELLOUTWhereUniqueInput
    }

    /**
     * GA_SUP_50012_SELLOUT findUniqueOrThrow
     */
    export type GA_SUP_50012_SELLOUTFindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50012_SELLOUT
         */
        select?: GA_SUP_50012_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter, which GA_SUP_50012_SELLOUT to fetch.
         */
        where: GA_SUP_50012_SELLOUTWhereUniqueInput
    }

    /**
     * GA_SUP_50012_SELLOUT findFirst
     */
    export type GA_SUP_50012_SELLOUTFindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50012_SELLOUT
         */
        select?: GA_SUP_50012_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter, which GA_SUP_50012_SELLOUT to fetch.
         */
        where?: GA_SUP_50012_SELLOUTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_SUP_50012_SELLOUTS to fetch.
         */
        orderBy?:
            | GA_SUP_50012_SELLOUTOrderByWithRelationInput
            | GA_SUP_50012_SELLOUTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_SUP_50012_SELLOUTS.
         */
        cursor?: GA_SUP_50012_SELLOUTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_SUP_50012_SELLOUTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_SUP_50012_SELLOUTS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_SUP_50012_SELLOUTS.
         */
        distinct?:
            | GA_SUP_50012_SELLOUTScalarFieldEnum
            | GA_SUP_50012_SELLOUTScalarFieldEnum[]
    }

    /**
     * GA_SUP_50012_SELLOUT findFirstOrThrow
     */
    export type GA_SUP_50012_SELLOUTFindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50012_SELLOUT
         */
        select?: GA_SUP_50012_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter, which GA_SUP_50012_SELLOUT to fetch.
         */
        where?: GA_SUP_50012_SELLOUTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_SUP_50012_SELLOUTS to fetch.
         */
        orderBy?:
            | GA_SUP_50012_SELLOUTOrderByWithRelationInput
            | GA_SUP_50012_SELLOUTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_SUP_50012_SELLOUTS.
         */
        cursor?: GA_SUP_50012_SELLOUTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_SUP_50012_SELLOUTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_SUP_50012_SELLOUTS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_SUP_50012_SELLOUTS.
         */
        distinct?:
            | GA_SUP_50012_SELLOUTScalarFieldEnum
            | GA_SUP_50012_SELLOUTScalarFieldEnum[]
    }

    /**
     * GA_SUP_50012_SELLOUT findMany
     */
    export type GA_SUP_50012_SELLOUTFindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50012_SELLOUT
         */
        select?: GA_SUP_50012_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter, which GA_SUP_50012_SELLOUTS to fetch.
         */
        where?: GA_SUP_50012_SELLOUTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_SUP_50012_SELLOUTS to fetch.
         */
        orderBy?:
            | GA_SUP_50012_SELLOUTOrderByWithRelationInput
            | GA_SUP_50012_SELLOUTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_SUP_50012_SELLOUTS.
         */
        cursor?: GA_SUP_50012_SELLOUTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_SUP_50012_SELLOUTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_SUP_50012_SELLOUTS.
         */
        skip?: number
        distinct?:
            | GA_SUP_50012_SELLOUTScalarFieldEnum
            | GA_SUP_50012_SELLOUTScalarFieldEnum[]
    }

    /**
     * GA_SUP_50012_SELLOUT create
     */
    export type GA_SUP_50012_SELLOUTCreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50012_SELLOUT
         */
        select?: GA_SUP_50012_SELLOUTSelect<ExtArgs> | null
        /**
         * The data needed to create a GA_SUP_50012_SELLOUT.
         */
        data: XOR<
            GA_SUP_50012_SELLOUTCreateInput,
            GA_SUP_50012_SELLOUTUncheckedCreateInput
        >
    }

    /**
     * GA_SUP_50012_SELLOUT createMany
     */
    export type GA_SUP_50012_SELLOUTCreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_SUP_50012_SELLOUTS.
         */
        data:
            | GA_SUP_50012_SELLOUTCreateManyInput
            | GA_SUP_50012_SELLOUTCreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_SUP_50012_SELLOUT update
     */
    export type GA_SUP_50012_SELLOUTUpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50012_SELLOUT
         */
        select?: GA_SUP_50012_SELLOUTSelect<ExtArgs> | null
        /**
         * The data needed to update a GA_SUP_50012_SELLOUT.
         */
        data: XOR<
            GA_SUP_50012_SELLOUTUpdateInput,
            GA_SUP_50012_SELLOUTUncheckedUpdateInput
        >
        /**
         * Choose, which GA_SUP_50012_SELLOUT to update.
         */
        where: GA_SUP_50012_SELLOUTWhereUniqueInput
    }

    /**
     * GA_SUP_50012_SELLOUT updateMany
     */
    export type GA_SUP_50012_SELLOUTUpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_SUP_50012_SELLOUTS.
         */
        data: XOR<
            GA_SUP_50012_SELLOUTUpdateManyMutationInput,
            GA_SUP_50012_SELLOUTUncheckedUpdateManyInput
        >
        /**
         * Filter which GA_SUP_50012_SELLOUTS to update
         */
        where?: GA_SUP_50012_SELLOUTWhereInput
    }

    /**
     * GA_SUP_50012_SELLOUT upsert
     */
    export type GA_SUP_50012_SELLOUTUpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50012_SELLOUT
         */
        select?: GA_SUP_50012_SELLOUTSelect<ExtArgs> | null
        /**
         * The filter to search for the GA_SUP_50012_SELLOUT to update in case it exists.
         */
        where: GA_SUP_50012_SELLOUTWhereUniqueInput
        /**
         * In case the GA_SUP_50012_SELLOUT found by the `where` argument doesn't exist, create a new GA_SUP_50012_SELLOUT with this data.
         */
        create: XOR<
            GA_SUP_50012_SELLOUTCreateInput,
            GA_SUP_50012_SELLOUTUncheckedCreateInput
        >
        /**
         * In case the GA_SUP_50012_SELLOUT was found with the provided `where` argument, update it with this data.
         */
        update: XOR<
            GA_SUP_50012_SELLOUTUpdateInput,
            GA_SUP_50012_SELLOUTUncheckedUpdateInput
        >
    }

    /**
     * GA_SUP_50012_SELLOUT delete
     */
    export type GA_SUP_50012_SELLOUTDeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50012_SELLOUT
         */
        select?: GA_SUP_50012_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter which GA_SUP_50012_SELLOUT to delete.
         */
        where: GA_SUP_50012_SELLOUTWhereUniqueInput
    }

    /**
     * GA_SUP_50012_SELLOUT deleteMany
     */
    export type GA_SUP_50012_SELLOUTDeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_SUP_50012_SELLOUTS to delete
         */
        where?: GA_SUP_50012_SELLOUTWhereInput
    }

    /**
     * GA_SUP_50012_SELLOUT without action
     */
    export type GA_SUP_50012_SELLOUTDefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50012_SELLOUT
         */
        select?: GA_SUP_50012_SELLOUTSelect<ExtArgs> | null
    }

    /**
     * Model GA_SUP_50013_SELLOUT
     */

    export type AggregateGA_SUP_50013_SELLOUT = {
        _count: GA_SUP_50013_SELLOUTCountAggregateOutputType | null
        _avg: GA_SUP_50013_SELLOUTAvgAggregateOutputType | null
        _sum: GA_SUP_50013_SELLOUTSumAggregateOutputType | null
        _min: GA_SUP_50013_SELLOUTMinAggregateOutputType | null
        _max: GA_SUP_50013_SELLOUTMaxAggregateOutputType | null
    }

    export type GA_SUP_50013_SELLOUTAvgAggregateOutputType = {
        SPR_SPH_ID: number | null
        SPR_QTY: number | null
        SPR_PRICE: number | null
        SPR_SUMMA: number | null
        SPR_ART_ID: number | null
    }

    export type GA_SUP_50013_SELLOUTSumAggregateOutputType = {
        SPR_SPH_ID: number | null
        SPR_QTY: number | null
        SPR_PRICE: number | null
        SPR_SUMMA: number | null
        SPR_ART_ID: number | null
    }

    export type GA_SUP_50013_SELLOUTMinAggregateOutputType = {
        SPR_SPH_ID: number | null
        SPR_INN: string | null
        SPR_CLIENT: string | null
        SPR_GROUPTYPE: string | null
        SPR_ARTICLE: string | null
        SPR_BRAND: string | null
        SPR_INFO: string | null
        SPR_QTY: number | null
        SPR_PRICE: number | null
        SPR_SUMMA: number | null
        SPR_ART_ID: number | null
        SPR_DATETIME: Date | null
        SPR_ADDR: string | null
        SPR_CLIENT_CODE: string | null
        SPR_CLIENT_ID: string | null
        SPR_CLIENT_CODE2: string | null
        SPR_ADDR_ENC: string | null
    }

    export type GA_SUP_50013_SELLOUTMaxAggregateOutputType = {
        SPR_SPH_ID: number | null
        SPR_INN: string | null
        SPR_CLIENT: string | null
        SPR_GROUPTYPE: string | null
        SPR_ARTICLE: string | null
        SPR_BRAND: string | null
        SPR_INFO: string | null
        SPR_QTY: number | null
        SPR_PRICE: number | null
        SPR_SUMMA: number | null
        SPR_ART_ID: number | null
        SPR_DATETIME: Date | null
        SPR_ADDR: string | null
        SPR_CLIENT_CODE: string | null
        SPR_CLIENT_ID: string | null
        SPR_CLIENT_CODE2: string | null
        SPR_ADDR_ENC: string | null
    }

    export type GA_SUP_50013_SELLOUTCountAggregateOutputType = {
        SPR_SPH_ID: number
        SPR_INN: number
        SPR_CLIENT: number
        SPR_GROUPTYPE: number
        SPR_ARTICLE: number
        SPR_BRAND: number
        SPR_INFO: number
        SPR_QTY: number
        SPR_PRICE: number
        SPR_SUMMA: number
        SPR_ART_ID: number
        SPR_DATETIME: number
        SPR_ADDR: number
        SPR_CLIENT_CODE: number
        SPR_CLIENT_ID: number
        SPR_CLIENT_CODE2: number
        SPR_ADDR_ENC: number
        _all: number
    }

    export type GA_SUP_50013_SELLOUTAvgAggregateInputType = {
        SPR_SPH_ID?: true
        SPR_QTY?: true
        SPR_PRICE?: true
        SPR_SUMMA?: true
        SPR_ART_ID?: true
    }

    export type GA_SUP_50013_SELLOUTSumAggregateInputType = {
        SPR_SPH_ID?: true
        SPR_QTY?: true
        SPR_PRICE?: true
        SPR_SUMMA?: true
        SPR_ART_ID?: true
    }

    export type GA_SUP_50013_SELLOUTMinAggregateInputType = {
        SPR_SPH_ID?: true
        SPR_INN?: true
        SPR_CLIENT?: true
        SPR_GROUPTYPE?: true
        SPR_ARTICLE?: true
        SPR_BRAND?: true
        SPR_INFO?: true
        SPR_QTY?: true
        SPR_PRICE?: true
        SPR_SUMMA?: true
        SPR_ART_ID?: true
        SPR_DATETIME?: true
        SPR_ADDR?: true
        SPR_CLIENT_CODE?: true
        SPR_CLIENT_ID?: true
        SPR_CLIENT_CODE2?: true
        SPR_ADDR_ENC?: true
    }

    export type GA_SUP_50013_SELLOUTMaxAggregateInputType = {
        SPR_SPH_ID?: true
        SPR_INN?: true
        SPR_CLIENT?: true
        SPR_GROUPTYPE?: true
        SPR_ARTICLE?: true
        SPR_BRAND?: true
        SPR_INFO?: true
        SPR_QTY?: true
        SPR_PRICE?: true
        SPR_SUMMA?: true
        SPR_ART_ID?: true
        SPR_DATETIME?: true
        SPR_ADDR?: true
        SPR_CLIENT_CODE?: true
        SPR_CLIENT_ID?: true
        SPR_CLIENT_CODE2?: true
        SPR_ADDR_ENC?: true
    }

    export type GA_SUP_50013_SELLOUTCountAggregateInputType = {
        SPR_SPH_ID?: true
        SPR_INN?: true
        SPR_CLIENT?: true
        SPR_GROUPTYPE?: true
        SPR_ARTICLE?: true
        SPR_BRAND?: true
        SPR_INFO?: true
        SPR_QTY?: true
        SPR_PRICE?: true
        SPR_SUMMA?: true
        SPR_ART_ID?: true
        SPR_DATETIME?: true
        SPR_ADDR?: true
        SPR_CLIENT_CODE?: true
        SPR_CLIENT_ID?: true
        SPR_CLIENT_CODE2?: true
        SPR_ADDR_ENC?: true
        _all?: true
    }

    export type GA_SUP_50013_SELLOUTAggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_SUP_50013_SELLOUT to aggregate.
         */
        where?: GA_SUP_50013_SELLOUTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_SUP_50013_SELLOUTS to fetch.
         */
        orderBy?:
            | GA_SUP_50013_SELLOUTOrderByWithRelationInput
            | GA_SUP_50013_SELLOUTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_SUP_50013_SELLOUTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_SUP_50013_SELLOUTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_SUP_50013_SELLOUTS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_SUP_50013_SELLOUTS
         **/
        _count?: true | GA_SUP_50013_SELLOUTCountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_SUP_50013_SELLOUTAvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_SUP_50013_SELLOUTSumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_SUP_50013_SELLOUTMinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_SUP_50013_SELLOUTMaxAggregateInputType
    }

    export type GetGA_SUP_50013_SELLOUTAggregateType<
        T extends GA_SUP_50013_SELLOUTAggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_SUP_50013_SELLOUT]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_SUP_50013_SELLOUT[P]>
            : GetScalarType<T[P], AggregateGA_SUP_50013_SELLOUT[P]>
    }

    export type GA_SUP_50013_SELLOUTGroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_SUP_50013_SELLOUTWhereInput
        orderBy?:
            | GA_SUP_50013_SELLOUTOrderByWithAggregationInput
            | GA_SUP_50013_SELLOUTOrderByWithAggregationInput[]
        by:
            | GA_SUP_50013_SELLOUTScalarFieldEnum[]
            | GA_SUP_50013_SELLOUTScalarFieldEnum
        having?: GA_SUP_50013_SELLOUTScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_SUP_50013_SELLOUTCountAggregateInputType | true
        _avg?: GA_SUP_50013_SELLOUTAvgAggregateInputType
        _sum?: GA_SUP_50013_SELLOUTSumAggregateInputType
        _min?: GA_SUP_50013_SELLOUTMinAggregateInputType
        _max?: GA_SUP_50013_SELLOUTMaxAggregateInputType
    }

    export type GA_SUP_50013_SELLOUTGroupByOutputType = {
        SPR_SPH_ID: number
        SPR_INN: string
        SPR_CLIENT: string
        SPR_GROUPTYPE: string
        SPR_ARTICLE: string
        SPR_BRAND: string
        SPR_INFO: string
        SPR_QTY: number
        SPR_PRICE: number
        SPR_SUMMA: number
        SPR_ART_ID: number
        SPR_DATETIME: Date
        SPR_ADDR: string
        SPR_CLIENT_CODE: string
        SPR_CLIENT_ID: string
        SPR_CLIENT_CODE2: string
        SPR_ADDR_ENC: string
        _count: GA_SUP_50013_SELLOUTCountAggregateOutputType | null
        _avg: GA_SUP_50013_SELLOUTAvgAggregateOutputType | null
        _sum: GA_SUP_50013_SELLOUTSumAggregateOutputType | null
        _min: GA_SUP_50013_SELLOUTMinAggregateOutputType | null
        _max: GA_SUP_50013_SELLOUTMaxAggregateOutputType | null
    }

    type GetGA_SUP_50013_SELLOUTGroupByPayload<
        T extends GA_SUP_50013_SELLOUTGroupByArgs,
    > = Prisma.PrismaPromise<
        Array<
            PickEnumerable<GA_SUP_50013_SELLOUTGroupByOutputType, T['by']> & {
                [P in keyof T &
                    keyof GA_SUP_50013_SELLOUTGroupByOutputType]: P extends '_count'
                    ? T[P] extends boolean
                        ? number
                        : GetScalarType<
                              T[P],
                              GA_SUP_50013_SELLOUTGroupByOutputType[P]
                          >
                    : GetScalarType<
                          T[P],
                          GA_SUP_50013_SELLOUTGroupByOutputType[P]
                      >
            }
        >
    >

    export type GA_SUP_50013_SELLOUTSelect<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            SPR_SPH_ID?: boolean
            SPR_INN?: boolean
            SPR_CLIENT?: boolean
            SPR_GROUPTYPE?: boolean
            SPR_ARTICLE?: boolean
            SPR_BRAND?: boolean
            SPR_INFO?: boolean
            SPR_QTY?: boolean
            SPR_PRICE?: boolean
            SPR_SUMMA?: boolean
            SPR_ART_ID?: boolean
            SPR_DATETIME?: boolean
            SPR_ADDR?: boolean
            SPR_CLIENT_CODE?: boolean
            SPR_CLIENT_ID?: boolean
            SPR_CLIENT_CODE2?: boolean
            SPR_ADDR_ENC?: boolean
        },
        ExtArgs['result']['gA_SUP_50013_SELLOUT']
    >

    export type GA_SUP_50013_SELLOUTSelectScalar = {
        SPR_SPH_ID?: boolean
        SPR_INN?: boolean
        SPR_CLIENT?: boolean
        SPR_GROUPTYPE?: boolean
        SPR_ARTICLE?: boolean
        SPR_BRAND?: boolean
        SPR_INFO?: boolean
        SPR_QTY?: boolean
        SPR_PRICE?: boolean
        SPR_SUMMA?: boolean
        SPR_ART_ID?: boolean
        SPR_DATETIME?: boolean
        SPR_ADDR?: boolean
        SPR_CLIENT_CODE?: boolean
        SPR_CLIENT_ID?: boolean
        SPR_CLIENT_CODE2?: boolean
        SPR_ADDR_ENC?: boolean
    }

    export type $GA_SUP_50013_SELLOUTPayload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_SUP_50013_SELLOUT'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                SPR_SPH_ID: number
                SPR_INN: string
                SPR_CLIENT: string
                SPR_GROUPTYPE: string
                SPR_ARTICLE: string
                SPR_BRAND: string
                SPR_INFO: string
                SPR_QTY: number
                SPR_PRICE: number
                SPR_SUMMA: number
                SPR_ART_ID: number
                SPR_DATETIME: Date
                SPR_ADDR: string
                SPR_CLIENT_CODE: string
                SPR_CLIENT_ID: string
                SPR_CLIENT_CODE2: string
                SPR_ADDR_ENC: string
            },
            ExtArgs['result']['gA_SUP_50013_SELLOUT']
        >
        composites: {}
    }

    type GA_SUP_50013_SELLOUTGetPayload<
        S extends boolean | null | undefined | GA_SUP_50013_SELLOUTDefaultArgs,
    > = $Result.GetResult<Prisma.$GA_SUP_50013_SELLOUTPayload, S>

    type GA_SUP_50013_SELLOUTCountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<
        GA_SUP_50013_SELLOUTFindManyArgs,
        'select' | 'include' | 'distinct'
    > & {
        select?: GA_SUP_50013_SELLOUTCountAggregateInputType | true
    }

    export interface GA_SUP_50013_SELLOUTDelegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_SUP_50013_SELLOUT']
            meta: { name: 'GA_SUP_50013_SELLOUT' }
        }
        /**
         * Find zero or one GA_SUP_50013_SELLOUT that matches the filter.
         * @param {GA_SUP_50013_SELLOUTFindUniqueArgs} args - Arguments to find a GA_SUP_50013_SELLOUT
         * @example
         * // Get one GA_SUP_50013_SELLOUT
         * const gA_SUP_50013_SELLOUT = await prisma.gA_SUP_50013_SELLOUT.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_SUP_50013_SELLOUTFindUniqueArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50013_SELLOUTFindUniqueArgs<ExtArgs>>
        ): Prisma__GA_SUP_50013_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50013_SELLOUTPayload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_SUP_50013_SELLOUT that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_SUP_50013_SELLOUTFindUniqueOrThrowArgs} args - Arguments to find a GA_SUP_50013_SELLOUT
         * @example
         * // Get one GA_SUP_50013_SELLOUT
         * const gA_SUP_50013_SELLOUT = await prisma.gA_SUP_50013_SELLOUT.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_SUP_50013_SELLOUTFindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_SUP_50013_SELLOUTFindUniqueOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_SUP_50013_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50013_SELLOUTPayload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_SUP_50013_SELLOUT that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50013_SELLOUTFindFirstArgs} args - Arguments to find a GA_SUP_50013_SELLOUT
         * @example
         * // Get one GA_SUP_50013_SELLOUT
         * const gA_SUP_50013_SELLOUT = await prisma.gA_SUP_50013_SELLOUT.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_SUP_50013_SELLOUTFindFirstArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_SUP_50013_SELLOUTFindFirstArgs<ExtArgs>>
        ): Prisma__GA_SUP_50013_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50013_SELLOUTPayload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_SUP_50013_SELLOUT that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50013_SELLOUTFindFirstOrThrowArgs} args - Arguments to find a GA_SUP_50013_SELLOUT
         * @example
         * // Get one GA_SUP_50013_SELLOUT
         * const gA_SUP_50013_SELLOUT = await prisma.gA_SUP_50013_SELLOUT.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<
            T extends GA_SUP_50013_SELLOUTFindFirstOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_SUP_50013_SELLOUTFindFirstOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_SUP_50013_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50013_SELLOUTPayload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_SUP_50013_SELLOUTS that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50013_SELLOUTFindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_SUP_50013_SELLOUTS
         * const gA_SUP_50013_SELLOUTS = await prisma.gA_SUP_50013_SELLOUT.findMany()
         *
         * // Get first 10 GA_SUP_50013_SELLOUTS
         * const gA_SUP_50013_SELLOUTS = await prisma.gA_SUP_50013_SELLOUT.findMany({ take: 10 })
         *
         * // Only select the `SPR_SPH_ID`
         * const gA_SUP_50013_SELLOUTWithSPR_SPH_IDOnly = await prisma.gA_SUP_50013_SELLOUT.findMany({ select: { SPR_SPH_ID: true } })
         *
         **/
        findMany<T extends GA_SUP_50013_SELLOUTFindManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_SUP_50013_SELLOUTFindManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_SUP_50013_SELLOUTPayload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_SUP_50013_SELLOUT.
         * @param {GA_SUP_50013_SELLOUTCreateArgs} args - Arguments to create a GA_SUP_50013_SELLOUT.
         * @example
         * // Create one GA_SUP_50013_SELLOUT
         * const GA_SUP_50013_SELLOUT = await prisma.gA_SUP_50013_SELLOUT.create({
         *   data: {
         *     // ... data to create a GA_SUP_50013_SELLOUT
         *   }
         * })
         *
         **/
        create<T extends GA_SUP_50013_SELLOUTCreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50013_SELLOUTCreateArgs<ExtArgs>>
        ): Prisma__GA_SUP_50013_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50013_SELLOUTPayload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_SUP_50013_SELLOUTS.
         *     @param {GA_SUP_50013_SELLOUTCreateManyArgs} args - Arguments to create many GA_SUP_50013_SELLOUTS.
         *     @example
         *     // Create many GA_SUP_50013_SELLOUTS
         *     const gA_SUP_50013_SELLOUT = await prisma.gA_SUP_50013_SELLOUT.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_SUP_50013_SELLOUTCreateManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_SUP_50013_SELLOUTCreateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_SUP_50013_SELLOUT.
         * @param {GA_SUP_50013_SELLOUTDeleteArgs} args - Arguments to delete one GA_SUP_50013_SELLOUT.
         * @example
         * // Delete one GA_SUP_50013_SELLOUT
         * const GA_SUP_50013_SELLOUT = await prisma.gA_SUP_50013_SELLOUT.delete({
         *   where: {
         *     // ... filter to delete one GA_SUP_50013_SELLOUT
         *   }
         * })
         *
         **/
        delete<T extends GA_SUP_50013_SELLOUTDeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50013_SELLOUTDeleteArgs<ExtArgs>>
        ): Prisma__GA_SUP_50013_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50013_SELLOUTPayload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_SUP_50013_SELLOUT.
         * @param {GA_SUP_50013_SELLOUTUpdateArgs} args - Arguments to update one GA_SUP_50013_SELLOUT.
         * @example
         * // Update one GA_SUP_50013_SELLOUT
         * const gA_SUP_50013_SELLOUT = await prisma.gA_SUP_50013_SELLOUT.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_SUP_50013_SELLOUTUpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50013_SELLOUTUpdateArgs<ExtArgs>>
        ): Prisma__GA_SUP_50013_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50013_SELLOUTPayload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_SUP_50013_SELLOUTS.
         * @param {GA_SUP_50013_SELLOUTDeleteManyArgs} args - Arguments to filter GA_SUP_50013_SELLOUTS to delete.
         * @example
         * // Delete a few GA_SUP_50013_SELLOUTS
         * const { count } = await prisma.gA_SUP_50013_SELLOUT.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_SUP_50013_SELLOUTDeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_SUP_50013_SELLOUTDeleteManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_SUP_50013_SELLOUTS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50013_SELLOUTUpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_SUP_50013_SELLOUTS
         * const gA_SUP_50013_SELLOUT = await prisma.gA_SUP_50013_SELLOUT.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_SUP_50013_SELLOUTUpdateManyArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50013_SELLOUTUpdateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_SUP_50013_SELLOUT.
         * @param {GA_SUP_50013_SELLOUTUpsertArgs} args - Arguments to update or create a GA_SUP_50013_SELLOUT.
         * @example
         * // Update or create a GA_SUP_50013_SELLOUT
         * const gA_SUP_50013_SELLOUT = await prisma.gA_SUP_50013_SELLOUT.upsert({
         *   create: {
         *     // ... data to create a GA_SUP_50013_SELLOUT
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_SUP_50013_SELLOUT we want to update
         *   }
         * })
         **/
        upsert<T extends GA_SUP_50013_SELLOUTUpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50013_SELLOUTUpsertArgs<ExtArgs>>
        ): Prisma__GA_SUP_50013_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50013_SELLOUTPayload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_SUP_50013_SELLOUTS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50013_SELLOUTCountArgs} args - Arguments to filter GA_SUP_50013_SELLOUTS to count.
         * @example
         * // Count the number of GA_SUP_50013_SELLOUTS
         * const count = await prisma.gA_SUP_50013_SELLOUT.count({
         *   where: {
         *     // ... the filter for the GA_SUP_50013_SELLOUTS we want to count
         *   }
         * })
         **/
        count<T extends GA_SUP_50013_SELLOUTCountArgs>(
            args?: Subset<T, GA_SUP_50013_SELLOUTCountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_SUP_50013_SELLOUTCountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_SUP_50013_SELLOUT.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50013_SELLOUTAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_SUP_50013_SELLOUTAggregateArgs>(
            args: Subset<T, GA_SUP_50013_SELLOUTAggregateArgs>
        ): Prisma.PrismaPromise<GetGA_SUP_50013_SELLOUTAggregateType<T>>

        /**
         * Group by GA_SUP_50013_SELLOUT.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50013_SELLOUTGroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_SUP_50013_SELLOUTGroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_SUP_50013_SELLOUTGroupByArgs['orderBy'] }
                : { orderBy?: GA_SUP_50013_SELLOUTGroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<
                T,
                GA_SUP_50013_SELLOUTGroupByArgs,
                OrderByArg
            > &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_SUP_50013_SELLOUTGroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_SUP_50013_SELLOUT model
         */
        readonly fields: GA_SUP_50013_SELLOUTFieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_SUP_50013_SELLOUT.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_SUP_50013_SELLOUTClient<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_SUP_50013_SELLOUT model
     */
    interface GA_SUP_50013_SELLOUTFieldRefs {
        readonly SPR_SPH_ID: FieldRef<'GA_SUP_50013_SELLOUT', 'Int'>
        readonly SPR_INN: FieldRef<'GA_SUP_50013_SELLOUT', 'String'>
        readonly SPR_CLIENT: FieldRef<'GA_SUP_50013_SELLOUT', 'String'>
        readonly SPR_GROUPTYPE: FieldRef<'GA_SUP_50013_SELLOUT', 'String'>
        readonly SPR_ARTICLE: FieldRef<'GA_SUP_50013_SELLOUT', 'String'>
        readonly SPR_BRAND: FieldRef<'GA_SUP_50013_SELLOUT', 'String'>
        readonly SPR_INFO: FieldRef<'GA_SUP_50013_SELLOUT', 'String'>
        readonly SPR_QTY: FieldRef<'GA_SUP_50013_SELLOUT', 'Float'>
        readonly SPR_PRICE: FieldRef<'GA_SUP_50013_SELLOUT', 'Float'>
        readonly SPR_SUMMA: FieldRef<'GA_SUP_50013_SELLOUT', 'Float'>
        readonly SPR_ART_ID: FieldRef<'GA_SUP_50013_SELLOUT', 'Int'>
        readonly SPR_DATETIME: FieldRef<'GA_SUP_50013_SELLOUT', 'DateTime'>
        readonly SPR_ADDR: FieldRef<'GA_SUP_50013_SELLOUT', 'String'>
        readonly SPR_CLIENT_CODE: FieldRef<'GA_SUP_50013_SELLOUT', 'String'>
        readonly SPR_CLIENT_ID: FieldRef<'GA_SUP_50013_SELLOUT', 'String'>
        readonly SPR_CLIENT_CODE2: FieldRef<'GA_SUP_50013_SELLOUT', 'String'>
        readonly SPR_ADDR_ENC: FieldRef<'GA_SUP_50013_SELLOUT', 'String'>
    }

    // Custom InputTypes

    /**
     * GA_SUP_50013_SELLOUT findUnique
     */
    export type GA_SUP_50013_SELLOUTFindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50013_SELLOUT
         */
        select?: GA_SUP_50013_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter, which GA_SUP_50013_SELLOUT to fetch.
         */
        where: GA_SUP_50013_SELLOUTWhereUniqueInput
    }

    /**
     * GA_SUP_50013_SELLOUT findUniqueOrThrow
     */
    export type GA_SUP_50013_SELLOUTFindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50013_SELLOUT
         */
        select?: GA_SUP_50013_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter, which GA_SUP_50013_SELLOUT to fetch.
         */
        where: GA_SUP_50013_SELLOUTWhereUniqueInput
    }

    /**
     * GA_SUP_50013_SELLOUT findFirst
     */
    export type GA_SUP_50013_SELLOUTFindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50013_SELLOUT
         */
        select?: GA_SUP_50013_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter, which GA_SUP_50013_SELLOUT to fetch.
         */
        where?: GA_SUP_50013_SELLOUTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_SUP_50013_SELLOUTS to fetch.
         */
        orderBy?:
            | GA_SUP_50013_SELLOUTOrderByWithRelationInput
            | GA_SUP_50013_SELLOUTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_SUP_50013_SELLOUTS.
         */
        cursor?: GA_SUP_50013_SELLOUTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_SUP_50013_SELLOUTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_SUP_50013_SELLOUTS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_SUP_50013_SELLOUTS.
         */
        distinct?:
            | GA_SUP_50013_SELLOUTScalarFieldEnum
            | GA_SUP_50013_SELLOUTScalarFieldEnum[]
    }

    /**
     * GA_SUP_50013_SELLOUT findFirstOrThrow
     */
    export type GA_SUP_50013_SELLOUTFindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50013_SELLOUT
         */
        select?: GA_SUP_50013_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter, which GA_SUP_50013_SELLOUT to fetch.
         */
        where?: GA_SUP_50013_SELLOUTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_SUP_50013_SELLOUTS to fetch.
         */
        orderBy?:
            | GA_SUP_50013_SELLOUTOrderByWithRelationInput
            | GA_SUP_50013_SELLOUTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_SUP_50013_SELLOUTS.
         */
        cursor?: GA_SUP_50013_SELLOUTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_SUP_50013_SELLOUTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_SUP_50013_SELLOUTS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_SUP_50013_SELLOUTS.
         */
        distinct?:
            | GA_SUP_50013_SELLOUTScalarFieldEnum
            | GA_SUP_50013_SELLOUTScalarFieldEnum[]
    }

    /**
     * GA_SUP_50013_SELLOUT findMany
     */
    export type GA_SUP_50013_SELLOUTFindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50013_SELLOUT
         */
        select?: GA_SUP_50013_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter, which GA_SUP_50013_SELLOUTS to fetch.
         */
        where?: GA_SUP_50013_SELLOUTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_SUP_50013_SELLOUTS to fetch.
         */
        orderBy?:
            | GA_SUP_50013_SELLOUTOrderByWithRelationInput
            | GA_SUP_50013_SELLOUTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_SUP_50013_SELLOUTS.
         */
        cursor?: GA_SUP_50013_SELLOUTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_SUP_50013_SELLOUTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_SUP_50013_SELLOUTS.
         */
        skip?: number
        distinct?:
            | GA_SUP_50013_SELLOUTScalarFieldEnum
            | GA_SUP_50013_SELLOUTScalarFieldEnum[]
    }

    /**
     * GA_SUP_50013_SELLOUT create
     */
    export type GA_SUP_50013_SELLOUTCreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50013_SELLOUT
         */
        select?: GA_SUP_50013_SELLOUTSelect<ExtArgs> | null
        /**
         * The data needed to create a GA_SUP_50013_SELLOUT.
         */
        data: XOR<
            GA_SUP_50013_SELLOUTCreateInput,
            GA_SUP_50013_SELLOUTUncheckedCreateInput
        >
    }

    /**
     * GA_SUP_50013_SELLOUT createMany
     */
    export type GA_SUP_50013_SELLOUTCreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_SUP_50013_SELLOUTS.
         */
        data:
            | GA_SUP_50013_SELLOUTCreateManyInput
            | GA_SUP_50013_SELLOUTCreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_SUP_50013_SELLOUT update
     */
    export type GA_SUP_50013_SELLOUTUpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50013_SELLOUT
         */
        select?: GA_SUP_50013_SELLOUTSelect<ExtArgs> | null
        /**
         * The data needed to update a GA_SUP_50013_SELLOUT.
         */
        data: XOR<
            GA_SUP_50013_SELLOUTUpdateInput,
            GA_SUP_50013_SELLOUTUncheckedUpdateInput
        >
        /**
         * Choose, which GA_SUP_50013_SELLOUT to update.
         */
        where: GA_SUP_50013_SELLOUTWhereUniqueInput
    }

    /**
     * GA_SUP_50013_SELLOUT updateMany
     */
    export type GA_SUP_50013_SELLOUTUpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_SUP_50013_SELLOUTS.
         */
        data: XOR<
            GA_SUP_50013_SELLOUTUpdateManyMutationInput,
            GA_SUP_50013_SELLOUTUncheckedUpdateManyInput
        >
        /**
         * Filter which GA_SUP_50013_SELLOUTS to update
         */
        where?: GA_SUP_50013_SELLOUTWhereInput
    }

    /**
     * GA_SUP_50013_SELLOUT upsert
     */
    export type GA_SUP_50013_SELLOUTUpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50013_SELLOUT
         */
        select?: GA_SUP_50013_SELLOUTSelect<ExtArgs> | null
        /**
         * The filter to search for the GA_SUP_50013_SELLOUT to update in case it exists.
         */
        where: GA_SUP_50013_SELLOUTWhereUniqueInput
        /**
         * In case the GA_SUP_50013_SELLOUT found by the `where` argument doesn't exist, create a new GA_SUP_50013_SELLOUT with this data.
         */
        create: XOR<
            GA_SUP_50013_SELLOUTCreateInput,
            GA_SUP_50013_SELLOUTUncheckedCreateInput
        >
        /**
         * In case the GA_SUP_50013_SELLOUT was found with the provided `where` argument, update it with this data.
         */
        update: XOR<
            GA_SUP_50013_SELLOUTUpdateInput,
            GA_SUP_50013_SELLOUTUncheckedUpdateInput
        >
    }

    /**
     * GA_SUP_50013_SELLOUT delete
     */
    export type GA_SUP_50013_SELLOUTDeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50013_SELLOUT
         */
        select?: GA_SUP_50013_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter which GA_SUP_50013_SELLOUT to delete.
         */
        where: GA_SUP_50013_SELLOUTWhereUniqueInput
    }

    /**
     * GA_SUP_50013_SELLOUT deleteMany
     */
    export type GA_SUP_50013_SELLOUTDeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_SUP_50013_SELLOUTS to delete
         */
        where?: GA_SUP_50013_SELLOUTWhereInput
    }

    /**
     * GA_SUP_50013_SELLOUT without action
     */
    export type GA_SUP_50013_SELLOUTDefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50013_SELLOUT
         */
        select?: GA_SUP_50013_SELLOUTSelect<ExtArgs> | null
    }

    /**
     * Model GA_SUP_50014_SELLOUT
     */

    export type AggregateGA_SUP_50014_SELLOUT = {
        _count: GA_SUP_50014_SELLOUTCountAggregateOutputType | null
        _avg: GA_SUP_50014_SELLOUTAvgAggregateOutputType | null
        _sum: GA_SUP_50014_SELLOUTSumAggregateOutputType | null
        _min: GA_SUP_50014_SELLOUTMinAggregateOutputType | null
        _max: GA_SUP_50014_SELLOUTMaxAggregateOutputType | null
    }

    export type GA_SUP_50014_SELLOUTAvgAggregateOutputType = {
        SPR_SPH_ID: number | null
        SPR_QTY: number | null
        SPR_PRICE: number | null
        SPR_SUMMA: number | null
        SPR_ART_ID: number | null
    }

    export type GA_SUP_50014_SELLOUTSumAggregateOutputType = {
        SPR_SPH_ID: number | null
        SPR_QTY: number | null
        SPR_PRICE: number | null
        SPR_SUMMA: number | null
        SPR_ART_ID: number | null
    }

    export type GA_SUP_50014_SELLOUTMinAggregateOutputType = {
        SPR_SPH_ID: number | null
        SPR_INN: string | null
        SPR_CLIENT: string | null
        SPR_GROUPTYPE: string | null
        SPR_ARTICLE: string | null
        SPR_BRAND: string | null
        SPR_INFO: string | null
        SPR_QTY: number | null
        SPR_PRICE: number | null
        SPR_SUMMA: number | null
        SPR_ART_ID: number | null
        SPR_DATETIME: Date | null
        SPR_ADDR: string | null
        SPR_CLIENT_CODE: string | null
        SPR_CLIENT_ID: string | null
        SPR_CLIENT_CODE2: string | null
        SPR_ADDR_ENC: string | null
    }

    export type GA_SUP_50014_SELLOUTMaxAggregateOutputType = {
        SPR_SPH_ID: number | null
        SPR_INN: string | null
        SPR_CLIENT: string | null
        SPR_GROUPTYPE: string | null
        SPR_ARTICLE: string | null
        SPR_BRAND: string | null
        SPR_INFO: string | null
        SPR_QTY: number | null
        SPR_PRICE: number | null
        SPR_SUMMA: number | null
        SPR_ART_ID: number | null
        SPR_DATETIME: Date | null
        SPR_ADDR: string | null
        SPR_CLIENT_CODE: string | null
        SPR_CLIENT_ID: string | null
        SPR_CLIENT_CODE2: string | null
        SPR_ADDR_ENC: string | null
    }

    export type GA_SUP_50014_SELLOUTCountAggregateOutputType = {
        SPR_SPH_ID: number
        SPR_INN: number
        SPR_CLIENT: number
        SPR_GROUPTYPE: number
        SPR_ARTICLE: number
        SPR_BRAND: number
        SPR_INFO: number
        SPR_QTY: number
        SPR_PRICE: number
        SPR_SUMMA: number
        SPR_ART_ID: number
        SPR_DATETIME: number
        SPR_ADDR: number
        SPR_CLIENT_CODE: number
        SPR_CLIENT_ID: number
        SPR_CLIENT_CODE2: number
        SPR_ADDR_ENC: number
        _all: number
    }

    export type GA_SUP_50014_SELLOUTAvgAggregateInputType = {
        SPR_SPH_ID?: true
        SPR_QTY?: true
        SPR_PRICE?: true
        SPR_SUMMA?: true
        SPR_ART_ID?: true
    }

    export type GA_SUP_50014_SELLOUTSumAggregateInputType = {
        SPR_SPH_ID?: true
        SPR_QTY?: true
        SPR_PRICE?: true
        SPR_SUMMA?: true
        SPR_ART_ID?: true
    }

    export type GA_SUP_50014_SELLOUTMinAggregateInputType = {
        SPR_SPH_ID?: true
        SPR_INN?: true
        SPR_CLIENT?: true
        SPR_GROUPTYPE?: true
        SPR_ARTICLE?: true
        SPR_BRAND?: true
        SPR_INFO?: true
        SPR_QTY?: true
        SPR_PRICE?: true
        SPR_SUMMA?: true
        SPR_ART_ID?: true
        SPR_DATETIME?: true
        SPR_ADDR?: true
        SPR_CLIENT_CODE?: true
        SPR_CLIENT_ID?: true
        SPR_CLIENT_CODE2?: true
        SPR_ADDR_ENC?: true
    }

    export type GA_SUP_50014_SELLOUTMaxAggregateInputType = {
        SPR_SPH_ID?: true
        SPR_INN?: true
        SPR_CLIENT?: true
        SPR_GROUPTYPE?: true
        SPR_ARTICLE?: true
        SPR_BRAND?: true
        SPR_INFO?: true
        SPR_QTY?: true
        SPR_PRICE?: true
        SPR_SUMMA?: true
        SPR_ART_ID?: true
        SPR_DATETIME?: true
        SPR_ADDR?: true
        SPR_CLIENT_CODE?: true
        SPR_CLIENT_ID?: true
        SPR_CLIENT_CODE2?: true
        SPR_ADDR_ENC?: true
    }

    export type GA_SUP_50014_SELLOUTCountAggregateInputType = {
        SPR_SPH_ID?: true
        SPR_INN?: true
        SPR_CLIENT?: true
        SPR_GROUPTYPE?: true
        SPR_ARTICLE?: true
        SPR_BRAND?: true
        SPR_INFO?: true
        SPR_QTY?: true
        SPR_PRICE?: true
        SPR_SUMMA?: true
        SPR_ART_ID?: true
        SPR_DATETIME?: true
        SPR_ADDR?: true
        SPR_CLIENT_CODE?: true
        SPR_CLIENT_ID?: true
        SPR_CLIENT_CODE2?: true
        SPR_ADDR_ENC?: true
        _all?: true
    }

    export type GA_SUP_50014_SELLOUTAggregateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_SUP_50014_SELLOUT to aggregate.
         */
        where?: GA_SUP_50014_SELLOUTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_SUP_50014_SELLOUTS to fetch.
         */
        orderBy?:
            | GA_SUP_50014_SELLOUTOrderByWithRelationInput
            | GA_SUP_50014_SELLOUTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the start position
         */
        cursor?: GA_SUP_50014_SELLOUTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_SUP_50014_SELLOUTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_SUP_50014_SELLOUTS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Count returned GA_SUP_50014_SELLOUTS
         **/
        _count?: true | GA_SUP_50014_SELLOUTCountAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to average
         **/
        _avg?: GA_SUP_50014_SELLOUTAvgAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to sum
         **/
        _sum?: GA_SUP_50014_SELLOUTSumAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the minimum value
         **/
        _min?: GA_SUP_50014_SELLOUTMinAggregateInputType
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
         *
         * Select which fields to find the maximum value
         **/
        _max?: GA_SUP_50014_SELLOUTMaxAggregateInputType
    }

    export type GetGA_SUP_50014_SELLOUTAggregateType<
        T extends GA_SUP_50014_SELLOUTAggregateArgs,
    > = {
        [P in keyof T & keyof AggregateGA_SUP_50014_SELLOUT]: P extends
            | '_count'
            | 'count'
            ? T[P] extends true
                ? number
                : GetScalarType<T[P], AggregateGA_SUP_50014_SELLOUT[P]>
            : GetScalarType<T[P], AggregateGA_SUP_50014_SELLOUT[P]>
    }

    export type GA_SUP_50014_SELLOUTGroupByArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        where?: GA_SUP_50014_SELLOUTWhereInput
        orderBy?:
            | GA_SUP_50014_SELLOUTOrderByWithAggregationInput
            | GA_SUP_50014_SELLOUTOrderByWithAggregationInput[]
        by:
            | GA_SUP_50014_SELLOUTScalarFieldEnum[]
            | GA_SUP_50014_SELLOUTScalarFieldEnum
        having?: GA_SUP_50014_SELLOUTScalarWhereWithAggregatesInput
        take?: number
        skip?: number
        _count?: GA_SUP_50014_SELLOUTCountAggregateInputType | true
        _avg?: GA_SUP_50014_SELLOUTAvgAggregateInputType
        _sum?: GA_SUP_50014_SELLOUTSumAggregateInputType
        _min?: GA_SUP_50014_SELLOUTMinAggregateInputType
        _max?: GA_SUP_50014_SELLOUTMaxAggregateInputType
    }

    export type GA_SUP_50014_SELLOUTGroupByOutputType = {
        SPR_SPH_ID: number
        SPR_INN: string
        SPR_CLIENT: string
        SPR_GROUPTYPE: string
        SPR_ARTICLE: string
        SPR_BRAND: string
        SPR_INFO: string
        SPR_QTY: number
        SPR_PRICE: number
        SPR_SUMMA: number
        SPR_ART_ID: number
        SPR_DATETIME: Date
        SPR_ADDR: string
        SPR_CLIENT_CODE: string
        SPR_CLIENT_ID: string
        SPR_CLIENT_CODE2: string
        SPR_ADDR_ENC: string
        _count: GA_SUP_50014_SELLOUTCountAggregateOutputType | null
        _avg: GA_SUP_50014_SELLOUTAvgAggregateOutputType | null
        _sum: GA_SUP_50014_SELLOUTSumAggregateOutputType | null
        _min: GA_SUP_50014_SELLOUTMinAggregateOutputType | null
        _max: GA_SUP_50014_SELLOUTMaxAggregateOutputType | null
    }

    type GetGA_SUP_50014_SELLOUTGroupByPayload<
        T extends GA_SUP_50014_SELLOUTGroupByArgs,
    > = Prisma.PrismaPromise<
        Array<
            PickEnumerable<GA_SUP_50014_SELLOUTGroupByOutputType, T['by']> & {
                [P in keyof T &
                    keyof GA_SUP_50014_SELLOUTGroupByOutputType]: P extends '_count'
                    ? T[P] extends boolean
                        ? number
                        : GetScalarType<
                              T[P],
                              GA_SUP_50014_SELLOUTGroupByOutputType[P]
                          >
                    : GetScalarType<
                          T[P],
                          GA_SUP_50014_SELLOUTGroupByOutputType[P]
                      >
            }
        >
    >

    export type GA_SUP_50014_SELLOUTSelect<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = $Extensions.GetSelect<
        {
            SPR_SPH_ID?: boolean
            SPR_INN?: boolean
            SPR_CLIENT?: boolean
            SPR_GROUPTYPE?: boolean
            SPR_ARTICLE?: boolean
            SPR_BRAND?: boolean
            SPR_INFO?: boolean
            SPR_QTY?: boolean
            SPR_PRICE?: boolean
            SPR_SUMMA?: boolean
            SPR_ART_ID?: boolean
            SPR_DATETIME?: boolean
            SPR_ADDR?: boolean
            SPR_CLIENT_CODE?: boolean
            SPR_CLIENT_ID?: boolean
            SPR_CLIENT_CODE2?: boolean
            SPR_ADDR_ENC?: boolean
        },
        ExtArgs['result']['gA_SUP_50014_SELLOUT']
    >

    export type GA_SUP_50014_SELLOUTSelectScalar = {
        SPR_SPH_ID?: boolean
        SPR_INN?: boolean
        SPR_CLIENT?: boolean
        SPR_GROUPTYPE?: boolean
        SPR_ARTICLE?: boolean
        SPR_BRAND?: boolean
        SPR_INFO?: boolean
        SPR_QTY?: boolean
        SPR_PRICE?: boolean
        SPR_SUMMA?: boolean
        SPR_ART_ID?: boolean
        SPR_DATETIME?: boolean
        SPR_ADDR?: boolean
        SPR_CLIENT_CODE?: boolean
        SPR_CLIENT_ID?: boolean
        SPR_CLIENT_CODE2?: boolean
        SPR_ADDR_ENC?: boolean
    }

    export type $GA_SUP_50014_SELLOUTPayload<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        name: 'GA_SUP_50014_SELLOUT'
        objects: {}
        scalars: $Extensions.GetPayloadResult<
            {
                SPR_SPH_ID: number
                SPR_INN: string
                SPR_CLIENT: string
                SPR_GROUPTYPE: string
                SPR_ARTICLE: string
                SPR_BRAND: string
                SPR_INFO: string
                SPR_QTY: number
                SPR_PRICE: number
                SPR_SUMMA: number
                SPR_ART_ID: number
                SPR_DATETIME: Date
                SPR_ADDR: string
                SPR_CLIENT_CODE: string
                SPR_CLIENT_ID: string
                SPR_CLIENT_CODE2: string
                SPR_ADDR_ENC: string
            },
            ExtArgs['result']['gA_SUP_50014_SELLOUT']
        >
        composites: {}
    }

    type GA_SUP_50014_SELLOUTGetPayload<
        S extends boolean | null | undefined | GA_SUP_50014_SELLOUTDefaultArgs,
    > = $Result.GetResult<Prisma.$GA_SUP_50014_SELLOUTPayload, S>

    type GA_SUP_50014_SELLOUTCountArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = Omit<
        GA_SUP_50014_SELLOUTFindManyArgs,
        'select' | 'include' | 'distinct'
    > & {
        select?: GA_SUP_50014_SELLOUTCountAggregateInputType | true
    }

    export interface GA_SUP_50014_SELLOUTDelegate<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > {
        [K: symbol]: {
            types: Prisma.TypeMap<ExtArgs>['model']['GA_SUP_50014_SELLOUT']
            meta: { name: 'GA_SUP_50014_SELLOUT' }
        }
        /**
         * Find zero or one GA_SUP_50014_SELLOUT that matches the filter.
         * @param {GA_SUP_50014_SELLOUTFindUniqueArgs} args - Arguments to find a GA_SUP_50014_SELLOUT
         * @example
         * // Get one GA_SUP_50014_SELLOUT
         * const gA_SUP_50014_SELLOUT = await prisma.gA_SUP_50014_SELLOUT.findUnique({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUnique<T extends GA_SUP_50014_SELLOUTFindUniqueArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50014_SELLOUTFindUniqueArgs<ExtArgs>>
        ): Prisma__GA_SUP_50014_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50014_SELLOUTPayload<ExtArgs>,
                T,
                'findUnique'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find one GA_SUP_50014_SELLOUT that matches the filter or throw an error  with `error.code='P2025'`
         *     if no matches were found.
         * @param {GA_SUP_50014_SELLOUTFindUniqueOrThrowArgs} args - Arguments to find a GA_SUP_50014_SELLOUT
         * @example
         * // Get one GA_SUP_50014_SELLOUT
         * const gA_SUP_50014_SELLOUT = await prisma.gA_SUP_50014_SELLOUT.findUniqueOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findUniqueOrThrow<
            T extends GA_SUP_50014_SELLOUTFindUniqueOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_SUP_50014_SELLOUTFindUniqueOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_SUP_50014_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50014_SELLOUTPayload<ExtArgs>,
                T,
                'findUniqueOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find the first GA_SUP_50014_SELLOUT that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50014_SELLOUTFindFirstArgs} args - Arguments to find a GA_SUP_50014_SELLOUT
         * @example
         * // Get one GA_SUP_50014_SELLOUT
         * const gA_SUP_50014_SELLOUT = await prisma.gA_SUP_50014_SELLOUT.findFirst({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirst<T extends GA_SUP_50014_SELLOUTFindFirstArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_SUP_50014_SELLOUTFindFirstArgs<ExtArgs>>
        ): Prisma__GA_SUP_50014_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50014_SELLOUTPayload<ExtArgs>,
                T,
                'findFirst'
            > | null,
            null,
            ExtArgs
        >

        /**
         * Find the first GA_SUP_50014_SELLOUT that matches the filter or
         * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50014_SELLOUTFindFirstOrThrowArgs} args - Arguments to find a GA_SUP_50014_SELLOUT
         * @example
         * // Get one GA_SUP_50014_SELLOUT
         * const gA_SUP_50014_SELLOUT = await prisma.gA_SUP_50014_SELLOUT.findFirstOrThrow({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         **/
        findFirstOrThrow<
            T extends GA_SUP_50014_SELLOUTFindFirstOrThrowArgs<ExtArgs>,
        >(
            args?: SelectSubset<
                T,
                GA_SUP_50014_SELLOUTFindFirstOrThrowArgs<ExtArgs>
            >
        ): Prisma__GA_SUP_50014_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50014_SELLOUTPayload<ExtArgs>,
                T,
                'findFirstOrThrow'
            >,
            never,
            ExtArgs
        >

        /**
         * Find zero or more GA_SUP_50014_SELLOUTS that matches the filter.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50014_SELLOUTFindManyArgs=} args - Arguments to filter and select certain fields only.
         * @example
         * // Get all GA_SUP_50014_SELLOUTS
         * const gA_SUP_50014_SELLOUTS = await prisma.gA_SUP_50014_SELLOUT.findMany()
         *
         * // Get first 10 GA_SUP_50014_SELLOUTS
         * const gA_SUP_50014_SELLOUTS = await prisma.gA_SUP_50014_SELLOUT.findMany({ take: 10 })
         *
         * // Only select the `SPR_SPH_ID`
         * const gA_SUP_50014_SELLOUTWithSPR_SPH_IDOnly = await prisma.gA_SUP_50014_SELLOUT.findMany({ select: { SPR_SPH_ID: true } })
         *
         **/
        findMany<T extends GA_SUP_50014_SELLOUTFindManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_SUP_50014_SELLOUTFindManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<
            $Result.GetResult<
                Prisma.$GA_SUP_50014_SELLOUTPayload<ExtArgs>,
                T,
                'findMany'
            >
        >

        /**
         * Create a GA_SUP_50014_SELLOUT.
         * @param {GA_SUP_50014_SELLOUTCreateArgs} args - Arguments to create a GA_SUP_50014_SELLOUT.
         * @example
         * // Create one GA_SUP_50014_SELLOUT
         * const GA_SUP_50014_SELLOUT = await prisma.gA_SUP_50014_SELLOUT.create({
         *   data: {
         *     // ... data to create a GA_SUP_50014_SELLOUT
         *   }
         * })
         *
         **/
        create<T extends GA_SUP_50014_SELLOUTCreateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50014_SELLOUTCreateArgs<ExtArgs>>
        ): Prisma__GA_SUP_50014_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50014_SELLOUTPayload<ExtArgs>,
                T,
                'create'
            >,
            never,
            ExtArgs
        >

        /**
         * Create many GA_SUP_50014_SELLOUTS.
         *     @param {GA_SUP_50014_SELLOUTCreateManyArgs} args - Arguments to create many GA_SUP_50014_SELLOUTS.
         *     @example
         *     // Create many GA_SUP_50014_SELLOUTS
         *     const gA_SUP_50014_SELLOUT = await prisma.gA_SUP_50014_SELLOUT.createMany({
         *       data: {
         *         // ... provide data here
         *       }
         *     })
         *
         **/
        createMany<T extends GA_SUP_50014_SELLOUTCreateManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_SUP_50014_SELLOUTCreateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Delete a GA_SUP_50014_SELLOUT.
         * @param {GA_SUP_50014_SELLOUTDeleteArgs} args - Arguments to delete one GA_SUP_50014_SELLOUT.
         * @example
         * // Delete one GA_SUP_50014_SELLOUT
         * const GA_SUP_50014_SELLOUT = await prisma.gA_SUP_50014_SELLOUT.delete({
         *   where: {
         *     // ... filter to delete one GA_SUP_50014_SELLOUT
         *   }
         * })
         *
         **/
        delete<T extends GA_SUP_50014_SELLOUTDeleteArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50014_SELLOUTDeleteArgs<ExtArgs>>
        ): Prisma__GA_SUP_50014_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50014_SELLOUTPayload<ExtArgs>,
                T,
                'delete'
            >,
            never,
            ExtArgs
        >

        /**
         * Update one GA_SUP_50014_SELLOUT.
         * @param {GA_SUP_50014_SELLOUTUpdateArgs} args - Arguments to update one GA_SUP_50014_SELLOUT.
         * @example
         * // Update one GA_SUP_50014_SELLOUT
         * const gA_SUP_50014_SELLOUT = await prisma.gA_SUP_50014_SELLOUT.update({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        update<T extends GA_SUP_50014_SELLOUTUpdateArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50014_SELLOUTUpdateArgs<ExtArgs>>
        ): Prisma__GA_SUP_50014_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50014_SELLOUTPayload<ExtArgs>,
                T,
                'update'
            >,
            never,
            ExtArgs
        >

        /**
         * Delete zero or more GA_SUP_50014_SELLOUTS.
         * @param {GA_SUP_50014_SELLOUTDeleteManyArgs} args - Arguments to filter GA_SUP_50014_SELLOUTS to delete.
         * @example
         * // Delete a few GA_SUP_50014_SELLOUTS
         * const { count } = await prisma.gA_SUP_50014_SELLOUT.deleteMany({
         *   where: {
         *     // ... provide filter here
         *   }
         * })
         *
         **/
        deleteMany<T extends GA_SUP_50014_SELLOUTDeleteManyArgs<ExtArgs>>(
            args?: SelectSubset<T, GA_SUP_50014_SELLOUTDeleteManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Update zero or more GA_SUP_50014_SELLOUTS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50014_SELLOUTUpdateManyArgs} args - Arguments to update one or more rows.
         * @example
         * // Update many GA_SUP_50014_SELLOUTS
         * const gA_SUP_50014_SELLOUT = await prisma.gA_SUP_50014_SELLOUT.updateMany({
         *   where: {
         *     // ... provide filter here
         *   },
         *   data: {
         *     // ... provide data here
         *   }
         * })
         *
         **/
        updateMany<T extends GA_SUP_50014_SELLOUTUpdateManyArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50014_SELLOUTUpdateManyArgs<ExtArgs>>
        ): Prisma.PrismaPromise<BatchPayload>

        /**
         * Create or update one GA_SUP_50014_SELLOUT.
         * @param {GA_SUP_50014_SELLOUTUpsertArgs} args - Arguments to update or create a GA_SUP_50014_SELLOUT.
         * @example
         * // Update or create a GA_SUP_50014_SELLOUT
         * const gA_SUP_50014_SELLOUT = await prisma.gA_SUP_50014_SELLOUT.upsert({
         *   create: {
         *     // ... data to create a GA_SUP_50014_SELLOUT
         *   },
         *   update: {
         *     // ... in case it already exists, update
         *   },
         *   where: {
         *     // ... the filter for the GA_SUP_50014_SELLOUT we want to update
         *   }
         * })
         **/
        upsert<T extends GA_SUP_50014_SELLOUTUpsertArgs<ExtArgs>>(
            args: SelectSubset<T, GA_SUP_50014_SELLOUTUpsertArgs<ExtArgs>>
        ): Prisma__GA_SUP_50014_SELLOUTClient<
            $Result.GetResult<
                Prisma.$GA_SUP_50014_SELLOUTPayload<ExtArgs>,
                T,
                'upsert'
            >,
            never,
            ExtArgs
        >

        /**
         * Count the number of GA_SUP_50014_SELLOUTS.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50014_SELLOUTCountArgs} args - Arguments to filter GA_SUP_50014_SELLOUTS to count.
         * @example
         * // Count the number of GA_SUP_50014_SELLOUTS
         * const count = await prisma.gA_SUP_50014_SELLOUT.count({
         *   where: {
         *     // ... the filter for the GA_SUP_50014_SELLOUTS we want to count
         *   }
         * })
         **/
        count<T extends GA_SUP_50014_SELLOUTCountArgs>(
            args?: Subset<T, GA_SUP_50014_SELLOUTCountArgs>
        ): Prisma.PrismaPromise<
            T extends $Utils.Record<'select', any>
                ? T['select'] extends true
                    ? number
                    : GetScalarType<
                          T['select'],
                          GA_SUP_50014_SELLOUTCountAggregateOutputType
                      >
                : number
        >

        /**
         * Allows you to perform aggregations operations on a GA_SUP_50014_SELLOUT.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50014_SELLOUTAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
         * @example
         * // Ordered by age ascending
         * // Where email contains prisma.io
         * // Limited to the 10 users
         * const aggregations = await prisma.user.aggregate({
         *   _avg: {
         *     age: true,
         *   },
         *   where: {
         *     email: {
         *       contains: "prisma.io",
         *     },
         *   },
         *   orderBy: {
         *     age: "asc",
         *   },
         *   take: 10,
         * })
         **/
        aggregate<T extends GA_SUP_50014_SELLOUTAggregateArgs>(
            args: Subset<T, GA_SUP_50014_SELLOUTAggregateArgs>
        ): Prisma.PrismaPromise<GetGA_SUP_50014_SELLOUTAggregateType<T>>

        /**
         * Group by GA_SUP_50014_SELLOUT.
         * Note, that providing `undefined` is treated as the value not being there.
         * Read more here: https://pris.ly/d/null-undefined
         * @param {GA_SUP_50014_SELLOUTGroupByArgs} args - Group by arguments.
         * @example
         * // Group by city, order by createdAt, get count
         * const result = await prisma.user.groupBy({
         *   by: ['city', 'createdAt'],
         *   orderBy: {
         *     createdAt: true
         *   },
         *   _count: {
         *     _all: true
         *   },
         * })
         *
         **/
        groupBy<
            T extends GA_SUP_50014_SELLOUTGroupByArgs,
            HasSelectOrTake extends Or<
                Extends<'skip', Keys<T>>,
                Extends<'take', Keys<T>>
            >,
            OrderByArg extends True extends HasSelectOrTake
                ? { orderBy: GA_SUP_50014_SELLOUTGroupByArgs['orderBy'] }
                : { orderBy?: GA_SUP_50014_SELLOUTGroupByArgs['orderBy'] },
            OrderFields extends ExcludeUnderscoreKeys<
                Keys<MaybeTupleToUnion<T['orderBy']>>
            >,
            ByFields extends MaybeTupleToUnion<T['by']>,
            ByValid extends Has<ByFields, OrderFields>,
            HavingFields extends GetHavingFields<T['having']>,
            HavingValid extends Has<ByFields, HavingFields>,
            ByEmpty extends T['by'] extends never[] ? True : False,
            InputErrors extends ByEmpty extends True
                ? `Error: "by" must not be empty.`
                : HavingValid extends False
                  ? {
                        [P in HavingFields]: P extends ByFields
                            ? never
                            : P extends string
                              ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                              : [
                                    Error,
                                    'Field ',
                                    P,
                                    ` in "having" needs to be provided in "by"`,
                                ]
                    }[HavingFields]
                  : 'take' extends Keys<T>
                    ? 'orderBy' extends Keys<T>
                        ? ByValid extends True
                            ? {}
                            : {
                                  [P in OrderFields]: P extends ByFields
                                      ? never
                                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                              }[OrderFields]
                        : 'Error: If you provide "take", you also need to provide "orderBy"'
                    : 'skip' extends Keys<T>
                      ? 'orderBy' extends Keys<T>
                          ? ByValid extends True
                              ? {}
                              : {
                                    [P in OrderFields]: P extends ByFields
                                        ? never
                                        : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                                }[OrderFields]
                          : 'Error: If you provide "skip", you also need to provide "orderBy"'
                      : ByValid extends True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
                          }[OrderFields],
        >(
            args: SubsetIntersection<
                T,
                GA_SUP_50014_SELLOUTGroupByArgs,
                OrderByArg
            > &
                InputErrors
        ): {} extends InputErrors
            ? GetGA_SUP_50014_SELLOUTGroupByPayload<T>
            : Prisma.PrismaPromise<InputErrors>
        /**
         * Fields of the GA_SUP_50014_SELLOUT model
         */
        readonly fields: GA_SUP_50014_SELLOUTFieldRefs
    }

    /**
     * The delegate class that acts as a "Promise-like" for GA_SUP_50014_SELLOUT.
     * Why is this prefixed with `Prisma__`?
     * Because we want to prevent naming conflicts as mentioned in
     * https://github.com/prisma/prisma-client-js/issues/707
     */
    export interface Prisma__GA_SUP_50014_SELLOUTClient<
        T,
        Null = never,
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > extends Prisma.PrismaPromise<T> {
        readonly [Symbol.toStringTag]: 'PrismaPromise'

        /**
         * Attaches callbacks for the resolution and/or rejection of the Promise.
         * @param onfulfilled The callback to execute when the Promise is resolved.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of which ever callback is executed.
         */
        then<TResult1 = T, TResult2 = never>(
            onfulfilled?:
                | ((value: T) => TResult1 | PromiseLike<TResult1>)
                | undefined
                | null,
            onrejected?:
                | ((reason: any) => TResult2 | PromiseLike<TResult2>)
                | undefined
                | null
        ): $Utils.JsPromise<TResult1 | TResult2>
        /**
         * Attaches a callback for only the rejection of the Promise.
         * @param onrejected The callback to execute when the Promise is rejected.
         * @returns A Promise for the completion of the callback.
         */
        catch<TResult = never>(
            onrejected?:
                | ((reason: any) => TResult | PromiseLike<TResult>)
                | undefined
                | null
        ): $Utils.JsPromise<T | TResult>
        /**
         * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
         * resolved value cannot be modified from the callback.
         * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
         * @returns A Promise for the completion of the callback.
         */
        finally(
            onfinally?: (() => void) | undefined | null
        ): $Utils.JsPromise<T>
    }

    /**
     * Fields of the GA_SUP_50014_SELLOUT model
     */
    interface GA_SUP_50014_SELLOUTFieldRefs {
        readonly SPR_SPH_ID: FieldRef<'GA_SUP_50014_SELLOUT', 'Int'>
        readonly SPR_INN: FieldRef<'GA_SUP_50014_SELLOUT', 'String'>
        readonly SPR_CLIENT: FieldRef<'GA_SUP_50014_SELLOUT', 'String'>
        readonly SPR_GROUPTYPE: FieldRef<'GA_SUP_50014_SELLOUT', 'String'>
        readonly SPR_ARTICLE: FieldRef<'GA_SUP_50014_SELLOUT', 'String'>
        readonly SPR_BRAND: FieldRef<'GA_SUP_50014_SELLOUT', 'String'>
        readonly SPR_INFO: FieldRef<'GA_SUP_50014_SELLOUT', 'String'>
        readonly SPR_QTY: FieldRef<'GA_SUP_50014_SELLOUT', 'Float'>
        readonly SPR_PRICE: FieldRef<'GA_SUP_50014_SELLOUT', 'Float'>
        readonly SPR_SUMMA: FieldRef<'GA_SUP_50014_SELLOUT', 'Float'>
        readonly SPR_ART_ID: FieldRef<'GA_SUP_50014_SELLOUT', 'Int'>
        readonly SPR_DATETIME: FieldRef<'GA_SUP_50014_SELLOUT', 'DateTime'>
        readonly SPR_ADDR: FieldRef<'GA_SUP_50014_SELLOUT', 'String'>
        readonly SPR_CLIENT_CODE: FieldRef<'GA_SUP_50014_SELLOUT', 'String'>
        readonly SPR_CLIENT_ID: FieldRef<'GA_SUP_50014_SELLOUT', 'String'>
        readonly SPR_CLIENT_CODE2: FieldRef<'GA_SUP_50014_SELLOUT', 'String'>
        readonly SPR_ADDR_ENC: FieldRef<'GA_SUP_50014_SELLOUT', 'String'>
    }

    // Custom InputTypes

    /**
     * GA_SUP_50014_SELLOUT findUnique
     */
    export type GA_SUP_50014_SELLOUTFindUniqueArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50014_SELLOUT
         */
        select?: GA_SUP_50014_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter, which GA_SUP_50014_SELLOUT to fetch.
         */
        where: GA_SUP_50014_SELLOUTWhereUniqueInput
    }

    /**
     * GA_SUP_50014_SELLOUT findUniqueOrThrow
     */
    export type GA_SUP_50014_SELLOUTFindUniqueOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50014_SELLOUT
         */
        select?: GA_SUP_50014_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter, which GA_SUP_50014_SELLOUT to fetch.
         */
        where: GA_SUP_50014_SELLOUTWhereUniqueInput
    }

    /**
     * GA_SUP_50014_SELLOUT findFirst
     */
    export type GA_SUP_50014_SELLOUTFindFirstArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50014_SELLOUT
         */
        select?: GA_SUP_50014_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter, which GA_SUP_50014_SELLOUT to fetch.
         */
        where?: GA_SUP_50014_SELLOUTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_SUP_50014_SELLOUTS to fetch.
         */
        orderBy?:
            | GA_SUP_50014_SELLOUTOrderByWithRelationInput
            | GA_SUP_50014_SELLOUTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_SUP_50014_SELLOUTS.
         */
        cursor?: GA_SUP_50014_SELLOUTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_SUP_50014_SELLOUTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_SUP_50014_SELLOUTS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_SUP_50014_SELLOUTS.
         */
        distinct?:
            | GA_SUP_50014_SELLOUTScalarFieldEnum
            | GA_SUP_50014_SELLOUTScalarFieldEnum[]
    }

    /**
     * GA_SUP_50014_SELLOUT findFirstOrThrow
     */
    export type GA_SUP_50014_SELLOUTFindFirstOrThrowArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50014_SELLOUT
         */
        select?: GA_SUP_50014_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter, which GA_SUP_50014_SELLOUT to fetch.
         */
        where?: GA_SUP_50014_SELLOUTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_SUP_50014_SELLOUTS to fetch.
         */
        orderBy?:
            | GA_SUP_50014_SELLOUTOrderByWithRelationInput
            | GA_SUP_50014_SELLOUTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for searching for GA_SUP_50014_SELLOUTS.
         */
        cursor?: GA_SUP_50014_SELLOUTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_SUP_50014_SELLOUTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_SUP_50014_SELLOUTS.
         */
        skip?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
         *
         * Filter by unique combinations of GA_SUP_50014_SELLOUTS.
         */
        distinct?:
            | GA_SUP_50014_SELLOUTScalarFieldEnum
            | GA_SUP_50014_SELLOUTScalarFieldEnum[]
    }

    /**
     * GA_SUP_50014_SELLOUT findMany
     */
    export type GA_SUP_50014_SELLOUTFindManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50014_SELLOUT
         */
        select?: GA_SUP_50014_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter, which GA_SUP_50014_SELLOUTS to fetch.
         */
        where?: GA_SUP_50014_SELLOUTWhereInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
         *
         * Determine the order of GA_SUP_50014_SELLOUTS to fetch.
         */
        orderBy?:
            | GA_SUP_50014_SELLOUTOrderByWithRelationInput
            | GA_SUP_50014_SELLOUTOrderByWithRelationInput[]
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
         *
         * Sets the position for listing GA_SUP_50014_SELLOUTS.
         */
        cursor?: GA_SUP_50014_SELLOUTWhereUniqueInput
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Take `±n` GA_SUP_50014_SELLOUTS from the position of the cursor.
         */
        take?: number
        /**
         * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
         *
         * Skip the first `n` GA_SUP_50014_SELLOUTS.
         */
        skip?: number
        distinct?:
            | GA_SUP_50014_SELLOUTScalarFieldEnum
            | GA_SUP_50014_SELLOUTScalarFieldEnum[]
    }

    /**
     * GA_SUP_50014_SELLOUT create
     */
    export type GA_SUP_50014_SELLOUTCreateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50014_SELLOUT
         */
        select?: GA_SUP_50014_SELLOUTSelect<ExtArgs> | null
        /**
         * The data needed to create a GA_SUP_50014_SELLOUT.
         */
        data: XOR<
            GA_SUP_50014_SELLOUTCreateInput,
            GA_SUP_50014_SELLOUTUncheckedCreateInput
        >
    }

    /**
     * GA_SUP_50014_SELLOUT createMany
     */
    export type GA_SUP_50014_SELLOUTCreateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to create many GA_SUP_50014_SELLOUTS.
         */
        data:
            | GA_SUP_50014_SELLOUTCreateManyInput
            | GA_SUP_50014_SELLOUTCreateManyInput[]
        skipDuplicates?: boolean
    }

    /**
     * GA_SUP_50014_SELLOUT update
     */
    export type GA_SUP_50014_SELLOUTUpdateArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50014_SELLOUT
         */
        select?: GA_SUP_50014_SELLOUTSelect<ExtArgs> | null
        /**
         * The data needed to update a GA_SUP_50014_SELLOUT.
         */
        data: XOR<
            GA_SUP_50014_SELLOUTUpdateInput,
            GA_SUP_50014_SELLOUTUncheckedUpdateInput
        >
        /**
         * Choose, which GA_SUP_50014_SELLOUT to update.
         */
        where: GA_SUP_50014_SELLOUTWhereUniqueInput
    }

    /**
     * GA_SUP_50014_SELLOUT updateMany
     */
    export type GA_SUP_50014_SELLOUTUpdateManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * The data used to update GA_SUP_50014_SELLOUTS.
         */
        data: XOR<
            GA_SUP_50014_SELLOUTUpdateManyMutationInput,
            GA_SUP_50014_SELLOUTUncheckedUpdateManyInput
        >
        /**
         * Filter which GA_SUP_50014_SELLOUTS to update
         */
        where?: GA_SUP_50014_SELLOUTWhereInput
    }

    /**
     * GA_SUP_50014_SELLOUT upsert
     */
    export type GA_SUP_50014_SELLOUTUpsertArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50014_SELLOUT
         */
        select?: GA_SUP_50014_SELLOUTSelect<ExtArgs> | null
        /**
         * The filter to search for the GA_SUP_50014_SELLOUT to update in case it exists.
         */
        where: GA_SUP_50014_SELLOUTWhereUniqueInput
        /**
         * In case the GA_SUP_50014_SELLOUT found by the `where` argument doesn't exist, create a new GA_SUP_50014_SELLOUT with this data.
         */
        create: XOR<
            GA_SUP_50014_SELLOUTCreateInput,
            GA_SUP_50014_SELLOUTUncheckedCreateInput
        >
        /**
         * In case the GA_SUP_50014_SELLOUT was found with the provided `where` argument, update it with this data.
         */
        update: XOR<
            GA_SUP_50014_SELLOUTUpdateInput,
            GA_SUP_50014_SELLOUTUncheckedUpdateInput
        >
    }

    /**
     * GA_SUP_50014_SELLOUT delete
     */
    export type GA_SUP_50014_SELLOUTDeleteArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50014_SELLOUT
         */
        select?: GA_SUP_50014_SELLOUTSelect<ExtArgs> | null
        /**
         * Filter which GA_SUP_50014_SELLOUT to delete.
         */
        where: GA_SUP_50014_SELLOUTWhereUniqueInput
    }

    /**
     * GA_SUP_50014_SELLOUT deleteMany
     */
    export type GA_SUP_50014_SELLOUTDeleteManyArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Filter which GA_SUP_50014_SELLOUTS to delete
         */
        where?: GA_SUP_50014_SELLOUTWhereInput
    }

    /**
     * GA_SUP_50014_SELLOUT without action
     */
    export type GA_SUP_50014_SELLOUTDefaultArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = {
        /**
         * Select specific fields to fetch from the GA_SUP_50014_SELLOUT
         */
        select?: GA_SUP_50014_SELLOUTSelect<ExtArgs> | null
    }

    /**
     * Enums
     */

    export const TransactionIsolationLevel: {
        ReadUncommitted: 'ReadUncommitted'
        ReadCommitted: 'ReadCommitted'
        RepeatableRead: 'RepeatableRead'
        Serializable: 'Serializable'
    }

    export type TransactionIsolationLevel =
        (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]

    export const GA_ANKETA_ADDRScalarFieldEnum: {
        AAD_ABA_ID: 'AAD_ABA_ID'
        AAD_SHIROTA: 'AAD_SHIROTA'
        AAD_DOLGOTA: 'AAD_DOLGOTA'
        AAD_OBLAST: 'AAD_OBLAST'
        AAD_GOROD: 'AAD_GOROD'
        AAD_ADDR: 'AAD_ADDR'
    }

    export type GA_ANKETA_ADDRScalarFieldEnum =
        (typeof GA_ANKETA_ADDRScalarFieldEnum)[keyof typeof GA_ANKETA_ADDRScalarFieldEnum]

    export const GA_ANKETA_BASEScalarFieldEnum: {
        ABA_WSU_ID: 'ABA_WSU_ID'
        ABA_STO_NAME: 'ABA_STO_NAME'
        ABA_STO_ID1: 'ABA_STO_ID1'
        ABA_REMZONA_QTY: 'ABA_REMZONA_QTY'
        ABA_ENABLED: 'ABA_ENABLED'
        ABA_PHONE: 'ABA_PHONE'
        ABA_INN: 'ABA_INN'
        ABA_DATETIME_CREATED: 'ABA_DATETIME_CREATED'
        ABA_DATETIME_UPDATED: 'ABA_DATETIME_UPDATED'
        ABA_ID: 'ABA_ID'
        ABA_DATETIME: 'ABA_DATETIME'
        ABA_STO_ID2: 'ABA_STO_ID2'
        ABA_STO_NAME_FIND: 'ABA_STO_NAME_FIND'
    }

    export type GA_ANKETA_BASEScalarFieldEnum =
        (typeof GA_ANKETA_BASEScalarFieldEnum)[keyof typeof GA_ANKETA_BASEScalarFieldEnum]

    export const GA_ANKETA_BILETSScalarFieldEnum: {
        BIL_INN: 'BIL_INN'
        BIL_LOGIN: 'BIL_LOGIN'
        BIL_N1: 'BIL_N1'
        BIL_N2: 'BIL_N2'
        BIL_N3: 'BIL_N3'
        BIL_N4: 'BIL_N4'
        BIL_N5: 'BIL_N5'
        BIL_N6: 'BIL_N6'
        BIL_N7: 'BIL_N7'
        BIL_WSU_ID: 'BIL_WSU_ID'
        BIL_N8: 'BIL_N8'
        BIL_ABA_ID: 'BIL_ABA_ID'
        BIL_DATETIME: 'BIL_DATETIME'
    }

    export type GA_ANKETA_BILETSScalarFieldEnum =
        (typeof GA_ANKETA_BILETSScalarFieldEnum)[keyof typeof GA_ANKETA_BILETSScalarFieldEnum]

    export const GA_ANKETA_BRAND_IMGScalarFieldEnum: {
        ABI_ABA_ID: 'ABI_ABA_ID'
        ABI_NUM: 'ABI_NUM'
        ABI_NAME: 'ABI_NAME'
        ABI_PATH: 'ABI_PATH'
    }

    export type GA_ANKETA_BRAND_IMGScalarFieldEnum =
        (typeof GA_ANKETA_BRAND_IMGScalarFieldEnum)[keyof typeof GA_ANKETA_BRAND_IMGScalarFieldEnum]

    export const GA_ANKETA_DIRScalarFieldEnum: {
        AIR_ABA_ID: 'AIR_ABA_ID'
        AIR_NAME1: 'AIR_NAME1'
        AIR_NAME2: 'AIR_NAME2'
        AIR_NAME3: 'AIR_NAME3'
        AIR_PHONE: 'AIR_PHONE'
        AIR_EMAIL: 'AIR_EMAIL'
    }

    export type GA_ANKETA_DIRScalarFieldEnum =
        (typeof GA_ANKETA_DIRScalarFieldEnum)[keyof typeof GA_ANKETA_DIRScalarFieldEnum]

    export const GA_ANKETA_DOGOVORScalarFieldEnum: {
        ADO_ABA_ID: 'ADO_ABA_ID'
        ADO_NAME1: 'ADO_NAME1'
        ADO_NAME2: 'ADO_NAME2'
        ADO_NAME3: 'ADO_NAME3'
        ADO_PHONE: 'ADO_PHONE'
        ADO_EMAIL: 'ADO_EMAIL'
        ADO_DATETIME: 'ADO_DATETIME'
        ADO_STATUS: 'ADO_STATUS'
    }

    export type GA_ANKETA_DOGOVORScalarFieldEnum =
        (typeof GA_ANKETA_DOGOVORScalarFieldEnum)[keyof typeof GA_ANKETA_DOGOVORScalarFieldEnum]

    export const GA_ANKETA_OBOROTScalarFieldEnum: {
        ABO_ABA_ID: 'ABO_ABA_ID'
        ABO_DATETIME: 'ABO_DATETIME'
        ABO_OBOROT_ALL: 'ABO_OBOROT_ALL'
        ABO_OBOROT_BRANDS_MONTH: 'ABO_OBOROT_BRANDS_MONTH'
        ABO_OBOROT_AE: 'ABO_OBOROT_AE'
        ABO_OBOROT_ROSSKO: 'ABO_OBOROT_ROSSKO'
        ABO_OBOROT_ARKONA: 'ABO_OBOROT_ARKONA'
        ABO_OBOROT_AUTORUS: 'ABO_OBOROT_AUTORUS'
        ABO_SCORES_MONTH_PLAN: 'ABO_SCORES_MONTH_PLAN'
        ABO_SCORES_MONTH_FAKT: 'ABO_SCORES_MONTH_FAKT'
        ABO_COUNT_ROSSKO: 'ABO_COUNT_ROSSKO'
        ABO_COUNT_AE: 'ABO_COUNT_AE'
        ABO_COUNT_ARKONA: 'ABO_COUNT_ARKONA'
        ABO_COUNT_AUTORUS: 'ABO_COUNT_AUTORUS'
        ABO_OBOROT_BRANDS: 'ABO_OBOROT_BRANDS'
        ABO_OBOROT_BRAND_LOOK1: 'ABO_OBOROT_BRAND_LOOK1'
        ABO_SCORES: 'ABO_SCORES'
        ABO_OBOROT_BRAND_LOOK2: 'ABO_OBOROT_BRAND_LOOK2'
        ABO_OBOROT_BRAND_LOOK2_ROSSKO: 'ABO_OBOROT_BRAND_LOOK2_ROSSKO'
        ABO_OBOROT_BRAND_LOOK2_AE: 'ABO_OBOROT_BRAND_LOOK2_AE'
        ABO_OBOROT_BRAND_LOOK2_ARKONA: 'ABO_OBOROT_BRAND_LOOK2_ARKONA'
        ABO_OBOROT_BRAND_LOOK2_AUTORUS: 'ABO_OBOROT_BRAND_LOOK2_AUTORUS'
        ABO_OBOROT_BRANDS_MONTH_ROSSKO: 'ABO_OBOROT_BRANDS_MONTH_ROSSKO'
        ABO_OBOROT_BRANDS_MONTH_AE: 'ABO_OBOROT_BRANDS_MONTH_AE'
        ABO_OBOROT_BRANDS_MONTH_ARKONA: 'ABO_OBOROT_BRANDS_MONTH_ARKONA'
        ABO_OBOROT_BRANDS_MONTH_AUTORUS: 'ABO_OBOROT_BRANDS_MONTH_AUTORUS'
        ABO_OBOROT_BRAND1: 'ABO_OBOROT_BRAND1'
        ABO_OBOROT_BRAND2: 'ABO_OBOROT_BRAND2'
        ABO_OBOROT_BRAND3: 'ABO_OBOROT_BRAND3'
        ABO_OBOROT_BRAND4: 'ABO_OBOROT_BRAND4'
        ABO_OBOROT_BRAND5: 'ABO_OBOROT_BRAND5'
        ABO_OBOROT_BRAND6: 'ABO_OBOROT_BRAND6'
        ABO_OBOROT_NEXT: 'ABO_OBOROT_NEXT'
        ABO_SCORES_MONTH_PLAN_NEXT: 'ABO_SCORES_MONTH_PLAN_NEXT'
        ABO_ABA_REMZONA_QTY: 'ABO_ABA_REMZONA_QTY'
    }

    export type GA_ANKETA_OBOROTScalarFieldEnum =
        (typeof GA_ANKETA_OBOROTScalarFieldEnum)[keyof typeof GA_ANKETA_OBOROTScalarFieldEnum]

    export const GA_ANKETA_OBOROT_BRANDSScalarFieldEnum: {
        AOB_ABA_ID: 'AOB_ABA_ID'
        AOB_DATETIME: 'AOB_DATETIME'
        AOB_ALL_24189: 'AOB_ALL_24189'
        AOB_50011_24189: 'AOB_50011_24189'
        AOB_50012_24189: 'AOB_50012_24189'
        AOB_50013_24189: 'AOB_50013_24189'
        AOB_50014_24189: 'AOB_50014_24189'
        AOB_ALL_10566: 'AOB_ALL_10566'
        AOB_50011_10566: 'AOB_50011_10566'
        AOB_50012_10566: 'AOB_50012_10566'
        AOB_50013_10566: 'AOB_50013_10566'
        AOB_50014_10566: 'AOB_50014_10566'
        AOB_ALL_20079: 'AOB_ALL_20079'
        AOB_50011_20079: 'AOB_50011_20079'
        AOB_50012_20079: 'AOB_50012_20079'
        AOB_50013_20079: 'AOB_50013_20079'
        AOB_50014_20079: 'AOB_50014_20079'
        AOB_ALL_7251: 'AOB_ALL_7251'
        AOB_50011_7251: 'AOB_50011_7251'
        AOB_50012_7251: 'AOB_50012_7251'
        AOB_50013_7251: 'AOB_50013_7251'
        AOB_50014_7251: 'AOB_50014_7251'
        AOB_ALL_24191: 'AOB_ALL_24191'
        AOB_50011_24191: 'AOB_50011_24191'
        AOB_50012_24191: 'AOB_50012_24191'
        AOB_50013_24191: 'AOB_50013_24191'
        AOB_50014_24191: 'AOB_50014_24191'
        AOB_ALL_193: 'AOB_ALL_193'
        AOB_50011_193: 'AOB_50011_193'
        AOB_50012_193: 'AOB_50012_193'
        AOB_50013_193: 'AOB_50013_193'
        AOB_50014_193: 'AOB_50014_193'
        AOB_ALL_7610: 'AOB_ALL_7610'
        AOB_50011_7610: 'AOB_50011_7610'
        AOB_50012_7610: 'AOB_50012_7610'
        AOB_50013_7610: 'AOB_50013_7610'
        AOB_50014_7610: 'AOB_50014_7610'
        AOB_ALL_10180: 'AOB_ALL_10180'
        AOB_50011_10180: 'AOB_50011_10180'
        AOB_50012_10180: 'AOB_50012_10180'
        AOB_50013_10180: 'AOB_50013_10180'
        AOB_50014_10180: 'AOB_50014_10180'
        AOB_ALL_177: 'AOB_ALL_177'
        AOB_50011_177: 'AOB_50011_177'
        AOB_50012_177: 'AOB_50012_177'
        AOB_50013_177: 'AOB_50013_177'
        AOB_50014_177: 'AOB_50014_177'
        AOB_ALL_10223: 'AOB_ALL_10223'
        AOB_50011_10223: 'AOB_50011_10223'
        AOB_50012_10223: 'AOB_50012_10223'
        AOB_50013_10223: 'AOB_50013_10223'
        AOB_50014_10223: 'AOB_50014_10223'
        AOB_ALL_7230: 'AOB_ALL_7230'
        AOB_50011_7230: 'AOB_50011_7230'
        AOB_50012_7230: 'AOB_50012_7230'
        AOB_50013_7230: 'AOB_50013_7230'
        AOB_50014_7230: 'AOB_50014_7230'
        AOB_ALL_1359: 'AOB_ALL_1359'
        AOB_50011_1359: 'AOB_50011_1359'
        AOB_50012_1359: 'AOB_50012_1359'
        AOB_50013_1359: 'AOB_50013_1359'
        AOB_50014_1359: 'AOB_50014_1359'
        AOB_ALL_110: 'AOB_ALL_110'
        AOB_50011_110: 'AOB_50011_110'
        AOB_50012_110: 'AOB_50012_110'
        AOB_50013_110: 'AOB_50013_110'
        AOB_50014_110: 'AOB_50014_110'
        AOB_ALL_20182: 'AOB_ALL_20182'
        AOB_50011_20182: 'AOB_50011_20182'
        AOB_50012_20182: 'AOB_50012_20182'
        AOB_50013_20182: 'AOB_50013_20182'
        AOB_50014_20182: 'AOB_50014_20182'
        AOB_ALL_20203: 'AOB_ALL_20203'
        AOB_50011_20203: 'AOB_50011_20203'
        AOB_50012_20203: 'AOB_50012_20203'
        AOB_50013_20203: 'AOB_50013_20203'
        AOB_50014_20203: 'AOB_50014_20203'
        AOB_ALL_24155: 'AOB_ALL_24155'
        AOB_50011_24155: 'AOB_50011_24155'
        AOB_50012_24155: 'AOB_50012_24155'
        AOB_50013_24155: 'AOB_50013_24155'
        AOB_50014_24155: 'AOB_50014_24155'
        AOB_ALL_24198: 'AOB_ALL_24198'
        AOB_50011_24198: 'AOB_50011_24198'
        AOB_50012_24198: 'AOB_50012_24198'
        AOB_50013_24198: 'AOB_50013_24198'
        AOB_50014_24198: 'AOB_50014_24198'
        AOB_ALL_135: 'AOB_ALL_135'
        AOB_50011_135: 'AOB_50011_135'
        AOB_50012_135: 'AOB_50012_135'
        AOB_50013_135: 'AOB_50013_135'
        AOB_50014_135: 'AOB_50014_135'
        AOB_ALL_24196: 'AOB_ALL_24196'
        AOB_50011_24196: 'AOB_50011_24196'
        AOB_50012_24196: 'AOB_50012_24196'
        AOB_50013_24196: 'AOB_50013_24196'
        AOB_50014_24196: 'AOB_50014_24196'
        AOB_ALL_24197: 'AOB_ALL_24197'
        AOB_50011_24197: 'AOB_50011_24197'
        AOB_50012_24197: 'AOB_50012_24197'
        AOB_50013_24197: 'AOB_50013_24197'
        AOB_50014_24197: 'AOB_50014_24197'
        AOB_ALL_21: 'AOB_ALL_21'
        AOB_50011_21: 'AOB_50011_21'
        AOB_50012_21: 'AOB_50012_21'
        AOB_50013_21: 'AOB_50013_21'
        AOB_50014_21: 'AOB_50014_21'
    }

    export type GA_ANKETA_OBOROT_BRANDSScalarFieldEnum =
        (typeof GA_ANKETA_OBOROT_BRANDSScalarFieldEnum)[keyof typeof GA_ANKETA_OBOROT_BRANDSScalarFieldEnum]

    export const GA_ANKETA_OBOROT_BRANDS2ScalarFieldEnum: {
        AOB_ABA_ID: 'AOB_ABA_ID'
        AOB_DATETIME: 'AOB_DATETIME'
        AOB_ALL_7438: 'AOB_ALL_7438'
        AOB_50011_7438: 'AOB_50011_7438'
        AOB_50012_7438: 'AOB_50012_7438'
        AOB_50013_7438: 'AOB_50013_7438'
        AOB_50014_7438: 'AOB_50014_7438'
        AOB_ALL_7801: 'AOB_ALL_7801'
        AOB_50011_7801: 'AOB_50011_7801'
        AOB_50012_7801: 'AOB_50012_7801'
        AOB_50013_7801: 'AOB_50013_7801'
        AOB_50014_7801: 'AOB_50014_7801'
        AOB_ALL_7763: 'AOB_ALL_7763'
        AOB_50011_7763: 'AOB_50011_7763'
        AOB_50012_7763: 'AOB_50012_7763'
        AOB_50013_7763: 'AOB_50013_7763'
        AOB_50014_7763: 'AOB_50014_7763'
        AOB_ALL_265: 'AOB_ALL_265'
        AOB_50011_265: 'AOB_50011_265'
        AOB_50012_265: 'AOB_50012_265'
        AOB_50013_265: 'AOB_50013_265'
        AOB_50014_265: 'AOB_50014_265'
        AOB_ALL_24158: 'AOB_ALL_24158'
        AOB_50011_24158: 'AOB_50011_24158'
        AOB_50012_24158: 'AOB_50012_24158'
        AOB_50013_24158: 'AOB_50013_24158'
        AOB_50014_24158: 'AOB_50014_24158'
        AOB_ALL_7219: 'AOB_ALL_7219'
        AOB_50011_7219: 'AOB_50011_7219'
        AOB_50012_7219: 'AOB_50012_7219'
        AOB_50013_7219: 'AOB_50013_7219'
        AOB_50014_7219: 'AOB_50014_7219'
    }

    export type GA_ANKETA_OBOROT_BRANDS2ScalarFieldEnum =
        (typeof GA_ANKETA_OBOROT_BRANDS2ScalarFieldEnum)[keyof typeof GA_ANKETA_OBOROT_BRANDS2ScalarFieldEnum]

    export const GA_ANKETA_OBOROT_COUNTSScalarFieldEnum: {
        AOC_ABA_ID: 'AOC_ABA_ID'
        AOC_DATETIME: 'AOC_DATETIME'
        AOC_ALL_24189: 'AOC_ALL_24189'
        AOC_50011_24189: 'AOC_50011_24189'
        AOC_50012_24189: 'AOC_50012_24189'
        AOC_50013_24189: 'AOC_50013_24189'
        AOC_50014_24189: 'AOC_50014_24189'
        AOC_ALL_10566: 'AOC_ALL_10566'
        AOC_50011_10566: 'AOC_50011_10566'
        AOC_50012_10566: 'AOC_50012_10566'
        AOC_50013_10566: 'AOC_50013_10566'
        AOC_50014_10566: 'AOC_50014_10566'
        AOC_ALL_20079: 'AOC_ALL_20079'
        AOC_50011_20079: 'AOC_50011_20079'
        AOC_50012_20079: 'AOC_50012_20079'
        AOC_50013_20079: 'AOC_50013_20079'
        AOC_50014_20079: 'AOC_50014_20079'
        AOC_ALL_7251: 'AOC_ALL_7251'
        AOC_50011_7251: 'AOC_50011_7251'
        AOC_50012_7251: 'AOC_50012_7251'
        AOC_50013_7251: 'AOC_50013_7251'
        AOC_50014_7251: 'AOC_50014_7251'
        AOC_ALL_24191: 'AOC_ALL_24191'
        AOC_50011_24191: 'AOC_50011_24191'
        AOC_50012_24191: 'AOC_50012_24191'
        AOC_50013_24191: 'AOC_50013_24191'
        AOC_50014_24191: 'AOC_50014_24191'
        AOC_ALL_193: 'AOC_ALL_193'
        AOC_50011_193: 'AOC_50011_193'
        AOC_50012_193: 'AOC_50012_193'
        AOC_50013_193: 'AOC_50013_193'
        AOC_50014_193: 'AOC_50014_193'
        AOC_ALL_7610: 'AOC_ALL_7610'
        AOC_50011_7610: 'AOC_50011_7610'
        AOC_50012_7610: 'AOC_50012_7610'
        AOC_50013_7610: 'AOC_50013_7610'
        AOC_50014_7610: 'AOC_50014_7610'
        AOC_ALL_10180: 'AOC_ALL_10180'
        AOC_50011_10180: 'AOC_50011_10180'
        AOC_50012_10180: 'AOC_50012_10180'
        AOC_50013_10180: 'AOC_50013_10180'
        AOC_50014_10180: 'AOC_50014_10180'
        AOC_ALL_177: 'AOC_ALL_177'
        AOC_50011_177: 'AOC_50011_177'
        AOC_50012_177: 'AOC_50012_177'
        AOC_50013_177: 'AOC_50013_177'
        AOC_50014_177: 'AOC_50014_177'
        AOC_ALL_10223: 'AOC_ALL_10223'
        AOC_50011_10223: 'AOC_50011_10223'
        AOC_50012_10223: 'AOC_50012_10223'
        AOC_50013_10223: 'AOC_50013_10223'
        AOC_50014_10223: 'AOC_50014_10223'
        AOC_ALL_7230: 'AOC_ALL_7230'
        AOC_50011_7230: 'AOC_50011_7230'
        AOC_50012_7230: 'AOC_50012_7230'
        AOC_50013_7230: 'AOC_50013_7230'
        AOC_50014_7230: 'AOC_50014_7230'
        AOC_ALL_1359: 'AOC_ALL_1359'
        AOC_50011_1359: 'AOC_50011_1359'
        AOC_50012_1359: 'AOC_50012_1359'
        AOC_50013_1359: 'AOC_50013_1359'
        AOC_50014_1359: 'AOC_50014_1359'
        AOC_ALL_110: 'AOC_ALL_110'
        AOC_50011_110: 'AOC_50011_110'
        AOC_50012_110: 'AOC_50012_110'
        AOC_50013_110: 'AOC_50013_110'
        AOC_50014_110: 'AOC_50014_110'
        AOC_ALL_20182: 'AOC_ALL_20182'
        AOC_50011_20182: 'AOC_50011_20182'
        AOC_50012_20182: 'AOC_50012_20182'
        AOC_50013_20182: 'AOC_50013_20182'
        AOC_50014_20182: 'AOC_50014_20182'
        AOC_ALL_20203: 'AOC_ALL_20203'
        AOC_50011_20203: 'AOC_50011_20203'
        AOC_50012_20203: 'AOC_50012_20203'
        AOC_50013_20203: 'AOC_50013_20203'
        AOC_50014_20203: 'AOC_50014_20203'
        AOC_ALL_24155: 'AOC_ALL_24155'
        AOC_50011_24155: 'AOC_50011_24155'
        AOC_50012_24155: 'AOC_50012_24155'
        AOC_50013_24155: 'AOC_50013_24155'
        AOC_50014_24155: 'AOC_50014_24155'
        AOC_ALL_24198: 'AOC_ALL_24198'
        AOC_50011_24198: 'AOC_50011_24198'
        AOC_50012_24198: 'AOC_50012_24198'
        AOC_50013_24198: 'AOC_50013_24198'
        AOC_50014_24198: 'AOC_50014_24198'
        AOC_ALL_135: 'AOC_ALL_135'
        AOC_50011_135: 'AOC_50011_135'
        AOC_50012_135: 'AOC_50012_135'
        AOC_50013_135: 'AOC_50013_135'
        AOC_50014_135: 'AOC_50014_135'
        AOC_ALL_24196: 'AOC_ALL_24196'
        AOC_50011_24196: 'AOC_50011_24196'
        AOC_50012_24196: 'AOC_50012_24196'
        AOC_50013_24196: 'AOC_50013_24196'
        AOC_50014_24196: 'AOC_50014_24196'
        AOC_ALL_24197: 'AOC_ALL_24197'
        AOC_50011_24197: 'AOC_50011_24197'
        AOC_50012_24197: 'AOC_50012_24197'
        AOC_50013_24197: 'AOC_50013_24197'
        AOC_50014_24197: 'AOC_50014_24197'
        AOC_ALL_21: 'AOC_ALL_21'
        AOC_50011_21: 'AOC_50011_21'
        AOC_50012_21: 'AOC_50012_21'
        AOC_50013_21: 'AOC_50013_21'
        AOC_50014_21: 'AOC_50014_21'
    }

    export type GA_ANKETA_OBOROT_COUNTSScalarFieldEnum =
        (typeof GA_ANKETA_OBOROT_COUNTSScalarFieldEnum)[keyof typeof GA_ANKETA_OBOROT_COUNTSScalarFieldEnum]

    export const GA_ANKETA_SCORESScalarFieldEnum: {
        ANS_WSU_ID: 'ANS_WSU_ID'
        ANS_SCORES: 'ANS_SCORES'
        ANS_DATETIME: 'ANS_DATETIME'
        ANS_ISSHOW: 'ANS_ISSHOW'
    }

    export type GA_ANKETA_SCORESScalarFieldEnum =
        (typeof GA_ANKETA_SCORESScalarFieldEnum)[keyof typeof GA_ANKETA_SCORESScalarFieldEnum]

    export const GA_ANKETA_SCORES_HISTORYScalarFieldEnum: {
        ASH_WSU_ID: 'ASH_WSU_ID'
        ASH_SCORES: 'ASH_SCORES'
        ASH_DATETIME: 'ASH_DATETIME'
        ASH_DESC: 'ASH_DESC'
        ASH_TYPE: 'ASH_TYPE'
        ASH_SCORES_OLD: 'ASH_SCORES_OLD'
        ASH_EVENT_STATUS: 'ASH_EVENT_STATUS'
        ASH_DATETIME_UPDATE: 'ASH_DATETIME_UPDATE'
        ASH_IZO_ID: 'ASH_IZO_ID'
    }

    export type GA_ANKETA_SCORES_HISTORYScalarFieldEnum =
        (typeof GA_ANKETA_SCORES_HISTORYScalarFieldEnum)[keyof typeof GA_ANKETA_SCORES_HISTORYScalarFieldEnum]

    export const GA_ANKETA_SOREVNOVANIEScalarFieldEnum: {
        ASR_YEAR: 'ASR_YEAR'
        ASR_MONTH: 'ASR_MONTH'
        ASR_WSU_ID: 'ASR_WSU_ID'
        ASR_LOGIN: 'ASR_LOGIN'
        ASR_FIO: 'ASR_FIO'
        ASR_SCORE: 'ASR_SCORE'
        ASR_DOLJNOST: 'ASR_DOLJNOST'
        ASR_RUKOVODITEL: 'ASR_RUKOVODITEL'
    }

    export type GA_ANKETA_SOREVNOVANIEScalarFieldEnum =
        (typeof GA_ANKETA_SOREVNOVANIEScalarFieldEnum)[keyof typeof GA_ANKETA_SOREVNOVANIEScalarFieldEnum]

    export const GA_SUP_50012_SELLOUTScalarFieldEnum: {
        SPR_SPH_ID: 'SPR_SPH_ID'
        SPR_INN: 'SPR_INN'
        SPR_CLIENT: 'SPR_CLIENT'
        SPR_GROUPTYPE: 'SPR_GROUPTYPE'
        SPR_ARTICLE: 'SPR_ARTICLE'
        SPR_BRAND: 'SPR_BRAND'
        SPR_INFO: 'SPR_INFO'
        SPR_QTY: 'SPR_QTY'
        SPR_PRICE: 'SPR_PRICE'
        SPR_SUMMA: 'SPR_SUMMA'
        SPR_ART_ID: 'SPR_ART_ID'
        SPR_DATETIME: 'SPR_DATETIME'
        SPR_ADDR: 'SPR_ADDR'
        SPR_CLIENT_CODE: 'SPR_CLIENT_CODE'
        SPR_CLIENT_ID: 'SPR_CLIENT_ID'
        SPR_CLIENT_CODE2: 'SPR_CLIENT_CODE2'
        SPR_ADDR_ENC: 'SPR_ADDR_ENC'
    }

    export type GA_SUP_50012_SELLOUTScalarFieldEnum =
        (typeof GA_SUP_50012_SELLOUTScalarFieldEnum)[keyof typeof GA_SUP_50012_SELLOUTScalarFieldEnum]

    export const GA_SUP_50013_SELLOUTScalarFieldEnum: {
        SPR_SPH_ID: 'SPR_SPH_ID'
        SPR_INN: 'SPR_INN'
        SPR_CLIENT: 'SPR_CLIENT'
        SPR_GROUPTYPE: 'SPR_GROUPTYPE'
        SPR_ARTICLE: 'SPR_ARTICLE'
        SPR_BRAND: 'SPR_BRAND'
        SPR_INFO: 'SPR_INFO'
        SPR_QTY: 'SPR_QTY'
        SPR_PRICE: 'SPR_PRICE'
        SPR_SUMMA: 'SPR_SUMMA'
        SPR_ART_ID: 'SPR_ART_ID'
        SPR_DATETIME: 'SPR_DATETIME'
        SPR_ADDR: 'SPR_ADDR'
        SPR_CLIENT_CODE: 'SPR_CLIENT_CODE'
        SPR_CLIENT_ID: 'SPR_CLIENT_ID'
        SPR_CLIENT_CODE2: 'SPR_CLIENT_CODE2'
        SPR_ADDR_ENC: 'SPR_ADDR_ENC'
    }

    export type GA_SUP_50013_SELLOUTScalarFieldEnum =
        (typeof GA_SUP_50013_SELLOUTScalarFieldEnum)[keyof typeof GA_SUP_50013_SELLOUTScalarFieldEnum]

    export const GA_SUP_50014_SELLOUTScalarFieldEnum: {
        SPR_SPH_ID: 'SPR_SPH_ID'
        SPR_INN: 'SPR_INN'
        SPR_CLIENT: 'SPR_CLIENT'
        SPR_GROUPTYPE: 'SPR_GROUPTYPE'
        SPR_ARTICLE: 'SPR_ARTICLE'
        SPR_BRAND: 'SPR_BRAND'
        SPR_INFO: 'SPR_INFO'
        SPR_QTY: 'SPR_QTY'
        SPR_PRICE: 'SPR_PRICE'
        SPR_SUMMA: 'SPR_SUMMA'
        SPR_ART_ID: 'SPR_ART_ID'
        SPR_DATETIME: 'SPR_DATETIME'
        SPR_ADDR: 'SPR_ADDR'
        SPR_CLIENT_CODE: 'SPR_CLIENT_CODE'
        SPR_CLIENT_ID: 'SPR_CLIENT_ID'
        SPR_CLIENT_CODE2: 'SPR_CLIENT_CODE2'
        SPR_ADDR_ENC: 'SPR_ADDR_ENC'
    }

    export type GA_SUP_50014_SELLOUTScalarFieldEnum =
        (typeof GA_SUP_50014_SELLOUTScalarFieldEnum)[keyof typeof GA_SUP_50014_SELLOUTScalarFieldEnum]

    export const SortOrder: {
        asc: 'asc'
        desc: 'desc'
    }

    export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]

    export const QueryMode: {
        default: 'default'
        insensitive: 'insensitive'
    }

    export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]

    export const NullsOrder: {
        first: 'first'
        last: 'last'
    }

    export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]

    /**
     * Field references
     */

    /**
     * Reference to a field of type 'BigInt'
     */
    export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<
        $PrismaModel,
        'BigInt'
    >

    /**
     * Reference to a field of type 'BigInt[]'
     */
    export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<
        $PrismaModel,
        'BigInt[]'
    >

    /**
     * Reference to a field of type 'String'
     */
    export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<
        $PrismaModel,
        'String'
    >

    /**
     * Reference to a field of type 'String[]'
     */
    export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<
        $PrismaModel,
        'String[]'
    >

    /**
     * Reference to a field of type 'Int'
     */
    export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<
        $PrismaModel,
        'Int'
    >

    /**
     * Reference to a field of type 'Int[]'
     */
    export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<
        $PrismaModel,
        'Int[]'
    >

    /**
     * Reference to a field of type 'Boolean'
     */
    export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<
        $PrismaModel,
        'Boolean'
    >

    /**
     * Reference to a field of type 'DateTime'
     */
    export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<
        $PrismaModel,
        'DateTime'
    >

    /**
     * Reference to a field of type 'DateTime[]'
     */
    export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<
        $PrismaModel,
        'DateTime[]'
    >

    /**
     * Reference to a field of type 'Float'
     */
    export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<
        $PrismaModel,
        'Float'
    >

    /**
     * Reference to a field of type 'Float[]'
     */
    export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<
        $PrismaModel,
        'Float[]'
    >

    /**
     * Deep Input Types
     */

    export type GA_ANKETA_ADDRWhereInput = {
        AND?: GA_ANKETA_ADDRWhereInput | GA_ANKETA_ADDRWhereInput[]
        OR?: GA_ANKETA_ADDRWhereInput[]
        NOT?: GA_ANKETA_ADDRWhereInput | GA_ANKETA_ADDRWhereInput[]
        AAD_ABA_ID?: BigIntFilter<'GA_ANKETA_ADDR'> | bigint | number
        AAD_SHIROTA?: StringFilter<'GA_ANKETA_ADDR'> | string
        AAD_DOLGOTA?: StringFilter<'GA_ANKETA_ADDR'> | string
        AAD_OBLAST?: StringFilter<'GA_ANKETA_ADDR'> | string
        AAD_GOROD?: StringFilter<'GA_ANKETA_ADDR'> | string
        AAD_ADDR?: StringFilter<'GA_ANKETA_ADDR'> | string
    }

    export type GA_ANKETA_ADDROrderByWithRelationInput = {
        AAD_ABA_ID?: SortOrder
        AAD_SHIROTA?: SortOrder
        AAD_DOLGOTA?: SortOrder
        AAD_OBLAST?: SortOrder
        AAD_GOROD?: SortOrder
        AAD_ADDR?: SortOrder
    }

    export type GA_ANKETA_ADDRWhereUniqueInput = Prisma.AtLeast<
        {
            AAD_ABA_ID?: bigint | number
            AND?: GA_ANKETA_ADDRWhereInput | GA_ANKETA_ADDRWhereInput[]
            OR?: GA_ANKETA_ADDRWhereInput[]
            NOT?: GA_ANKETA_ADDRWhereInput | GA_ANKETA_ADDRWhereInput[]
            AAD_SHIROTA?: StringFilter<'GA_ANKETA_ADDR'> | string
            AAD_DOLGOTA?: StringFilter<'GA_ANKETA_ADDR'> | string
            AAD_OBLAST?: StringFilter<'GA_ANKETA_ADDR'> | string
            AAD_GOROD?: StringFilter<'GA_ANKETA_ADDR'> | string
            AAD_ADDR?: StringFilter<'GA_ANKETA_ADDR'> | string
        },
        'AAD_ABA_ID'
    >

    export type GA_ANKETA_ADDROrderByWithAggregationInput = {
        AAD_ABA_ID?: SortOrder
        AAD_SHIROTA?: SortOrder
        AAD_DOLGOTA?: SortOrder
        AAD_OBLAST?: SortOrder
        AAD_GOROD?: SortOrder
        AAD_ADDR?: SortOrder
        _count?: GA_ANKETA_ADDRCountOrderByAggregateInput
        _avg?: GA_ANKETA_ADDRAvgOrderByAggregateInput
        _max?: GA_ANKETA_ADDRMaxOrderByAggregateInput
        _min?: GA_ANKETA_ADDRMinOrderByAggregateInput
        _sum?: GA_ANKETA_ADDRSumOrderByAggregateInput
    }

    export type GA_ANKETA_ADDRScalarWhereWithAggregatesInput = {
        AND?:
            | GA_ANKETA_ADDRScalarWhereWithAggregatesInput
            | GA_ANKETA_ADDRScalarWhereWithAggregatesInput[]
        OR?: GA_ANKETA_ADDRScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_ANKETA_ADDRScalarWhereWithAggregatesInput
            | GA_ANKETA_ADDRScalarWhereWithAggregatesInput[]
        AAD_ABA_ID?:
            | BigIntWithAggregatesFilter<'GA_ANKETA_ADDR'>
            | bigint
            | number
        AAD_SHIROTA?: StringWithAggregatesFilter<'GA_ANKETA_ADDR'> | string
        AAD_DOLGOTA?: StringWithAggregatesFilter<'GA_ANKETA_ADDR'> | string
        AAD_OBLAST?: StringWithAggregatesFilter<'GA_ANKETA_ADDR'> | string
        AAD_GOROD?: StringWithAggregatesFilter<'GA_ANKETA_ADDR'> | string
        AAD_ADDR?: StringWithAggregatesFilter<'GA_ANKETA_ADDR'> | string
    }

    export type GA_ANKETA_BASEWhereInput = {
        AND?: GA_ANKETA_BASEWhereInput | GA_ANKETA_BASEWhereInput[]
        OR?: GA_ANKETA_BASEWhereInput[]
        NOT?: GA_ANKETA_BASEWhereInput | GA_ANKETA_BASEWhereInput[]
        ABA_WSU_ID?: BigIntFilter<'GA_ANKETA_BASE'> | bigint | number
        ABA_STO_NAME?: StringFilter<'GA_ANKETA_BASE'> | string
        ABA_STO_ID1?: StringFilter<'GA_ANKETA_BASE'> | string
        ABA_REMZONA_QTY?: IntFilter<'GA_ANKETA_BASE'> | number
        ABA_ENABLED?: BoolFilter<'GA_ANKETA_BASE'> | boolean
        ABA_PHONE?: StringFilter<'GA_ANKETA_BASE'> | string
        ABA_INN?: StringFilter<'GA_ANKETA_BASE'> | string
        ABA_DATETIME_CREATED?: DateTimeFilter<'GA_ANKETA_BASE'> | Date | string
        ABA_DATETIME_UPDATED?: DateTimeFilter<'GA_ANKETA_BASE'> | Date | string
        ABA_ID?: BigIntFilter<'GA_ANKETA_BASE'> | bigint | number
        ABA_DATETIME?: DateTimeFilter<'GA_ANKETA_BASE'> | Date | string
        ABA_STO_ID2?: StringFilter<'GA_ANKETA_BASE'> | string
        ABA_STO_NAME_FIND?:
            | StringNullableFilter<'GA_ANKETA_BASE'>
            | string
            | null
    }

    export type GA_ANKETA_BASEOrderByWithRelationInput = {
        ABA_WSU_ID?: SortOrder
        ABA_STO_NAME?: SortOrder
        ABA_STO_ID1?: SortOrder
        ABA_REMZONA_QTY?: SortOrder
        ABA_ENABLED?: SortOrder
        ABA_PHONE?: SortOrder
        ABA_INN?: SortOrder
        ABA_DATETIME_CREATED?: SortOrder
        ABA_DATETIME_UPDATED?: SortOrder
        ABA_ID?: SortOrder
        ABA_DATETIME?: SortOrder
        ABA_STO_ID2?: SortOrder
        ABA_STO_NAME_FIND?: SortOrderInput | SortOrder
    }

    export type GA_ANKETA_BASEWhereUniqueInput = Prisma.AtLeast<
        {
            ABA_ID?: bigint | number
            AND?: GA_ANKETA_BASEWhereInput | GA_ANKETA_BASEWhereInput[]
            OR?: GA_ANKETA_BASEWhereInput[]
            NOT?: GA_ANKETA_BASEWhereInput | GA_ANKETA_BASEWhereInput[]
            ABA_WSU_ID?: BigIntFilter<'GA_ANKETA_BASE'> | bigint | number
            ABA_STO_NAME?: StringFilter<'GA_ANKETA_BASE'> | string
            ABA_STO_ID1?: StringFilter<'GA_ANKETA_BASE'> | string
            ABA_REMZONA_QTY?: IntFilter<'GA_ANKETA_BASE'> | number
            ABA_ENABLED?: BoolFilter<'GA_ANKETA_BASE'> | boolean
            ABA_PHONE?: StringFilter<'GA_ANKETA_BASE'> | string
            ABA_INN?: StringFilter<'GA_ANKETA_BASE'> | string
            ABA_DATETIME_CREATED?:
                | DateTimeFilter<'GA_ANKETA_BASE'>
                | Date
                | string
            ABA_DATETIME_UPDATED?:
                | DateTimeFilter<'GA_ANKETA_BASE'>
                | Date
                | string
            ABA_DATETIME?: DateTimeFilter<'GA_ANKETA_BASE'> | Date | string
            ABA_STO_ID2?: StringFilter<'GA_ANKETA_BASE'> | string
            ABA_STO_NAME_FIND?:
                | StringNullableFilter<'GA_ANKETA_BASE'>
                | string
                | null
        },
        'ABA_ID'
    >

    export type GA_ANKETA_BASEOrderByWithAggregationInput = {
        ABA_WSU_ID?: SortOrder
        ABA_STO_NAME?: SortOrder
        ABA_STO_ID1?: SortOrder
        ABA_REMZONA_QTY?: SortOrder
        ABA_ENABLED?: SortOrder
        ABA_PHONE?: SortOrder
        ABA_INN?: SortOrder
        ABA_DATETIME_CREATED?: SortOrder
        ABA_DATETIME_UPDATED?: SortOrder
        ABA_ID?: SortOrder
        ABA_DATETIME?: SortOrder
        ABA_STO_ID2?: SortOrder
        ABA_STO_NAME_FIND?: SortOrderInput | SortOrder
        _count?: GA_ANKETA_BASECountOrderByAggregateInput
        _avg?: GA_ANKETA_BASEAvgOrderByAggregateInput
        _max?: GA_ANKETA_BASEMaxOrderByAggregateInput
        _min?: GA_ANKETA_BASEMinOrderByAggregateInput
        _sum?: GA_ANKETA_BASESumOrderByAggregateInput
    }

    export type GA_ANKETA_BASEScalarWhereWithAggregatesInput = {
        AND?:
            | GA_ANKETA_BASEScalarWhereWithAggregatesInput
            | GA_ANKETA_BASEScalarWhereWithAggregatesInput[]
        OR?: GA_ANKETA_BASEScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_ANKETA_BASEScalarWhereWithAggregatesInput
            | GA_ANKETA_BASEScalarWhereWithAggregatesInput[]
        ABA_WSU_ID?:
            | BigIntWithAggregatesFilter<'GA_ANKETA_BASE'>
            | bigint
            | number
        ABA_STO_NAME?: StringWithAggregatesFilter<'GA_ANKETA_BASE'> | string
        ABA_STO_ID1?: StringWithAggregatesFilter<'GA_ANKETA_BASE'> | string
        ABA_REMZONA_QTY?: IntWithAggregatesFilter<'GA_ANKETA_BASE'> | number
        ABA_ENABLED?: BoolWithAggregatesFilter<'GA_ANKETA_BASE'> | boolean
        ABA_PHONE?: StringWithAggregatesFilter<'GA_ANKETA_BASE'> | string
        ABA_INN?: StringWithAggregatesFilter<'GA_ANKETA_BASE'> | string
        ABA_DATETIME_CREATED?:
            | DateTimeWithAggregatesFilter<'GA_ANKETA_BASE'>
            | Date
            | string
        ABA_DATETIME_UPDATED?:
            | DateTimeWithAggregatesFilter<'GA_ANKETA_BASE'>
            | Date
            | string
        ABA_ID?: BigIntWithAggregatesFilter<'GA_ANKETA_BASE'> | bigint | number
        ABA_DATETIME?:
            | DateTimeWithAggregatesFilter<'GA_ANKETA_BASE'>
            | Date
            | string
        ABA_STO_ID2?: StringWithAggregatesFilter<'GA_ANKETA_BASE'> | string
        ABA_STO_NAME_FIND?:
            | StringNullableWithAggregatesFilter<'GA_ANKETA_BASE'>
            | string
            | null
    }

    export type GA_ANKETA_BILETSWhereInput = {
        AND?: GA_ANKETA_BILETSWhereInput | GA_ANKETA_BILETSWhereInput[]
        OR?: GA_ANKETA_BILETSWhereInput[]
        NOT?: GA_ANKETA_BILETSWhereInput | GA_ANKETA_BILETSWhereInput[]
        BIL_INN?: StringFilter<'GA_ANKETA_BILETS'> | string
        BIL_LOGIN?: StringFilter<'GA_ANKETA_BILETS'> | string
        BIL_N1?: StringFilter<'GA_ANKETA_BILETS'> | string
        BIL_N2?: StringFilter<'GA_ANKETA_BILETS'> | string
        BIL_N3?: StringFilter<'GA_ANKETA_BILETS'> | string
        BIL_N4?: StringFilter<'GA_ANKETA_BILETS'> | string
        BIL_N5?: StringFilter<'GA_ANKETA_BILETS'> | string
        BIL_N6?: StringFilter<'GA_ANKETA_BILETS'> | string
        BIL_N7?: StringFilter<'GA_ANKETA_BILETS'> | string
        BIL_WSU_ID?: BigIntFilter<'GA_ANKETA_BILETS'> | bigint | number
        BIL_N8?: StringFilter<'GA_ANKETA_BILETS'> | string
        BIL_ABA_ID?: BigIntFilter<'GA_ANKETA_BILETS'> | bigint | number
        BIL_DATETIME?: DateTimeFilter<'GA_ANKETA_BILETS'> | Date | string
    }

    export type GA_ANKETA_BILETSOrderByWithRelationInput = {
        BIL_INN?: SortOrder
        BIL_LOGIN?: SortOrder
        BIL_N1?: SortOrder
        BIL_N2?: SortOrder
        BIL_N3?: SortOrder
        BIL_N4?: SortOrder
        BIL_N5?: SortOrder
        BIL_N6?: SortOrder
        BIL_N7?: SortOrder
        BIL_WSU_ID?: SortOrder
        BIL_N8?: SortOrder
        BIL_ABA_ID?: SortOrder
        BIL_DATETIME?: SortOrder
    }

    export type GA_ANKETA_BILETSWhereUniqueInput = Prisma.AtLeast<
        {
            BIL_ABA_ID?: bigint | number
            AND?: GA_ANKETA_BILETSWhereInput | GA_ANKETA_BILETSWhereInput[]
            OR?: GA_ANKETA_BILETSWhereInput[]
            NOT?: GA_ANKETA_BILETSWhereInput | GA_ANKETA_BILETSWhereInput[]
            BIL_INN?: StringFilter<'GA_ANKETA_BILETS'> | string
            BIL_LOGIN?: StringFilter<'GA_ANKETA_BILETS'> | string
            BIL_N1?: StringFilter<'GA_ANKETA_BILETS'> | string
            BIL_N2?: StringFilter<'GA_ANKETA_BILETS'> | string
            BIL_N3?: StringFilter<'GA_ANKETA_BILETS'> | string
            BIL_N4?: StringFilter<'GA_ANKETA_BILETS'> | string
            BIL_N5?: StringFilter<'GA_ANKETA_BILETS'> | string
            BIL_N6?: StringFilter<'GA_ANKETA_BILETS'> | string
            BIL_N7?: StringFilter<'GA_ANKETA_BILETS'> | string
            BIL_WSU_ID?: BigIntFilter<'GA_ANKETA_BILETS'> | bigint | number
            BIL_N8?: StringFilter<'GA_ANKETA_BILETS'> | string
            BIL_DATETIME?: DateTimeFilter<'GA_ANKETA_BILETS'> | Date | string
        },
        'BIL_ABA_ID'
    >

    export type GA_ANKETA_BILETSOrderByWithAggregationInput = {
        BIL_INN?: SortOrder
        BIL_LOGIN?: SortOrder
        BIL_N1?: SortOrder
        BIL_N2?: SortOrder
        BIL_N3?: SortOrder
        BIL_N4?: SortOrder
        BIL_N5?: SortOrder
        BIL_N6?: SortOrder
        BIL_N7?: SortOrder
        BIL_WSU_ID?: SortOrder
        BIL_N8?: SortOrder
        BIL_ABA_ID?: SortOrder
        BIL_DATETIME?: SortOrder
        _count?: GA_ANKETA_BILETSCountOrderByAggregateInput
        _avg?: GA_ANKETA_BILETSAvgOrderByAggregateInput
        _max?: GA_ANKETA_BILETSMaxOrderByAggregateInput
        _min?: GA_ANKETA_BILETSMinOrderByAggregateInput
        _sum?: GA_ANKETA_BILETSSumOrderByAggregateInput
    }

    export type GA_ANKETA_BILETSScalarWhereWithAggregatesInput = {
        AND?:
            | GA_ANKETA_BILETSScalarWhereWithAggregatesInput
            | GA_ANKETA_BILETSScalarWhereWithAggregatesInput[]
        OR?: GA_ANKETA_BILETSScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_ANKETA_BILETSScalarWhereWithAggregatesInput
            | GA_ANKETA_BILETSScalarWhereWithAggregatesInput[]
        BIL_INN?: StringWithAggregatesFilter<'GA_ANKETA_BILETS'> | string
        BIL_LOGIN?: StringWithAggregatesFilter<'GA_ANKETA_BILETS'> | string
        BIL_N1?: StringWithAggregatesFilter<'GA_ANKETA_BILETS'> | string
        BIL_N2?: StringWithAggregatesFilter<'GA_ANKETA_BILETS'> | string
        BIL_N3?: StringWithAggregatesFilter<'GA_ANKETA_BILETS'> | string
        BIL_N4?: StringWithAggregatesFilter<'GA_ANKETA_BILETS'> | string
        BIL_N5?: StringWithAggregatesFilter<'GA_ANKETA_BILETS'> | string
        BIL_N6?: StringWithAggregatesFilter<'GA_ANKETA_BILETS'> | string
        BIL_N7?: StringWithAggregatesFilter<'GA_ANKETA_BILETS'> | string
        BIL_WSU_ID?:
            | BigIntWithAggregatesFilter<'GA_ANKETA_BILETS'>
            | bigint
            | number
        BIL_N8?: StringWithAggregatesFilter<'GA_ANKETA_BILETS'> | string
        BIL_ABA_ID?:
            | BigIntWithAggregatesFilter<'GA_ANKETA_BILETS'>
            | bigint
            | number
        BIL_DATETIME?:
            | DateTimeWithAggregatesFilter<'GA_ANKETA_BILETS'>
            | Date
            | string
    }

    export type GA_ANKETA_BRAND_IMGWhereInput = {
        AND?: GA_ANKETA_BRAND_IMGWhereInput | GA_ANKETA_BRAND_IMGWhereInput[]
        OR?: GA_ANKETA_BRAND_IMGWhereInput[]
        NOT?: GA_ANKETA_BRAND_IMGWhereInput | GA_ANKETA_BRAND_IMGWhereInput[]
        ABI_ABA_ID?: BigIntFilter<'GA_ANKETA_BRAND_IMG'> | bigint | number
        ABI_NUM?: IntFilter<'GA_ANKETA_BRAND_IMG'> | number
        ABI_NAME?: StringFilter<'GA_ANKETA_BRAND_IMG'> | string
        ABI_PATH?: StringFilter<'GA_ANKETA_BRAND_IMG'> | string
    }

    export type GA_ANKETA_BRAND_IMGOrderByWithRelationInput = {
        ABI_ABA_ID?: SortOrder
        ABI_NUM?: SortOrder
        ABI_NAME?: SortOrder
        ABI_PATH?: SortOrder
    }

    export type GA_ANKETA_BRAND_IMGWhereUniqueInput = Prisma.AtLeast<
        {
            ABI_ABA_ID?: bigint | number
            AND?:
                | GA_ANKETA_BRAND_IMGWhereInput
                | GA_ANKETA_BRAND_IMGWhereInput[]
            OR?: GA_ANKETA_BRAND_IMGWhereInput[]
            NOT?:
                | GA_ANKETA_BRAND_IMGWhereInput
                | GA_ANKETA_BRAND_IMGWhereInput[]
            ABI_NUM?: IntFilter<'GA_ANKETA_BRAND_IMG'> | number
            ABI_NAME?: StringFilter<'GA_ANKETA_BRAND_IMG'> | string
            ABI_PATH?: StringFilter<'GA_ANKETA_BRAND_IMG'> | string
        },
        'ABI_ABA_ID'
    >

    export type GA_ANKETA_BRAND_IMGOrderByWithAggregationInput = {
        ABI_ABA_ID?: SortOrder
        ABI_NUM?: SortOrder
        ABI_NAME?: SortOrder
        ABI_PATH?: SortOrder
        _count?: GA_ANKETA_BRAND_IMGCountOrderByAggregateInput
        _avg?: GA_ANKETA_BRAND_IMGAvgOrderByAggregateInput
        _max?: GA_ANKETA_BRAND_IMGMaxOrderByAggregateInput
        _min?: GA_ANKETA_BRAND_IMGMinOrderByAggregateInput
        _sum?: GA_ANKETA_BRAND_IMGSumOrderByAggregateInput
    }

    export type GA_ANKETA_BRAND_IMGScalarWhereWithAggregatesInput = {
        AND?:
            | GA_ANKETA_BRAND_IMGScalarWhereWithAggregatesInput
            | GA_ANKETA_BRAND_IMGScalarWhereWithAggregatesInput[]
        OR?: GA_ANKETA_BRAND_IMGScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_ANKETA_BRAND_IMGScalarWhereWithAggregatesInput
            | GA_ANKETA_BRAND_IMGScalarWhereWithAggregatesInput[]
        ABI_ABA_ID?:
            | BigIntWithAggregatesFilter<'GA_ANKETA_BRAND_IMG'>
            | bigint
            | number
        ABI_NUM?: IntWithAggregatesFilter<'GA_ANKETA_BRAND_IMG'> | number
        ABI_NAME?: StringWithAggregatesFilter<'GA_ANKETA_BRAND_IMG'> | string
        ABI_PATH?: StringWithAggregatesFilter<'GA_ANKETA_BRAND_IMG'> | string
    }

    export type GA_ANKETA_DIRWhereInput = {
        AND?: GA_ANKETA_DIRWhereInput | GA_ANKETA_DIRWhereInput[]
        OR?: GA_ANKETA_DIRWhereInput[]
        NOT?: GA_ANKETA_DIRWhereInput | GA_ANKETA_DIRWhereInput[]
        AIR_ABA_ID?: BigIntFilter<'GA_ANKETA_DIR'> | bigint | number
        AIR_NAME1?: StringFilter<'GA_ANKETA_DIR'> | string
        AIR_NAME2?: StringFilter<'GA_ANKETA_DIR'> | string
        AIR_NAME3?: StringFilter<'GA_ANKETA_DIR'> | string
        AIR_PHONE?: StringFilter<'GA_ANKETA_DIR'> | string
        AIR_EMAIL?: StringFilter<'GA_ANKETA_DIR'> | string
    }

    export type GA_ANKETA_DIROrderByWithRelationInput = {
        AIR_ABA_ID?: SortOrder
        AIR_NAME1?: SortOrder
        AIR_NAME2?: SortOrder
        AIR_NAME3?: SortOrder
        AIR_PHONE?: SortOrder
        AIR_EMAIL?: SortOrder
    }

    export type GA_ANKETA_DIRWhereUniqueInput = Prisma.AtLeast<
        {
            AIR_ABA_ID?: bigint | number
            AND?: GA_ANKETA_DIRWhereInput | GA_ANKETA_DIRWhereInput[]
            OR?: GA_ANKETA_DIRWhereInput[]
            NOT?: GA_ANKETA_DIRWhereInput | GA_ANKETA_DIRWhereInput[]
            AIR_NAME1?: StringFilter<'GA_ANKETA_DIR'> | string
            AIR_NAME2?: StringFilter<'GA_ANKETA_DIR'> | string
            AIR_NAME3?: StringFilter<'GA_ANKETA_DIR'> | string
            AIR_PHONE?: StringFilter<'GA_ANKETA_DIR'> | string
            AIR_EMAIL?: StringFilter<'GA_ANKETA_DIR'> | string
        },
        'AIR_ABA_ID'
    >

    export type GA_ANKETA_DIROrderByWithAggregationInput = {
        AIR_ABA_ID?: SortOrder
        AIR_NAME1?: SortOrder
        AIR_NAME2?: SortOrder
        AIR_NAME3?: SortOrder
        AIR_PHONE?: SortOrder
        AIR_EMAIL?: SortOrder
        _count?: GA_ANKETA_DIRCountOrderByAggregateInput
        _avg?: GA_ANKETA_DIRAvgOrderByAggregateInput
        _max?: GA_ANKETA_DIRMaxOrderByAggregateInput
        _min?: GA_ANKETA_DIRMinOrderByAggregateInput
        _sum?: GA_ANKETA_DIRSumOrderByAggregateInput
    }

    export type GA_ANKETA_DIRScalarWhereWithAggregatesInput = {
        AND?:
            | GA_ANKETA_DIRScalarWhereWithAggregatesInput
            | GA_ANKETA_DIRScalarWhereWithAggregatesInput[]
        OR?: GA_ANKETA_DIRScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_ANKETA_DIRScalarWhereWithAggregatesInput
            | GA_ANKETA_DIRScalarWhereWithAggregatesInput[]
        AIR_ABA_ID?:
            | BigIntWithAggregatesFilter<'GA_ANKETA_DIR'>
            | bigint
            | number
        AIR_NAME1?: StringWithAggregatesFilter<'GA_ANKETA_DIR'> | string
        AIR_NAME2?: StringWithAggregatesFilter<'GA_ANKETA_DIR'> | string
        AIR_NAME3?: StringWithAggregatesFilter<'GA_ANKETA_DIR'> | string
        AIR_PHONE?: StringWithAggregatesFilter<'GA_ANKETA_DIR'> | string
        AIR_EMAIL?: StringWithAggregatesFilter<'GA_ANKETA_DIR'> | string
    }

    export type GA_ANKETA_DOGOVORWhereInput = {
        AND?: GA_ANKETA_DOGOVORWhereInput | GA_ANKETA_DOGOVORWhereInput[]
        OR?: GA_ANKETA_DOGOVORWhereInput[]
        NOT?: GA_ANKETA_DOGOVORWhereInput | GA_ANKETA_DOGOVORWhereInput[]
        ADO_ABA_ID?: BigIntFilter<'GA_ANKETA_DOGOVOR'> | bigint | number
        ADO_NAME1?: StringFilter<'GA_ANKETA_DOGOVOR'> | string
        ADO_NAME2?: StringFilter<'GA_ANKETA_DOGOVOR'> | string
        ADO_NAME3?: StringFilter<'GA_ANKETA_DOGOVOR'> | string
        ADO_PHONE?: StringFilter<'GA_ANKETA_DOGOVOR'> | string
        ADO_EMAIL?: StringFilter<'GA_ANKETA_DOGOVOR'> | string
        ADO_DATETIME?: DateTimeFilter<'GA_ANKETA_DOGOVOR'> | Date | string
        ADO_STATUS?: BoolFilter<'GA_ANKETA_DOGOVOR'> | boolean
    }

    export type GA_ANKETA_DOGOVOROrderByWithRelationInput = {
        ADO_ABA_ID?: SortOrder
        ADO_NAME1?: SortOrder
        ADO_NAME2?: SortOrder
        ADO_NAME3?: SortOrder
        ADO_PHONE?: SortOrder
        ADO_EMAIL?: SortOrder
        ADO_DATETIME?: SortOrder
        ADO_STATUS?: SortOrder
    }

    export type GA_ANKETA_DOGOVORWhereUniqueInput = Prisma.AtLeast<
        {
            ADO_ABA_ID?: bigint | number
            AND?: GA_ANKETA_DOGOVORWhereInput | GA_ANKETA_DOGOVORWhereInput[]
            OR?: GA_ANKETA_DOGOVORWhereInput[]
            NOT?: GA_ANKETA_DOGOVORWhereInput | GA_ANKETA_DOGOVORWhereInput[]
            ADO_NAME1?: StringFilter<'GA_ANKETA_DOGOVOR'> | string
            ADO_NAME2?: StringFilter<'GA_ANKETA_DOGOVOR'> | string
            ADO_NAME3?: StringFilter<'GA_ANKETA_DOGOVOR'> | string
            ADO_PHONE?: StringFilter<'GA_ANKETA_DOGOVOR'> | string
            ADO_EMAIL?: StringFilter<'GA_ANKETA_DOGOVOR'> | string
            ADO_DATETIME?: DateTimeFilter<'GA_ANKETA_DOGOVOR'> | Date | string
            ADO_STATUS?: BoolFilter<'GA_ANKETA_DOGOVOR'> | boolean
        },
        'ADO_ABA_ID'
    >

    export type GA_ANKETA_DOGOVOROrderByWithAggregationInput = {
        ADO_ABA_ID?: SortOrder
        ADO_NAME1?: SortOrder
        ADO_NAME2?: SortOrder
        ADO_NAME3?: SortOrder
        ADO_PHONE?: SortOrder
        ADO_EMAIL?: SortOrder
        ADO_DATETIME?: SortOrder
        ADO_STATUS?: SortOrder
        _count?: GA_ANKETA_DOGOVORCountOrderByAggregateInput
        _avg?: GA_ANKETA_DOGOVORAvgOrderByAggregateInput
        _max?: GA_ANKETA_DOGOVORMaxOrderByAggregateInput
        _min?: GA_ANKETA_DOGOVORMinOrderByAggregateInput
        _sum?: GA_ANKETA_DOGOVORSumOrderByAggregateInput
    }

    export type GA_ANKETA_DOGOVORScalarWhereWithAggregatesInput = {
        AND?:
            | GA_ANKETA_DOGOVORScalarWhereWithAggregatesInput
            | GA_ANKETA_DOGOVORScalarWhereWithAggregatesInput[]
        OR?: GA_ANKETA_DOGOVORScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_ANKETA_DOGOVORScalarWhereWithAggregatesInput
            | GA_ANKETA_DOGOVORScalarWhereWithAggregatesInput[]
        ADO_ABA_ID?:
            | BigIntWithAggregatesFilter<'GA_ANKETA_DOGOVOR'>
            | bigint
            | number
        ADO_NAME1?: StringWithAggregatesFilter<'GA_ANKETA_DOGOVOR'> | string
        ADO_NAME2?: StringWithAggregatesFilter<'GA_ANKETA_DOGOVOR'> | string
        ADO_NAME3?: StringWithAggregatesFilter<'GA_ANKETA_DOGOVOR'> | string
        ADO_PHONE?: StringWithAggregatesFilter<'GA_ANKETA_DOGOVOR'> | string
        ADO_EMAIL?: StringWithAggregatesFilter<'GA_ANKETA_DOGOVOR'> | string
        ADO_DATETIME?:
            | DateTimeWithAggregatesFilter<'GA_ANKETA_DOGOVOR'>
            | Date
            | string
        ADO_STATUS?: BoolWithAggregatesFilter<'GA_ANKETA_DOGOVOR'> | boolean
    }

    export type GA_ANKETA_OBOROTWhereInput = {
        AND?: GA_ANKETA_OBOROTWhereInput | GA_ANKETA_OBOROTWhereInput[]
        OR?: GA_ANKETA_OBOROTWhereInput[]
        NOT?: GA_ANKETA_OBOROTWhereInput | GA_ANKETA_OBOROTWhereInput[]
        ABO_ABA_ID?: BigIntFilter<'GA_ANKETA_OBOROT'> | bigint | number
        ABO_DATETIME?: DateTimeFilter<'GA_ANKETA_OBOROT'> | Date | string
        ABO_OBOROT_ALL?: FloatFilter<'GA_ANKETA_OBOROT'> | number
        ABO_OBOROT_BRANDS_MONTH?: FloatFilter<'GA_ANKETA_OBOROT'> | number
        ABO_OBOROT_AE?: FloatFilter<'GA_ANKETA_OBOROT'> | number
        ABO_OBOROT_ROSSKO?: FloatFilter<'GA_ANKETA_OBOROT'> | number
        ABO_OBOROT_ARKONA?: FloatFilter<'GA_ANKETA_OBOROT'> | number
        ABO_OBOROT_AUTORUS?: FloatFilter<'GA_ANKETA_OBOROT'> | number
        ABO_SCORES_MONTH_PLAN?: FloatFilter<'GA_ANKETA_OBOROT'> | number
        ABO_SCORES_MONTH_FAKT?: FloatFilter<'GA_ANKETA_OBOROT'> | number
        ABO_COUNT_ROSSKO?: IntFilter<'GA_ANKETA_OBOROT'> | number
        ABO_COUNT_AE?: IntFilter<'GA_ANKETA_OBOROT'> | number
        ABO_COUNT_ARKONA?: IntFilter<'GA_ANKETA_OBOROT'> | number
        ABO_COUNT_AUTORUS?: IntFilter<'GA_ANKETA_OBOROT'> | number
        ABO_OBOROT_BRANDS?: FloatFilter<'GA_ANKETA_OBOROT'> | number
        ABO_OBOROT_BRAND_LOOK1?: FloatFilter<'GA_ANKETA_OBOROT'> | number
        ABO_SCORES?: FloatFilter<'GA_ANKETA_OBOROT'> | number
        ABO_OBOROT_BRAND_LOOK2?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_AE?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_ARKONA?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_AE?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_ARKONA?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND1?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND2?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND3?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND4?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND5?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND6?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_NEXT?:
            | FloatNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_SCORES_MONTH_PLAN_NEXT?: FloatFilter<'GA_ANKETA_OBOROT'> | number
        ABO_ABA_REMZONA_QTY?:
            | IntNullableFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
    }

    export type GA_ANKETA_OBOROTOrderByWithRelationInput = {
        ABO_ABA_ID?: SortOrder
        ABO_DATETIME?: SortOrder
        ABO_OBOROT_ALL?: SortOrder
        ABO_OBOROT_BRANDS_MONTH?: SortOrder
        ABO_OBOROT_AE?: SortOrder
        ABO_OBOROT_ROSSKO?: SortOrder
        ABO_OBOROT_ARKONA?: SortOrder
        ABO_OBOROT_AUTORUS?: SortOrder
        ABO_SCORES_MONTH_PLAN?: SortOrder
        ABO_SCORES_MONTH_FAKT?: SortOrder
        ABO_COUNT_ROSSKO?: SortOrder
        ABO_COUNT_AE?: SortOrder
        ABO_COUNT_ARKONA?: SortOrder
        ABO_COUNT_AUTORUS?: SortOrder
        ABO_OBOROT_BRANDS?: SortOrder
        ABO_OBOROT_BRAND_LOOK1?: SortOrder
        ABO_SCORES?: SortOrder
        ABO_OBOROT_BRAND_LOOK2?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND_LOOK2_AE?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: SortOrderInput | SortOrder
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: SortOrderInput | SortOrder
        ABO_OBOROT_BRANDS_MONTH_AE?: SortOrderInput | SortOrder
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: SortOrderInput | SortOrder
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND1?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND2?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND3?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND4?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND5?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND6?: SortOrderInput | SortOrder
        ABO_OBOROT_NEXT?: SortOrderInput | SortOrder
        ABO_SCORES_MONTH_PLAN_NEXT?: SortOrder
        ABO_ABA_REMZONA_QTY?: SortOrderInput | SortOrder
    }

    export type GA_ANKETA_OBOROTWhereUniqueInput = Prisma.AtLeast<
        {
            ABO_ABA_ID?: bigint | number
            AND?: GA_ANKETA_OBOROTWhereInput | GA_ANKETA_OBOROTWhereInput[]
            OR?: GA_ANKETA_OBOROTWhereInput[]
            NOT?: GA_ANKETA_OBOROTWhereInput | GA_ANKETA_OBOROTWhereInput[]
            ABO_DATETIME?: DateTimeFilter<'GA_ANKETA_OBOROT'> | Date | string
            ABO_OBOROT_ALL?: FloatFilter<'GA_ANKETA_OBOROT'> | number
            ABO_OBOROT_BRANDS_MONTH?: FloatFilter<'GA_ANKETA_OBOROT'> | number
            ABO_OBOROT_AE?: FloatFilter<'GA_ANKETA_OBOROT'> | number
            ABO_OBOROT_ROSSKO?: FloatFilter<'GA_ANKETA_OBOROT'> | number
            ABO_OBOROT_ARKONA?: FloatFilter<'GA_ANKETA_OBOROT'> | number
            ABO_OBOROT_AUTORUS?: FloatFilter<'GA_ANKETA_OBOROT'> | number
            ABO_SCORES_MONTH_PLAN?: FloatFilter<'GA_ANKETA_OBOROT'> | number
            ABO_SCORES_MONTH_FAKT?: FloatFilter<'GA_ANKETA_OBOROT'> | number
            ABO_COUNT_ROSSKO?: IntFilter<'GA_ANKETA_OBOROT'> | number
            ABO_COUNT_AE?: IntFilter<'GA_ANKETA_OBOROT'> | number
            ABO_COUNT_ARKONA?: IntFilter<'GA_ANKETA_OBOROT'> | number
            ABO_COUNT_AUTORUS?: IntFilter<'GA_ANKETA_OBOROT'> | number
            ABO_OBOROT_BRANDS?: FloatFilter<'GA_ANKETA_OBOROT'> | number
            ABO_OBOROT_BRAND_LOOK1?: FloatFilter<'GA_ANKETA_OBOROT'> | number
            ABO_SCORES?: FloatFilter<'GA_ANKETA_OBOROT'> | number
            ABO_OBOROT_BRAND_LOOK2?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_OBOROT_BRAND_LOOK2_ROSSKO?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_OBOROT_BRAND_LOOK2_AE?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_OBOROT_BRAND_LOOK2_ARKONA?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_OBOROT_BRAND_LOOK2_AUTORUS?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_OBOROT_BRANDS_MONTH_ROSSKO?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_OBOROT_BRANDS_MONTH_AE?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_OBOROT_BRANDS_MONTH_ARKONA?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_OBOROT_BRANDS_MONTH_AUTORUS?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_OBOROT_BRAND1?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_OBOROT_BRAND2?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_OBOROT_BRAND3?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_OBOROT_BRAND4?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_OBOROT_BRAND5?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_OBOROT_BRAND6?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_OBOROT_NEXT?:
                | FloatNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
            ABO_SCORES_MONTH_PLAN_NEXT?:
                | FloatFilter<'GA_ANKETA_OBOROT'>
                | number
            ABO_ABA_REMZONA_QTY?:
                | IntNullableFilter<'GA_ANKETA_OBOROT'>
                | number
                | null
        },
        'ABO_ABA_ID'
    >

    export type GA_ANKETA_OBOROTOrderByWithAggregationInput = {
        ABO_ABA_ID?: SortOrder
        ABO_DATETIME?: SortOrder
        ABO_OBOROT_ALL?: SortOrder
        ABO_OBOROT_BRANDS_MONTH?: SortOrder
        ABO_OBOROT_AE?: SortOrder
        ABO_OBOROT_ROSSKO?: SortOrder
        ABO_OBOROT_ARKONA?: SortOrder
        ABO_OBOROT_AUTORUS?: SortOrder
        ABO_SCORES_MONTH_PLAN?: SortOrder
        ABO_SCORES_MONTH_FAKT?: SortOrder
        ABO_COUNT_ROSSKO?: SortOrder
        ABO_COUNT_AE?: SortOrder
        ABO_COUNT_ARKONA?: SortOrder
        ABO_COUNT_AUTORUS?: SortOrder
        ABO_OBOROT_BRANDS?: SortOrder
        ABO_OBOROT_BRAND_LOOK1?: SortOrder
        ABO_SCORES?: SortOrder
        ABO_OBOROT_BRAND_LOOK2?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND_LOOK2_AE?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: SortOrderInput | SortOrder
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: SortOrderInput | SortOrder
        ABO_OBOROT_BRANDS_MONTH_AE?: SortOrderInput | SortOrder
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: SortOrderInput | SortOrder
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND1?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND2?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND3?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND4?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND5?: SortOrderInput | SortOrder
        ABO_OBOROT_BRAND6?: SortOrderInput | SortOrder
        ABO_OBOROT_NEXT?: SortOrderInput | SortOrder
        ABO_SCORES_MONTH_PLAN_NEXT?: SortOrder
        ABO_ABA_REMZONA_QTY?: SortOrderInput | SortOrder
        _count?: GA_ANKETA_OBOROTCountOrderByAggregateInput
        _avg?: GA_ANKETA_OBOROTAvgOrderByAggregateInput
        _max?: GA_ANKETA_OBOROTMaxOrderByAggregateInput
        _min?: GA_ANKETA_OBOROTMinOrderByAggregateInput
        _sum?: GA_ANKETA_OBOROTSumOrderByAggregateInput
    }

    export type GA_ANKETA_OBOROTScalarWhereWithAggregatesInput = {
        AND?:
            | GA_ANKETA_OBOROTScalarWhereWithAggregatesInput
            | GA_ANKETA_OBOROTScalarWhereWithAggregatesInput[]
        OR?: GA_ANKETA_OBOROTScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_ANKETA_OBOROTScalarWhereWithAggregatesInput
            | GA_ANKETA_OBOROTScalarWhereWithAggregatesInput[]
        ABO_ABA_ID?:
            | BigIntWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | bigint
            | number
        ABO_DATETIME?:
            | DateTimeWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | Date
            | string
        ABO_OBOROT_ALL?: FloatWithAggregatesFilter<'GA_ANKETA_OBOROT'> | number
        ABO_OBOROT_BRANDS_MONTH?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
        ABO_OBOROT_AE?: FloatWithAggregatesFilter<'GA_ANKETA_OBOROT'> | number
        ABO_OBOROT_ROSSKO?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
        ABO_OBOROT_ARKONA?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
        ABO_OBOROT_AUTORUS?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
        ABO_SCORES_MONTH_PLAN?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
        ABO_SCORES_MONTH_FAKT?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
        ABO_COUNT_ROSSKO?: IntWithAggregatesFilter<'GA_ANKETA_OBOROT'> | number
        ABO_COUNT_AE?: IntWithAggregatesFilter<'GA_ANKETA_OBOROT'> | number
        ABO_COUNT_ARKONA?: IntWithAggregatesFilter<'GA_ANKETA_OBOROT'> | number
        ABO_COUNT_AUTORUS?: IntWithAggregatesFilter<'GA_ANKETA_OBOROT'> | number
        ABO_OBOROT_BRANDS?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
        ABO_OBOROT_BRAND_LOOK1?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
        ABO_SCORES?: FloatWithAggregatesFilter<'GA_ANKETA_OBOROT'> | number
        ABO_OBOROT_BRAND_LOOK2?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_AE?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_ARKONA?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_AE?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_ARKONA?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND1?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND2?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND3?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND4?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND5?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_BRAND6?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_OBOROT_NEXT?:
            | FloatNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
        ABO_SCORES_MONTH_PLAN_NEXT?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
        ABO_ABA_REMZONA_QTY?:
            | IntNullableWithAggregatesFilter<'GA_ANKETA_OBOROT'>
            | number
            | null
    }

    export type GA_ANKETA_OBOROT_BRANDSWhereInput = {
        AND?:
            | GA_ANKETA_OBOROT_BRANDSWhereInput
            | GA_ANKETA_OBOROT_BRANDSWhereInput[]
        OR?: GA_ANKETA_OBOROT_BRANDSWhereInput[]
        NOT?:
            | GA_ANKETA_OBOROT_BRANDSWhereInput
            | GA_ANKETA_OBOROT_BRANDSWhereInput[]
        AOB_ABA_ID?: BigIntFilter<'GA_ANKETA_OBOROT_BRANDS'> | bigint | number
        AOB_DATETIME?: DateTimeFilter<'GA_ANKETA_OBOROT_BRANDS'> | Date | string
        AOB_ALL_24189?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_24189?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_24189?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_24189?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_24189?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_10566?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_10566?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_10566?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_10566?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_10566?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_20079?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_20079?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_20079?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_20079?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_20079?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_7251?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_7251?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_7251?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_7251?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_7251?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_24191?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_24191?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_24191?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_24191?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_24191?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_193?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_193?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_193?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_193?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_193?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_7610?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_7610?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_7610?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_7610?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_7610?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_10180?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_10180?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_10180?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_10180?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_10180?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_177?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_177?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_177?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_177?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_177?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_10223?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_10223?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_10223?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_10223?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_10223?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_7230?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_7230?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_7230?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_7230?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_7230?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_1359?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_1359?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_1359?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_1359?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_1359?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_110?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_110?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_110?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_110?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_110?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_20182?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_20182?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_20182?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_20182?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_20182?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_20203?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_20203?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_20203?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_20203?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_20203?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_24155?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_24155?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_24155?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_24155?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_24155?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_24198?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_24198?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_24198?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_24198?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_24198?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_135?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_135?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_135?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_135?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_135?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_24196?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_24196?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_24196?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_24196?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_24196?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_24197?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_24197?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_24197?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_24197?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_24197?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_ALL_21?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50011_21?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50012_21?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50013_21?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        AOB_50014_21?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
    }

    export type GA_ANKETA_OBOROT_BRANDSOrderByWithRelationInput = {
        AOB_ABA_ID?: SortOrder
        AOB_DATETIME?: SortOrder
        AOB_ALL_24189?: SortOrder
        AOB_50011_24189?: SortOrder
        AOB_50012_24189?: SortOrder
        AOB_50013_24189?: SortOrder
        AOB_50014_24189?: SortOrder
        AOB_ALL_10566?: SortOrder
        AOB_50011_10566?: SortOrder
        AOB_50012_10566?: SortOrder
        AOB_50013_10566?: SortOrder
        AOB_50014_10566?: SortOrder
        AOB_ALL_20079?: SortOrder
        AOB_50011_20079?: SortOrder
        AOB_50012_20079?: SortOrder
        AOB_50013_20079?: SortOrder
        AOB_50014_20079?: SortOrder
        AOB_ALL_7251?: SortOrder
        AOB_50011_7251?: SortOrder
        AOB_50012_7251?: SortOrder
        AOB_50013_7251?: SortOrder
        AOB_50014_7251?: SortOrder
        AOB_ALL_24191?: SortOrder
        AOB_50011_24191?: SortOrder
        AOB_50012_24191?: SortOrder
        AOB_50013_24191?: SortOrder
        AOB_50014_24191?: SortOrder
        AOB_ALL_193?: SortOrder
        AOB_50011_193?: SortOrder
        AOB_50012_193?: SortOrder
        AOB_50013_193?: SortOrder
        AOB_50014_193?: SortOrder
        AOB_ALL_7610?: SortOrder
        AOB_50011_7610?: SortOrder
        AOB_50012_7610?: SortOrder
        AOB_50013_7610?: SortOrder
        AOB_50014_7610?: SortOrder
        AOB_ALL_10180?: SortOrder
        AOB_50011_10180?: SortOrder
        AOB_50012_10180?: SortOrder
        AOB_50013_10180?: SortOrder
        AOB_50014_10180?: SortOrder
        AOB_ALL_177?: SortOrder
        AOB_50011_177?: SortOrder
        AOB_50012_177?: SortOrder
        AOB_50013_177?: SortOrder
        AOB_50014_177?: SortOrder
        AOB_ALL_10223?: SortOrder
        AOB_50011_10223?: SortOrder
        AOB_50012_10223?: SortOrder
        AOB_50013_10223?: SortOrder
        AOB_50014_10223?: SortOrder
        AOB_ALL_7230?: SortOrder
        AOB_50011_7230?: SortOrder
        AOB_50012_7230?: SortOrder
        AOB_50013_7230?: SortOrder
        AOB_50014_7230?: SortOrder
        AOB_ALL_1359?: SortOrder
        AOB_50011_1359?: SortOrder
        AOB_50012_1359?: SortOrder
        AOB_50013_1359?: SortOrder
        AOB_50014_1359?: SortOrder
        AOB_ALL_110?: SortOrder
        AOB_50011_110?: SortOrder
        AOB_50012_110?: SortOrder
        AOB_50013_110?: SortOrder
        AOB_50014_110?: SortOrder
        AOB_ALL_20182?: SortOrder
        AOB_50011_20182?: SortOrder
        AOB_50012_20182?: SortOrder
        AOB_50013_20182?: SortOrder
        AOB_50014_20182?: SortOrder
        AOB_ALL_20203?: SortOrder
        AOB_50011_20203?: SortOrder
        AOB_50012_20203?: SortOrder
        AOB_50013_20203?: SortOrder
        AOB_50014_20203?: SortOrder
        AOB_ALL_24155?: SortOrder
        AOB_50011_24155?: SortOrder
        AOB_50012_24155?: SortOrder
        AOB_50013_24155?: SortOrder
        AOB_50014_24155?: SortOrder
        AOB_ALL_24198?: SortOrder
        AOB_50011_24198?: SortOrder
        AOB_50012_24198?: SortOrder
        AOB_50013_24198?: SortOrder
        AOB_50014_24198?: SortOrder
        AOB_ALL_135?: SortOrder
        AOB_50011_135?: SortOrder
        AOB_50012_135?: SortOrder
        AOB_50013_135?: SortOrder
        AOB_50014_135?: SortOrder
        AOB_ALL_24196?: SortOrder
        AOB_50011_24196?: SortOrder
        AOB_50012_24196?: SortOrder
        AOB_50013_24196?: SortOrder
        AOB_50014_24196?: SortOrder
        AOB_ALL_24197?: SortOrder
        AOB_50011_24197?: SortOrder
        AOB_50012_24197?: SortOrder
        AOB_50013_24197?: SortOrder
        AOB_50014_24197?: SortOrder
        AOB_ALL_21?: SortOrder
        AOB_50011_21?: SortOrder
        AOB_50012_21?: SortOrder
        AOB_50013_21?: SortOrder
        AOB_50014_21?: SortOrder
    }

    export type GA_ANKETA_OBOROT_BRANDSWhereUniqueInput = Prisma.AtLeast<
        {
            AOB_ABA_ID?: bigint | number
            AND?:
                | GA_ANKETA_OBOROT_BRANDSWhereInput
                | GA_ANKETA_OBOROT_BRANDSWhereInput[]
            OR?: GA_ANKETA_OBOROT_BRANDSWhereInput[]
            NOT?:
                | GA_ANKETA_OBOROT_BRANDSWhereInput
                | GA_ANKETA_OBOROT_BRANDSWhereInput[]
            AOB_DATETIME?:
                | DateTimeFilter<'GA_ANKETA_OBOROT_BRANDS'>
                | Date
                | string
            AOB_ALL_24189?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_24189?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_24189?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_24189?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_24189?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_10566?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_10566?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_10566?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_10566?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_10566?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_20079?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_20079?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_20079?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_20079?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_20079?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_7251?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_7251?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_7251?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_7251?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_7251?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_24191?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_24191?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_24191?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_24191?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_24191?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_193?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_193?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_193?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_193?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_193?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_7610?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_7610?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_7610?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_7610?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_7610?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_10180?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_10180?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_10180?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_10180?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_10180?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_177?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_177?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_177?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_177?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_177?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_10223?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_10223?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_10223?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_10223?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_10223?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_7230?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_7230?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_7230?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_7230?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_7230?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_1359?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_1359?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_1359?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_1359?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_1359?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_110?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_110?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_110?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_110?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_110?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_20182?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_20182?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_20182?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_20182?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_20182?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_20203?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_20203?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_20203?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_20203?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_20203?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_24155?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_24155?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_24155?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_24155?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_24155?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_24198?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_24198?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_24198?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_24198?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_24198?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_135?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_135?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_135?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_135?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_135?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_24196?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_24196?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_24196?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_24196?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_24196?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_24197?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_24197?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_24197?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_24197?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_24197?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_ALL_21?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50011_21?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50012_21?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50013_21?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
            AOB_50014_21?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS'> | number
        },
        'AOB_ABA_ID'
    >

    export type GA_ANKETA_OBOROT_BRANDSOrderByWithAggregationInput = {
        AOB_ABA_ID?: SortOrder
        AOB_DATETIME?: SortOrder
        AOB_ALL_24189?: SortOrder
        AOB_50011_24189?: SortOrder
        AOB_50012_24189?: SortOrder
        AOB_50013_24189?: SortOrder
        AOB_50014_24189?: SortOrder
        AOB_ALL_10566?: SortOrder
        AOB_50011_10566?: SortOrder
        AOB_50012_10566?: SortOrder
        AOB_50013_10566?: SortOrder
        AOB_50014_10566?: SortOrder
        AOB_ALL_20079?: SortOrder
        AOB_50011_20079?: SortOrder
        AOB_50012_20079?: SortOrder
        AOB_50013_20079?: SortOrder
        AOB_50014_20079?: SortOrder
        AOB_ALL_7251?: SortOrder
        AOB_50011_7251?: SortOrder
        AOB_50012_7251?: SortOrder
        AOB_50013_7251?: SortOrder
        AOB_50014_7251?: SortOrder
        AOB_ALL_24191?: SortOrder
        AOB_50011_24191?: SortOrder
        AOB_50012_24191?: SortOrder
        AOB_50013_24191?: SortOrder
        AOB_50014_24191?: SortOrder
        AOB_ALL_193?: SortOrder
        AOB_50011_193?: SortOrder
        AOB_50012_193?: SortOrder
        AOB_50013_193?: SortOrder
        AOB_50014_193?: SortOrder
        AOB_ALL_7610?: SortOrder
        AOB_50011_7610?: SortOrder
        AOB_50012_7610?: SortOrder
        AOB_50013_7610?: SortOrder
        AOB_50014_7610?: SortOrder
        AOB_ALL_10180?: SortOrder
        AOB_50011_10180?: SortOrder
        AOB_50012_10180?: SortOrder
        AOB_50013_10180?: SortOrder
        AOB_50014_10180?: SortOrder
        AOB_ALL_177?: SortOrder
        AOB_50011_177?: SortOrder
        AOB_50012_177?: SortOrder
        AOB_50013_177?: SortOrder
        AOB_50014_177?: SortOrder
        AOB_ALL_10223?: SortOrder
        AOB_50011_10223?: SortOrder
        AOB_50012_10223?: SortOrder
        AOB_50013_10223?: SortOrder
        AOB_50014_10223?: SortOrder
        AOB_ALL_7230?: SortOrder
        AOB_50011_7230?: SortOrder
        AOB_50012_7230?: SortOrder
        AOB_50013_7230?: SortOrder
        AOB_50014_7230?: SortOrder
        AOB_ALL_1359?: SortOrder
        AOB_50011_1359?: SortOrder
        AOB_50012_1359?: SortOrder
        AOB_50013_1359?: SortOrder
        AOB_50014_1359?: SortOrder
        AOB_ALL_110?: SortOrder
        AOB_50011_110?: SortOrder
        AOB_50012_110?: SortOrder
        AOB_50013_110?: SortOrder
        AOB_50014_110?: SortOrder
        AOB_ALL_20182?: SortOrder
        AOB_50011_20182?: SortOrder
        AOB_50012_20182?: SortOrder
        AOB_50013_20182?: SortOrder
        AOB_50014_20182?: SortOrder
        AOB_ALL_20203?: SortOrder
        AOB_50011_20203?: SortOrder
        AOB_50012_20203?: SortOrder
        AOB_50013_20203?: SortOrder
        AOB_50014_20203?: SortOrder
        AOB_ALL_24155?: SortOrder
        AOB_50011_24155?: SortOrder
        AOB_50012_24155?: SortOrder
        AOB_50013_24155?: SortOrder
        AOB_50014_24155?: SortOrder
        AOB_ALL_24198?: SortOrder
        AOB_50011_24198?: SortOrder
        AOB_50012_24198?: SortOrder
        AOB_50013_24198?: SortOrder
        AOB_50014_24198?: SortOrder
        AOB_ALL_135?: SortOrder
        AOB_50011_135?: SortOrder
        AOB_50012_135?: SortOrder
        AOB_50013_135?: SortOrder
        AOB_50014_135?: SortOrder
        AOB_ALL_24196?: SortOrder
        AOB_50011_24196?: SortOrder
        AOB_50012_24196?: SortOrder
        AOB_50013_24196?: SortOrder
        AOB_50014_24196?: SortOrder
        AOB_ALL_24197?: SortOrder
        AOB_50011_24197?: SortOrder
        AOB_50012_24197?: SortOrder
        AOB_50013_24197?: SortOrder
        AOB_50014_24197?: SortOrder
        AOB_ALL_21?: SortOrder
        AOB_50011_21?: SortOrder
        AOB_50012_21?: SortOrder
        AOB_50013_21?: SortOrder
        AOB_50014_21?: SortOrder
        _count?: GA_ANKETA_OBOROT_BRANDSCountOrderByAggregateInput
        _avg?: GA_ANKETA_OBOROT_BRANDSAvgOrderByAggregateInput
        _max?: GA_ANKETA_OBOROT_BRANDSMaxOrderByAggregateInput
        _min?: GA_ANKETA_OBOROT_BRANDSMinOrderByAggregateInput
        _sum?: GA_ANKETA_OBOROT_BRANDSSumOrderByAggregateInput
    }

    export type GA_ANKETA_OBOROT_BRANDSScalarWhereWithAggregatesInput = {
        AND?:
            | GA_ANKETA_OBOROT_BRANDSScalarWhereWithAggregatesInput
            | GA_ANKETA_OBOROT_BRANDSScalarWhereWithAggregatesInput[]
        OR?: GA_ANKETA_OBOROT_BRANDSScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_ANKETA_OBOROT_BRANDSScalarWhereWithAggregatesInput
            | GA_ANKETA_OBOROT_BRANDSScalarWhereWithAggregatesInput[]
        AOB_ABA_ID?:
            | BigIntWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | bigint
            | number
        AOB_DATETIME?:
            | DateTimeWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | Date
            | string
        AOB_ALL_24189?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_24189?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_24189?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_24189?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_24189?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_10566?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_10566?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_10566?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_10566?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_10566?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_20079?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_20079?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_20079?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_20079?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_20079?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_7251?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_7251?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_7251?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_7251?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_7251?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_24191?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_24191?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_24191?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_24191?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_24191?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_193?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_193?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_193?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_193?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_193?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_7610?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_7610?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_7610?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_7610?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_7610?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_10180?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_10180?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_10180?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_10180?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_10180?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_177?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_177?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_177?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_177?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_177?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_10223?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_10223?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_10223?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_10223?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_10223?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_7230?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_7230?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_7230?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_7230?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_7230?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_1359?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_1359?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_1359?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_1359?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_1359?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_110?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_110?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_110?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_110?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_110?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_20182?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_20182?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_20182?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_20182?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_20182?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_20203?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_20203?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_20203?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_20203?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_20203?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_24155?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_24155?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_24155?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_24155?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_24155?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_24198?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_24198?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_24198?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_24198?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_24198?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_135?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_135?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_135?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_135?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_135?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_24196?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_24196?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_24196?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_24196?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_24196?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_24197?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_24197?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_24197?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_24197?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_24197?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_ALL_21?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50011_21?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50012_21?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50013_21?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
        AOB_50014_21?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS'>
            | number
    }

    export type GA_ANKETA_OBOROT_BRANDS2WhereInput = {
        AND?:
            | GA_ANKETA_OBOROT_BRANDS2WhereInput
            | GA_ANKETA_OBOROT_BRANDS2WhereInput[]
        OR?: GA_ANKETA_OBOROT_BRANDS2WhereInput[]
        NOT?:
            | GA_ANKETA_OBOROT_BRANDS2WhereInput
            | GA_ANKETA_OBOROT_BRANDS2WhereInput[]
        AOB_ABA_ID?: BigIntFilter<'GA_ANKETA_OBOROT_BRANDS2'> | bigint | number
        AOB_DATETIME?:
            | DateTimeFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | Date
            | string
        AOB_ALL_7438?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50011_7438?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50012_7438?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50013_7438?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50014_7438?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_ALL_7801?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50011_7801?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50012_7801?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50013_7801?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50014_7801?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_ALL_7763?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50011_7763?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50012_7763?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50013_7763?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50014_7763?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_ALL_265?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50011_265?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50012_265?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50013_265?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50014_265?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_ALL_24158?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50011_24158?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50012_24158?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50013_24158?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50014_24158?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_ALL_7219?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50011_7219?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50012_7219?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50013_7219?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        AOB_50014_7219?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
    }

    export type GA_ANKETA_OBOROT_BRANDS2OrderByWithRelationInput = {
        AOB_ABA_ID?: SortOrder
        AOB_DATETIME?: SortOrder
        AOB_ALL_7438?: SortOrder
        AOB_50011_7438?: SortOrder
        AOB_50012_7438?: SortOrder
        AOB_50013_7438?: SortOrder
        AOB_50014_7438?: SortOrder
        AOB_ALL_7801?: SortOrder
        AOB_50011_7801?: SortOrder
        AOB_50012_7801?: SortOrder
        AOB_50013_7801?: SortOrder
        AOB_50014_7801?: SortOrder
        AOB_ALL_7763?: SortOrder
        AOB_50011_7763?: SortOrder
        AOB_50012_7763?: SortOrder
        AOB_50013_7763?: SortOrder
        AOB_50014_7763?: SortOrder
        AOB_ALL_265?: SortOrder
        AOB_50011_265?: SortOrder
        AOB_50012_265?: SortOrder
        AOB_50013_265?: SortOrder
        AOB_50014_265?: SortOrder
        AOB_ALL_24158?: SortOrder
        AOB_50011_24158?: SortOrder
        AOB_50012_24158?: SortOrder
        AOB_50013_24158?: SortOrder
        AOB_50014_24158?: SortOrder
        AOB_ALL_7219?: SortOrder
        AOB_50011_7219?: SortOrder
        AOB_50012_7219?: SortOrder
        AOB_50013_7219?: SortOrder
        AOB_50014_7219?: SortOrder
    }

    export type GA_ANKETA_OBOROT_BRANDS2WhereUniqueInput = Prisma.AtLeast<
        {
            AOB_ABA_ID?: bigint | number
            AND?:
                | GA_ANKETA_OBOROT_BRANDS2WhereInput
                | GA_ANKETA_OBOROT_BRANDS2WhereInput[]
            OR?: GA_ANKETA_OBOROT_BRANDS2WhereInput[]
            NOT?:
                | GA_ANKETA_OBOROT_BRANDS2WhereInput
                | GA_ANKETA_OBOROT_BRANDS2WhereInput[]
            AOB_DATETIME?:
                | DateTimeFilter<'GA_ANKETA_OBOROT_BRANDS2'>
                | Date
                | string
            AOB_ALL_7438?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50011_7438?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50012_7438?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50013_7438?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50014_7438?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_ALL_7801?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50011_7801?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50012_7801?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50013_7801?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50014_7801?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_ALL_7763?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50011_7763?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50012_7763?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50013_7763?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50014_7763?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_ALL_265?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50011_265?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50012_265?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50013_265?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50014_265?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_ALL_24158?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50011_24158?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50012_24158?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50013_24158?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50014_24158?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_ALL_7219?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50011_7219?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50012_7219?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50013_7219?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
            AOB_50014_7219?: FloatFilter<'GA_ANKETA_OBOROT_BRANDS2'> | number
        },
        'AOB_ABA_ID'
    >

    export type GA_ANKETA_OBOROT_BRANDS2OrderByWithAggregationInput = {
        AOB_ABA_ID?: SortOrder
        AOB_DATETIME?: SortOrder
        AOB_ALL_7438?: SortOrder
        AOB_50011_7438?: SortOrder
        AOB_50012_7438?: SortOrder
        AOB_50013_7438?: SortOrder
        AOB_50014_7438?: SortOrder
        AOB_ALL_7801?: SortOrder
        AOB_50011_7801?: SortOrder
        AOB_50012_7801?: SortOrder
        AOB_50013_7801?: SortOrder
        AOB_50014_7801?: SortOrder
        AOB_ALL_7763?: SortOrder
        AOB_50011_7763?: SortOrder
        AOB_50012_7763?: SortOrder
        AOB_50013_7763?: SortOrder
        AOB_50014_7763?: SortOrder
        AOB_ALL_265?: SortOrder
        AOB_50011_265?: SortOrder
        AOB_50012_265?: SortOrder
        AOB_50013_265?: SortOrder
        AOB_50014_265?: SortOrder
        AOB_ALL_24158?: SortOrder
        AOB_50011_24158?: SortOrder
        AOB_50012_24158?: SortOrder
        AOB_50013_24158?: SortOrder
        AOB_50014_24158?: SortOrder
        AOB_ALL_7219?: SortOrder
        AOB_50011_7219?: SortOrder
        AOB_50012_7219?: SortOrder
        AOB_50013_7219?: SortOrder
        AOB_50014_7219?: SortOrder
        _count?: GA_ANKETA_OBOROT_BRANDS2CountOrderByAggregateInput
        _avg?: GA_ANKETA_OBOROT_BRANDS2AvgOrderByAggregateInput
        _max?: GA_ANKETA_OBOROT_BRANDS2MaxOrderByAggregateInput
        _min?: GA_ANKETA_OBOROT_BRANDS2MinOrderByAggregateInput
        _sum?: GA_ANKETA_OBOROT_BRANDS2SumOrderByAggregateInput
    }

    export type GA_ANKETA_OBOROT_BRANDS2ScalarWhereWithAggregatesInput = {
        AND?:
            | GA_ANKETA_OBOROT_BRANDS2ScalarWhereWithAggregatesInput
            | GA_ANKETA_OBOROT_BRANDS2ScalarWhereWithAggregatesInput[]
        OR?: GA_ANKETA_OBOROT_BRANDS2ScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_ANKETA_OBOROT_BRANDS2ScalarWhereWithAggregatesInput
            | GA_ANKETA_OBOROT_BRANDS2ScalarWhereWithAggregatesInput[]
        AOB_ABA_ID?:
            | BigIntWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | bigint
            | number
        AOB_DATETIME?:
            | DateTimeWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | Date
            | string
        AOB_ALL_7438?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50011_7438?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50012_7438?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50013_7438?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50014_7438?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_ALL_7801?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50011_7801?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50012_7801?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50013_7801?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50014_7801?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_ALL_7763?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50011_7763?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50012_7763?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50013_7763?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50014_7763?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_ALL_265?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50011_265?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50012_265?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50013_265?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50014_265?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_ALL_24158?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50011_24158?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50012_24158?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50013_24158?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50014_24158?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_ALL_7219?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50011_7219?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50012_7219?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50013_7219?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
        AOB_50014_7219?:
            | FloatWithAggregatesFilter<'GA_ANKETA_OBOROT_BRANDS2'>
            | number
    }

    export type GA_ANKETA_OBOROT_COUNTSWhereInput = {
        AND?:
            | GA_ANKETA_OBOROT_COUNTSWhereInput
            | GA_ANKETA_OBOROT_COUNTSWhereInput[]
        OR?: GA_ANKETA_OBOROT_COUNTSWhereInput[]
        NOT?:
            | GA_ANKETA_OBOROT_COUNTSWhereInput
            | GA_ANKETA_OBOROT_COUNTSWhereInput[]
        AOC_ABA_ID?: BigIntFilter<'GA_ANKETA_OBOROT_COUNTS'> | bigint | number
        AOC_DATETIME?: DateTimeFilter<'GA_ANKETA_OBOROT_COUNTS'> | Date | string
        AOC_ALL_24189?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_24189?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_24189?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_24189?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_24189?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_10566?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_10566?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_10566?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_10566?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_10566?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_20079?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_20079?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_20079?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_20079?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_20079?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_7251?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_7251?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_7251?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_7251?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_7251?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_24191?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_24191?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_24191?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_24191?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_24191?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_193?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_193?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_193?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_193?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_193?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_7610?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_7610?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_7610?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_7610?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_7610?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_10180?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_10180?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_10180?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_10180?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_10180?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_177?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_177?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_177?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_177?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_177?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_10223?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_10223?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_10223?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_10223?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_10223?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_7230?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_7230?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_7230?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_7230?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_7230?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_1359?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_1359?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_1359?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_1359?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_1359?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_110?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_110?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_110?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_110?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_110?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_20182?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_20182?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_20182?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_20182?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_20182?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_20203?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_20203?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_20203?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_20203?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_20203?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_24155?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_24155?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_24155?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_24155?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_24155?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_24198?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_24198?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_24198?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_24198?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_24198?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_135?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_135?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_135?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_135?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_135?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_24196?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_24196?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_24196?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_24196?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_24196?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_24197?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_24197?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_24197?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_24197?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_24197?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_ALL_21?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_21?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50012_21?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50013_21?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50014_21?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
    }

    export type GA_ANKETA_OBOROT_COUNTSOrderByWithRelationInput = {
        AOC_ABA_ID?: SortOrder
        AOC_DATETIME?: SortOrder
        AOC_ALL_24189?: SortOrder
        AOC_50011_24189?: SortOrder
        AOC_50012_24189?: SortOrder
        AOC_50013_24189?: SortOrder
        AOC_50014_24189?: SortOrder
        AOC_ALL_10566?: SortOrder
        AOC_50011_10566?: SortOrder
        AOC_50012_10566?: SortOrder
        AOC_50013_10566?: SortOrder
        AOC_50014_10566?: SortOrder
        AOC_ALL_20079?: SortOrder
        AOC_50011_20079?: SortOrder
        AOC_50012_20079?: SortOrder
        AOC_50013_20079?: SortOrder
        AOC_50014_20079?: SortOrder
        AOC_ALL_7251?: SortOrder
        AOC_50011_7251?: SortOrder
        AOC_50012_7251?: SortOrder
        AOC_50013_7251?: SortOrder
        AOC_50014_7251?: SortOrder
        AOC_ALL_24191?: SortOrder
        AOC_50011_24191?: SortOrder
        AOC_50012_24191?: SortOrder
        AOC_50013_24191?: SortOrder
        AOC_50014_24191?: SortOrder
        AOC_ALL_193?: SortOrder
        AOC_50011_193?: SortOrder
        AOC_50012_193?: SortOrder
        AOC_50013_193?: SortOrder
        AOC_50014_193?: SortOrder
        AOC_ALL_7610?: SortOrder
        AOC_50011_7610?: SortOrder
        AOC_50012_7610?: SortOrder
        AOC_50013_7610?: SortOrder
        AOC_50014_7610?: SortOrder
        AOC_ALL_10180?: SortOrder
        AOC_50011_10180?: SortOrder
        AOC_50012_10180?: SortOrder
        AOC_50013_10180?: SortOrder
        AOC_50014_10180?: SortOrder
        AOC_ALL_177?: SortOrder
        AOC_50011_177?: SortOrder
        AOC_50012_177?: SortOrder
        AOC_50013_177?: SortOrder
        AOC_50014_177?: SortOrder
        AOC_ALL_10223?: SortOrder
        AOC_50011_10223?: SortOrder
        AOC_50012_10223?: SortOrder
        AOC_50013_10223?: SortOrder
        AOC_50014_10223?: SortOrder
        AOC_ALL_7230?: SortOrder
        AOC_50011_7230?: SortOrder
        AOC_50012_7230?: SortOrder
        AOC_50013_7230?: SortOrder
        AOC_50014_7230?: SortOrder
        AOC_ALL_1359?: SortOrder
        AOC_50011_1359?: SortOrder
        AOC_50012_1359?: SortOrder
        AOC_50013_1359?: SortOrder
        AOC_50014_1359?: SortOrder
        AOC_ALL_110?: SortOrder
        AOC_50011_110?: SortOrder
        AOC_50012_110?: SortOrder
        AOC_50013_110?: SortOrder
        AOC_50014_110?: SortOrder
        AOC_ALL_20182?: SortOrder
        AOC_50011_20182?: SortOrder
        AOC_50012_20182?: SortOrder
        AOC_50013_20182?: SortOrder
        AOC_50014_20182?: SortOrder
        AOC_ALL_20203?: SortOrder
        AOC_50011_20203?: SortOrder
        AOC_50012_20203?: SortOrder
        AOC_50013_20203?: SortOrder
        AOC_50014_20203?: SortOrder
        AOC_ALL_24155?: SortOrder
        AOC_50011_24155?: SortOrder
        AOC_50012_24155?: SortOrder
        AOC_50013_24155?: SortOrder
        AOC_50014_24155?: SortOrder
        AOC_ALL_24198?: SortOrder
        AOC_50011_24198?: SortOrder
        AOC_50012_24198?: SortOrder
        AOC_50013_24198?: SortOrder
        AOC_50014_24198?: SortOrder
        AOC_ALL_135?: SortOrder
        AOC_50011_135?: SortOrder
        AOC_50012_135?: SortOrder
        AOC_50013_135?: SortOrder
        AOC_50014_135?: SortOrder
        AOC_ALL_24196?: SortOrder
        AOC_50011_24196?: SortOrder
        AOC_50012_24196?: SortOrder
        AOC_50013_24196?: SortOrder
        AOC_50014_24196?: SortOrder
        AOC_ALL_24197?: SortOrder
        AOC_50011_24197?: SortOrder
        AOC_50012_24197?: SortOrder
        AOC_50013_24197?: SortOrder
        AOC_50014_24197?: SortOrder
        AOC_ALL_21?: SortOrder
        AOC_50011_21?: SortOrder
        AOC_50012_21?: SortOrder
        AOC_50013_21?: SortOrder
        AOC_50014_21?: SortOrder
    }

    export type GA_ANKETA_OBOROT_COUNTSWhereUniqueInput = Prisma.AtLeast<
        {
            AOC_ABA_ID?: bigint | number
            AND?:
                | GA_ANKETA_OBOROT_COUNTSWhereInput
                | GA_ANKETA_OBOROT_COUNTSWhereInput[]
            OR?: GA_ANKETA_OBOROT_COUNTSWhereInput[]
            NOT?:
                | GA_ANKETA_OBOROT_COUNTSWhereInput
                | GA_ANKETA_OBOROT_COUNTSWhereInput[]
            AOC_DATETIME?:
                | DateTimeFilter<'GA_ANKETA_OBOROT_COUNTS'>
                | Date
                | string
            AOC_ALL_24189?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_24189?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_24189?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_24189?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_24189?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_10566?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_10566?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_10566?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_10566?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_10566?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_20079?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_20079?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_20079?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_20079?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_20079?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_7251?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_7251?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_7251?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_7251?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_7251?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_24191?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_24191?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_24191?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_24191?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_24191?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_193?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_193?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_193?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_193?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_193?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_7610?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_7610?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_7610?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_7610?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_7610?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_10180?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_10180?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_10180?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_10180?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_10180?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_177?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_177?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_177?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_177?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_177?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_10223?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_10223?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_10223?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_10223?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_10223?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_7230?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_7230?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_7230?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_7230?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_7230?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_1359?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_1359?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_1359?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_1359?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_1359?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_110?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_110?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_110?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_110?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_110?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_20182?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_20182?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_20182?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_20182?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_20182?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_20203?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_20203?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_20203?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_20203?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_20203?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_24155?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_24155?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_24155?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_24155?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_24155?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_24198?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_24198?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_24198?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_24198?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_24198?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_135?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_135?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_135?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_135?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_135?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_24196?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_24196?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_24196?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_24196?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_24196?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_24197?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_24197?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_24197?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_24197?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_24197?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_ALL_21?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50011_21?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50012_21?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50013_21?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
            AOC_50014_21?: IntFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        },
        'AOC_ABA_ID'
    >

    export type GA_ANKETA_OBOROT_COUNTSOrderByWithAggregationInput = {
        AOC_ABA_ID?: SortOrder
        AOC_DATETIME?: SortOrder
        AOC_ALL_24189?: SortOrder
        AOC_50011_24189?: SortOrder
        AOC_50012_24189?: SortOrder
        AOC_50013_24189?: SortOrder
        AOC_50014_24189?: SortOrder
        AOC_ALL_10566?: SortOrder
        AOC_50011_10566?: SortOrder
        AOC_50012_10566?: SortOrder
        AOC_50013_10566?: SortOrder
        AOC_50014_10566?: SortOrder
        AOC_ALL_20079?: SortOrder
        AOC_50011_20079?: SortOrder
        AOC_50012_20079?: SortOrder
        AOC_50013_20079?: SortOrder
        AOC_50014_20079?: SortOrder
        AOC_ALL_7251?: SortOrder
        AOC_50011_7251?: SortOrder
        AOC_50012_7251?: SortOrder
        AOC_50013_7251?: SortOrder
        AOC_50014_7251?: SortOrder
        AOC_ALL_24191?: SortOrder
        AOC_50011_24191?: SortOrder
        AOC_50012_24191?: SortOrder
        AOC_50013_24191?: SortOrder
        AOC_50014_24191?: SortOrder
        AOC_ALL_193?: SortOrder
        AOC_50011_193?: SortOrder
        AOC_50012_193?: SortOrder
        AOC_50013_193?: SortOrder
        AOC_50014_193?: SortOrder
        AOC_ALL_7610?: SortOrder
        AOC_50011_7610?: SortOrder
        AOC_50012_7610?: SortOrder
        AOC_50013_7610?: SortOrder
        AOC_50014_7610?: SortOrder
        AOC_ALL_10180?: SortOrder
        AOC_50011_10180?: SortOrder
        AOC_50012_10180?: SortOrder
        AOC_50013_10180?: SortOrder
        AOC_50014_10180?: SortOrder
        AOC_ALL_177?: SortOrder
        AOC_50011_177?: SortOrder
        AOC_50012_177?: SortOrder
        AOC_50013_177?: SortOrder
        AOC_50014_177?: SortOrder
        AOC_ALL_10223?: SortOrder
        AOC_50011_10223?: SortOrder
        AOC_50012_10223?: SortOrder
        AOC_50013_10223?: SortOrder
        AOC_50014_10223?: SortOrder
        AOC_ALL_7230?: SortOrder
        AOC_50011_7230?: SortOrder
        AOC_50012_7230?: SortOrder
        AOC_50013_7230?: SortOrder
        AOC_50014_7230?: SortOrder
        AOC_ALL_1359?: SortOrder
        AOC_50011_1359?: SortOrder
        AOC_50012_1359?: SortOrder
        AOC_50013_1359?: SortOrder
        AOC_50014_1359?: SortOrder
        AOC_ALL_110?: SortOrder
        AOC_50011_110?: SortOrder
        AOC_50012_110?: SortOrder
        AOC_50013_110?: SortOrder
        AOC_50014_110?: SortOrder
        AOC_ALL_20182?: SortOrder
        AOC_50011_20182?: SortOrder
        AOC_50012_20182?: SortOrder
        AOC_50013_20182?: SortOrder
        AOC_50014_20182?: SortOrder
        AOC_ALL_20203?: SortOrder
        AOC_50011_20203?: SortOrder
        AOC_50012_20203?: SortOrder
        AOC_50013_20203?: SortOrder
        AOC_50014_20203?: SortOrder
        AOC_ALL_24155?: SortOrder
        AOC_50011_24155?: SortOrder
        AOC_50012_24155?: SortOrder
        AOC_50013_24155?: SortOrder
        AOC_50014_24155?: SortOrder
        AOC_ALL_24198?: SortOrder
        AOC_50011_24198?: SortOrder
        AOC_50012_24198?: SortOrder
        AOC_50013_24198?: SortOrder
        AOC_50014_24198?: SortOrder
        AOC_ALL_135?: SortOrder
        AOC_50011_135?: SortOrder
        AOC_50012_135?: SortOrder
        AOC_50013_135?: SortOrder
        AOC_50014_135?: SortOrder
        AOC_ALL_24196?: SortOrder
        AOC_50011_24196?: SortOrder
        AOC_50012_24196?: SortOrder
        AOC_50013_24196?: SortOrder
        AOC_50014_24196?: SortOrder
        AOC_ALL_24197?: SortOrder
        AOC_50011_24197?: SortOrder
        AOC_50012_24197?: SortOrder
        AOC_50013_24197?: SortOrder
        AOC_50014_24197?: SortOrder
        AOC_ALL_21?: SortOrder
        AOC_50011_21?: SortOrder
        AOC_50012_21?: SortOrder
        AOC_50013_21?: SortOrder
        AOC_50014_21?: SortOrder
        _count?: GA_ANKETA_OBOROT_COUNTSCountOrderByAggregateInput
        _avg?: GA_ANKETA_OBOROT_COUNTSAvgOrderByAggregateInput
        _max?: GA_ANKETA_OBOROT_COUNTSMaxOrderByAggregateInput
        _min?: GA_ANKETA_OBOROT_COUNTSMinOrderByAggregateInput
        _sum?: GA_ANKETA_OBOROT_COUNTSSumOrderByAggregateInput
    }

    export type GA_ANKETA_OBOROT_COUNTSScalarWhereWithAggregatesInput = {
        AND?:
            | GA_ANKETA_OBOROT_COUNTSScalarWhereWithAggregatesInput
            | GA_ANKETA_OBOROT_COUNTSScalarWhereWithAggregatesInput[]
        OR?: GA_ANKETA_OBOROT_COUNTSScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_ANKETA_OBOROT_COUNTSScalarWhereWithAggregatesInput
            | GA_ANKETA_OBOROT_COUNTSScalarWhereWithAggregatesInput[]
        AOC_ABA_ID?:
            | BigIntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | bigint
            | number
        AOC_DATETIME?:
            | DateTimeWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | Date
            | string
        AOC_ALL_24189?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_24189?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_24189?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_24189?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_24189?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_10566?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_10566?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_10566?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_10566?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_10566?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_20079?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_20079?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_20079?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_20079?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_20079?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_7251?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_7251?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_7251?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_7251?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_7251?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_24191?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_24191?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_24191?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_24191?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_24191?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_193?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_193?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_193?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_193?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_193?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_7610?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_7610?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_7610?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_7610?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_7610?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_10180?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_10180?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_10180?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_10180?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_10180?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_177?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_177?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_177?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_177?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_177?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_10223?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_10223?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_10223?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_10223?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_10223?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_7230?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_7230?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_7230?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_7230?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_7230?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_1359?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_1359?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_1359?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_1359?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_1359?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_110?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_110?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_110?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_110?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_110?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_20182?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_20182?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_20182?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_20182?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_20182?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_20203?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_20203?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_20203?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_20203?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_20203?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_24155?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_24155?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_24155?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_24155?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_24155?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_24198?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_24198?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_24198?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_24198?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_24198?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_135?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_135?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_135?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_135?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_135?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_24196?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_24196?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_24196?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_24196?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_24196?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_24197?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50011_24197?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_24197?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_24197?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_24197?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_ALL_21?: IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'> | number
        AOC_50011_21?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50012_21?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50013_21?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
        AOC_50014_21?:
            | IntWithAggregatesFilter<'GA_ANKETA_OBOROT_COUNTS'>
            | number
    }

    export type GA_ANKETA_SCORESWhereInput = {
        AND?: GA_ANKETA_SCORESWhereInput | GA_ANKETA_SCORESWhereInput[]
        OR?: GA_ANKETA_SCORESWhereInput[]
        NOT?: GA_ANKETA_SCORESWhereInput | GA_ANKETA_SCORESWhereInput[]
        ANS_WSU_ID?: BigIntFilter<'GA_ANKETA_SCORES'> | bigint | number
        ANS_SCORES?: IntFilter<'GA_ANKETA_SCORES'> | number
        ANS_DATETIME?: DateTimeFilter<'GA_ANKETA_SCORES'> | Date | string
        ANS_ISSHOW?: BoolFilter<'GA_ANKETA_SCORES'> | boolean
    }

    export type GA_ANKETA_SCORESOrderByWithRelationInput = {
        ANS_WSU_ID?: SortOrder
        ANS_SCORES?: SortOrder
        ANS_DATETIME?: SortOrder
        ANS_ISSHOW?: SortOrder
    }

    export type GA_ANKETA_SCORESWhereUniqueInput = Prisma.AtLeast<
        {
            ANS_WSU_ID?: bigint | number
            AND?: GA_ANKETA_SCORESWhereInput | GA_ANKETA_SCORESWhereInput[]
            OR?: GA_ANKETA_SCORESWhereInput[]
            NOT?: GA_ANKETA_SCORESWhereInput | GA_ANKETA_SCORESWhereInput[]
            ANS_SCORES?: IntFilter<'GA_ANKETA_SCORES'> | number
            ANS_DATETIME?: DateTimeFilter<'GA_ANKETA_SCORES'> | Date | string
            ANS_ISSHOW?: BoolFilter<'GA_ANKETA_SCORES'> | boolean
        },
        'ANS_WSU_ID'
    >

    export type GA_ANKETA_SCORESOrderByWithAggregationInput = {
        ANS_WSU_ID?: SortOrder
        ANS_SCORES?: SortOrder
        ANS_DATETIME?: SortOrder
        ANS_ISSHOW?: SortOrder
        _count?: GA_ANKETA_SCORESCountOrderByAggregateInput
        _avg?: GA_ANKETA_SCORESAvgOrderByAggregateInput
        _max?: GA_ANKETA_SCORESMaxOrderByAggregateInput
        _min?: GA_ANKETA_SCORESMinOrderByAggregateInput
        _sum?: GA_ANKETA_SCORESSumOrderByAggregateInput
    }

    export type GA_ANKETA_SCORESScalarWhereWithAggregatesInput = {
        AND?:
            | GA_ANKETA_SCORESScalarWhereWithAggregatesInput
            | GA_ANKETA_SCORESScalarWhereWithAggregatesInput[]
        OR?: GA_ANKETA_SCORESScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_ANKETA_SCORESScalarWhereWithAggregatesInput
            | GA_ANKETA_SCORESScalarWhereWithAggregatesInput[]
        ANS_WSU_ID?:
            | BigIntWithAggregatesFilter<'GA_ANKETA_SCORES'>
            | bigint
            | number
        ANS_SCORES?: IntWithAggregatesFilter<'GA_ANKETA_SCORES'> | number
        ANS_DATETIME?:
            | DateTimeWithAggregatesFilter<'GA_ANKETA_SCORES'>
            | Date
            | string
        ANS_ISSHOW?: BoolWithAggregatesFilter<'GA_ANKETA_SCORES'> | boolean
    }

    export type GA_ANKETA_SCORES_HISTORYWhereInput = {
        AND?:
            | GA_ANKETA_SCORES_HISTORYWhereInput
            | GA_ANKETA_SCORES_HISTORYWhereInput[]
        OR?: GA_ANKETA_SCORES_HISTORYWhereInput[]
        NOT?:
            | GA_ANKETA_SCORES_HISTORYWhereInput
            | GA_ANKETA_SCORES_HISTORYWhereInput[]
        ASH_WSU_ID?: BigIntFilter<'GA_ANKETA_SCORES_HISTORY'> | bigint | number
        ASH_SCORES?: IntFilter<'GA_ANKETA_SCORES_HISTORY'> | number
        ASH_DATETIME?:
            | DateTimeFilter<'GA_ANKETA_SCORES_HISTORY'>
            | Date
            | string
        ASH_DESC?: StringFilter<'GA_ANKETA_SCORES_HISTORY'> | string
        ASH_TYPE?: IntFilter<'GA_ANKETA_SCORES_HISTORY'> | number
        ASH_SCORES_OLD?: IntFilter<'GA_ANKETA_SCORES_HISTORY'> | number
        ASH_EVENT_STATUS?: BoolFilter<'GA_ANKETA_SCORES_HISTORY'> | boolean
        ASH_DATETIME_UPDATE?:
            | DateTimeFilter<'GA_ANKETA_SCORES_HISTORY'>
            | Date
            | string
        ASH_IZO_ID?: BigIntFilter<'GA_ANKETA_SCORES_HISTORY'> | bigint | number
    }

    export type GA_ANKETA_SCORES_HISTORYOrderByWithRelationInput = {
        ASH_WSU_ID?: SortOrder
        ASH_SCORES?: SortOrder
        ASH_DATETIME?: SortOrder
        ASH_DESC?: SortOrder
        ASH_TYPE?: SortOrder
        ASH_SCORES_OLD?: SortOrder
        ASH_EVENT_STATUS?: SortOrder
        ASH_DATETIME_UPDATE?: SortOrder
        ASH_IZO_ID?: SortOrder
    }

    export type GA_ANKETA_SCORES_HISTORYWhereUniqueInput = Prisma.AtLeast<
        {
            ASH_WSU_ID?: bigint | number
            AND?:
                | GA_ANKETA_SCORES_HISTORYWhereInput
                | GA_ANKETA_SCORES_HISTORYWhereInput[]
            OR?: GA_ANKETA_SCORES_HISTORYWhereInput[]
            NOT?:
                | GA_ANKETA_SCORES_HISTORYWhereInput
                | GA_ANKETA_SCORES_HISTORYWhereInput[]
            ASH_SCORES?: IntFilter<'GA_ANKETA_SCORES_HISTORY'> | number
            ASH_DATETIME?:
                | DateTimeFilter<'GA_ANKETA_SCORES_HISTORY'>
                | Date
                | string
            ASH_DESC?: StringFilter<'GA_ANKETA_SCORES_HISTORY'> | string
            ASH_TYPE?: IntFilter<'GA_ANKETA_SCORES_HISTORY'> | number
            ASH_SCORES_OLD?: IntFilter<'GA_ANKETA_SCORES_HISTORY'> | number
            ASH_EVENT_STATUS?: BoolFilter<'GA_ANKETA_SCORES_HISTORY'> | boolean
            ASH_DATETIME_UPDATE?:
                | DateTimeFilter<'GA_ANKETA_SCORES_HISTORY'>
                | Date
                | string
            ASH_IZO_ID?:
                | BigIntFilter<'GA_ANKETA_SCORES_HISTORY'>
                | bigint
                | number
        },
        'ASH_WSU_ID'
    >

    export type GA_ANKETA_SCORES_HISTORYOrderByWithAggregationInput = {
        ASH_WSU_ID?: SortOrder
        ASH_SCORES?: SortOrder
        ASH_DATETIME?: SortOrder
        ASH_DESC?: SortOrder
        ASH_TYPE?: SortOrder
        ASH_SCORES_OLD?: SortOrder
        ASH_EVENT_STATUS?: SortOrder
        ASH_DATETIME_UPDATE?: SortOrder
        ASH_IZO_ID?: SortOrder
        _count?: GA_ANKETA_SCORES_HISTORYCountOrderByAggregateInput
        _avg?: GA_ANKETA_SCORES_HISTORYAvgOrderByAggregateInput
        _max?: GA_ANKETA_SCORES_HISTORYMaxOrderByAggregateInput
        _min?: GA_ANKETA_SCORES_HISTORYMinOrderByAggregateInput
        _sum?: GA_ANKETA_SCORES_HISTORYSumOrderByAggregateInput
    }

    export type GA_ANKETA_SCORES_HISTORYScalarWhereWithAggregatesInput = {
        AND?:
            | GA_ANKETA_SCORES_HISTORYScalarWhereWithAggregatesInput
            | GA_ANKETA_SCORES_HISTORYScalarWhereWithAggregatesInput[]
        OR?: GA_ANKETA_SCORES_HISTORYScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_ANKETA_SCORES_HISTORYScalarWhereWithAggregatesInput
            | GA_ANKETA_SCORES_HISTORYScalarWhereWithAggregatesInput[]
        ASH_WSU_ID?:
            | BigIntWithAggregatesFilter<'GA_ANKETA_SCORES_HISTORY'>
            | bigint
            | number
        ASH_SCORES?:
            | IntWithAggregatesFilter<'GA_ANKETA_SCORES_HISTORY'>
            | number
        ASH_DATETIME?:
            | DateTimeWithAggregatesFilter<'GA_ANKETA_SCORES_HISTORY'>
            | Date
            | string
        ASH_DESC?:
            | StringWithAggregatesFilter<'GA_ANKETA_SCORES_HISTORY'>
            | string
        ASH_TYPE?: IntWithAggregatesFilter<'GA_ANKETA_SCORES_HISTORY'> | number
        ASH_SCORES_OLD?:
            | IntWithAggregatesFilter<'GA_ANKETA_SCORES_HISTORY'>
            | number
        ASH_EVENT_STATUS?:
            | BoolWithAggregatesFilter<'GA_ANKETA_SCORES_HISTORY'>
            | boolean
        ASH_DATETIME_UPDATE?:
            | DateTimeWithAggregatesFilter<'GA_ANKETA_SCORES_HISTORY'>
            | Date
            | string
        ASH_IZO_ID?:
            | BigIntWithAggregatesFilter<'GA_ANKETA_SCORES_HISTORY'>
            | bigint
            | number
    }

    export type GA_ANKETA_SOREVNOVANIEWhereInput = {
        AND?:
            | GA_ANKETA_SOREVNOVANIEWhereInput
            | GA_ANKETA_SOREVNOVANIEWhereInput[]
        OR?: GA_ANKETA_SOREVNOVANIEWhereInput[]
        NOT?:
            | GA_ANKETA_SOREVNOVANIEWhereInput
            | GA_ANKETA_SOREVNOVANIEWhereInput[]
        ASR_YEAR?: IntFilter<'GA_ANKETA_SOREVNOVANIE'> | number
        ASR_MONTH?: IntFilter<'GA_ANKETA_SOREVNOVANIE'> | number
        ASR_WSU_ID?: BigIntFilter<'GA_ANKETA_SOREVNOVANIE'> | bigint | number
        ASR_LOGIN?: StringFilter<'GA_ANKETA_SOREVNOVANIE'> | string
        ASR_FIO?: StringFilter<'GA_ANKETA_SOREVNOVANIE'> | string
        ASR_SCORE?: IntFilter<'GA_ANKETA_SOREVNOVANIE'> | number
        ASR_DOLJNOST?: StringFilter<'GA_ANKETA_SOREVNOVANIE'> | string
        ASR_RUKOVODITEL?: BoolFilter<'GA_ANKETA_SOREVNOVANIE'> | boolean
    }

    export type GA_ANKETA_SOREVNOVANIEOrderByWithRelationInput = {
        ASR_YEAR?: SortOrder
        ASR_MONTH?: SortOrder
        ASR_WSU_ID?: SortOrder
        ASR_LOGIN?: SortOrder
        ASR_FIO?: SortOrder
        ASR_SCORE?: SortOrder
        ASR_DOLJNOST?: SortOrder
        ASR_RUKOVODITEL?: SortOrder
    }

    export type GA_ANKETA_SOREVNOVANIEWhereUniqueInput = Prisma.AtLeast<
        {
            ASR_WSU_ID?: bigint | number
            AND?:
                | GA_ANKETA_SOREVNOVANIEWhereInput
                | GA_ANKETA_SOREVNOVANIEWhereInput[]
            OR?: GA_ANKETA_SOREVNOVANIEWhereInput[]
            NOT?:
                | GA_ANKETA_SOREVNOVANIEWhereInput
                | GA_ANKETA_SOREVNOVANIEWhereInput[]
            ASR_YEAR?: IntFilter<'GA_ANKETA_SOREVNOVANIE'> | number
            ASR_MONTH?: IntFilter<'GA_ANKETA_SOREVNOVANIE'> | number
            ASR_LOGIN?: StringFilter<'GA_ANKETA_SOREVNOVANIE'> | string
            ASR_FIO?: StringFilter<'GA_ANKETA_SOREVNOVANIE'> | string
            ASR_SCORE?: IntFilter<'GA_ANKETA_SOREVNOVANIE'> | number
            ASR_DOLJNOST?: StringFilter<'GA_ANKETA_SOREVNOVANIE'> | string
            ASR_RUKOVODITEL?: BoolFilter<'GA_ANKETA_SOREVNOVANIE'> | boolean
        },
        'ASR_WSU_ID'
    >

    export type GA_ANKETA_SOREVNOVANIEOrderByWithAggregationInput = {
        ASR_YEAR?: SortOrder
        ASR_MONTH?: SortOrder
        ASR_WSU_ID?: SortOrder
        ASR_LOGIN?: SortOrder
        ASR_FIO?: SortOrder
        ASR_SCORE?: SortOrder
        ASR_DOLJNOST?: SortOrder
        ASR_RUKOVODITEL?: SortOrder
        _count?: GA_ANKETA_SOREVNOVANIECountOrderByAggregateInput
        _avg?: GA_ANKETA_SOREVNOVANIEAvgOrderByAggregateInput
        _max?: GA_ANKETA_SOREVNOVANIEMaxOrderByAggregateInput
        _min?: GA_ANKETA_SOREVNOVANIEMinOrderByAggregateInput
        _sum?: GA_ANKETA_SOREVNOVANIESumOrderByAggregateInput
    }

    export type GA_ANKETA_SOREVNOVANIEScalarWhereWithAggregatesInput = {
        AND?:
            | GA_ANKETA_SOREVNOVANIEScalarWhereWithAggregatesInput
            | GA_ANKETA_SOREVNOVANIEScalarWhereWithAggregatesInput[]
        OR?: GA_ANKETA_SOREVNOVANIEScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_ANKETA_SOREVNOVANIEScalarWhereWithAggregatesInput
            | GA_ANKETA_SOREVNOVANIEScalarWhereWithAggregatesInput[]
        ASR_YEAR?: IntWithAggregatesFilter<'GA_ANKETA_SOREVNOVANIE'> | number
        ASR_MONTH?: IntWithAggregatesFilter<'GA_ANKETA_SOREVNOVANIE'> | number
        ASR_WSU_ID?:
            | BigIntWithAggregatesFilter<'GA_ANKETA_SOREVNOVANIE'>
            | bigint
            | number
        ASR_LOGIN?:
            | StringWithAggregatesFilter<'GA_ANKETA_SOREVNOVANIE'>
            | string
        ASR_FIO?: StringWithAggregatesFilter<'GA_ANKETA_SOREVNOVANIE'> | string
        ASR_SCORE?: IntWithAggregatesFilter<'GA_ANKETA_SOREVNOVANIE'> | number
        ASR_DOLJNOST?:
            | StringWithAggregatesFilter<'GA_ANKETA_SOREVNOVANIE'>
            | string
        ASR_RUKOVODITEL?:
            | BoolWithAggregatesFilter<'GA_ANKETA_SOREVNOVANIE'>
            | boolean
    }

    export type GA_SUP_50012_SELLOUTWhereInput = {
        AND?: GA_SUP_50012_SELLOUTWhereInput | GA_SUP_50012_SELLOUTWhereInput[]
        OR?: GA_SUP_50012_SELLOUTWhereInput[]
        NOT?: GA_SUP_50012_SELLOUTWhereInput | GA_SUP_50012_SELLOUTWhereInput[]
        SPR_SPH_ID?: IntFilter<'GA_SUP_50012_SELLOUT'> | number
        SPR_INN?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
        SPR_CLIENT?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
        SPR_GROUPTYPE?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
        SPR_ARTICLE?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
        SPR_BRAND?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
        SPR_INFO?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
        SPR_QTY?: FloatFilter<'GA_SUP_50012_SELLOUT'> | number
        SPR_PRICE?: FloatFilter<'GA_SUP_50012_SELLOUT'> | number
        SPR_SUMMA?: FloatFilter<'GA_SUP_50012_SELLOUT'> | number
        SPR_ART_ID?: IntFilter<'GA_SUP_50012_SELLOUT'> | number
        SPR_DATETIME?: DateTimeFilter<'GA_SUP_50012_SELLOUT'> | Date | string
        SPR_ADDR?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
        SPR_CLIENT_CODE?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
        SPR_CLIENT_ID?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
        SPR_CLIENT_CODE2?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
        SPR_ADDR_ENC?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
    }

    export type GA_SUP_50012_SELLOUTOrderByWithRelationInput = {
        SPR_SPH_ID?: SortOrder
        SPR_INN?: SortOrder
        SPR_CLIENT?: SortOrder
        SPR_GROUPTYPE?: SortOrder
        SPR_ARTICLE?: SortOrder
        SPR_BRAND?: SortOrder
        SPR_INFO?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
        SPR_DATETIME?: SortOrder
        SPR_ADDR?: SortOrder
        SPR_CLIENT_CODE?: SortOrder
        SPR_CLIENT_ID?: SortOrder
        SPR_CLIENT_CODE2?: SortOrder
        SPR_ADDR_ENC?: SortOrder
    }

    export type GA_SUP_50012_SELLOUTWhereUniqueInput = Prisma.AtLeast<
        {
            SPR_SPH_ID?: number
            AND?:
                | GA_SUP_50012_SELLOUTWhereInput
                | GA_SUP_50012_SELLOUTWhereInput[]
            OR?: GA_SUP_50012_SELLOUTWhereInput[]
            NOT?:
                | GA_SUP_50012_SELLOUTWhereInput
                | GA_SUP_50012_SELLOUTWhereInput[]
            SPR_INN?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
            SPR_CLIENT?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
            SPR_GROUPTYPE?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
            SPR_ARTICLE?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
            SPR_BRAND?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
            SPR_INFO?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
            SPR_QTY?: FloatFilter<'GA_SUP_50012_SELLOUT'> | number
            SPR_PRICE?: FloatFilter<'GA_SUP_50012_SELLOUT'> | number
            SPR_SUMMA?: FloatFilter<'GA_SUP_50012_SELLOUT'> | number
            SPR_ART_ID?: IntFilter<'GA_SUP_50012_SELLOUT'> | number
            SPR_DATETIME?:
                | DateTimeFilter<'GA_SUP_50012_SELLOUT'>
                | Date
                | string
            SPR_ADDR?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
            SPR_CLIENT_CODE?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
            SPR_CLIENT_ID?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
            SPR_CLIENT_CODE2?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
            SPR_ADDR_ENC?: StringFilter<'GA_SUP_50012_SELLOUT'> | string
        },
        'SPR_SPH_ID'
    >

    export type GA_SUP_50012_SELLOUTOrderByWithAggregationInput = {
        SPR_SPH_ID?: SortOrder
        SPR_INN?: SortOrder
        SPR_CLIENT?: SortOrder
        SPR_GROUPTYPE?: SortOrder
        SPR_ARTICLE?: SortOrder
        SPR_BRAND?: SortOrder
        SPR_INFO?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
        SPR_DATETIME?: SortOrder
        SPR_ADDR?: SortOrder
        SPR_CLIENT_CODE?: SortOrder
        SPR_CLIENT_ID?: SortOrder
        SPR_CLIENT_CODE2?: SortOrder
        SPR_ADDR_ENC?: SortOrder
        _count?: GA_SUP_50012_SELLOUTCountOrderByAggregateInput
        _avg?: GA_SUP_50012_SELLOUTAvgOrderByAggregateInput
        _max?: GA_SUP_50012_SELLOUTMaxOrderByAggregateInput
        _min?: GA_SUP_50012_SELLOUTMinOrderByAggregateInput
        _sum?: GA_SUP_50012_SELLOUTSumOrderByAggregateInput
    }

    export type GA_SUP_50012_SELLOUTScalarWhereWithAggregatesInput = {
        AND?:
            | GA_SUP_50012_SELLOUTScalarWhereWithAggregatesInput
            | GA_SUP_50012_SELLOUTScalarWhereWithAggregatesInput[]
        OR?: GA_SUP_50012_SELLOUTScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_SUP_50012_SELLOUTScalarWhereWithAggregatesInput
            | GA_SUP_50012_SELLOUTScalarWhereWithAggregatesInput[]
        SPR_SPH_ID?: IntWithAggregatesFilter<'GA_SUP_50012_SELLOUT'> | number
        SPR_INN?: StringWithAggregatesFilter<'GA_SUP_50012_SELLOUT'> | string
        SPR_CLIENT?: StringWithAggregatesFilter<'GA_SUP_50012_SELLOUT'> | string
        SPR_GROUPTYPE?:
            | StringWithAggregatesFilter<'GA_SUP_50012_SELLOUT'>
            | string
        SPR_ARTICLE?:
            | StringWithAggregatesFilter<'GA_SUP_50012_SELLOUT'>
            | string
        SPR_BRAND?: StringWithAggregatesFilter<'GA_SUP_50012_SELLOUT'> | string
        SPR_INFO?: StringWithAggregatesFilter<'GA_SUP_50012_SELLOUT'> | string
        SPR_QTY?: FloatWithAggregatesFilter<'GA_SUP_50012_SELLOUT'> | number
        SPR_PRICE?: FloatWithAggregatesFilter<'GA_SUP_50012_SELLOUT'> | number
        SPR_SUMMA?: FloatWithAggregatesFilter<'GA_SUP_50012_SELLOUT'> | number
        SPR_ART_ID?: IntWithAggregatesFilter<'GA_SUP_50012_SELLOUT'> | number
        SPR_DATETIME?:
            | DateTimeWithAggregatesFilter<'GA_SUP_50012_SELLOUT'>
            | Date
            | string
        SPR_ADDR?: StringWithAggregatesFilter<'GA_SUP_50012_SELLOUT'> | string
        SPR_CLIENT_CODE?:
            | StringWithAggregatesFilter<'GA_SUP_50012_SELLOUT'>
            | string
        SPR_CLIENT_ID?:
            | StringWithAggregatesFilter<'GA_SUP_50012_SELLOUT'>
            | string
        SPR_CLIENT_CODE2?:
            | StringWithAggregatesFilter<'GA_SUP_50012_SELLOUT'>
            | string
        SPR_ADDR_ENC?:
            | StringWithAggregatesFilter<'GA_SUP_50012_SELLOUT'>
            | string
    }

    export type GA_SUP_50013_SELLOUTWhereInput = {
        AND?: GA_SUP_50013_SELLOUTWhereInput | GA_SUP_50013_SELLOUTWhereInput[]
        OR?: GA_SUP_50013_SELLOUTWhereInput[]
        NOT?: GA_SUP_50013_SELLOUTWhereInput | GA_SUP_50013_SELLOUTWhereInput[]
        SPR_SPH_ID?: IntFilter<'GA_SUP_50013_SELLOUT'> | number
        SPR_INN?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
        SPR_CLIENT?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
        SPR_GROUPTYPE?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
        SPR_ARTICLE?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
        SPR_BRAND?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
        SPR_INFO?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
        SPR_QTY?: FloatFilter<'GA_SUP_50013_SELLOUT'> | number
        SPR_PRICE?: FloatFilter<'GA_SUP_50013_SELLOUT'> | number
        SPR_SUMMA?: FloatFilter<'GA_SUP_50013_SELLOUT'> | number
        SPR_ART_ID?: IntFilter<'GA_SUP_50013_SELLOUT'> | number
        SPR_DATETIME?: DateTimeFilter<'GA_SUP_50013_SELLOUT'> | Date | string
        SPR_ADDR?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
        SPR_CLIENT_CODE?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
        SPR_CLIENT_ID?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
        SPR_CLIENT_CODE2?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
        SPR_ADDR_ENC?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
    }

    export type GA_SUP_50013_SELLOUTOrderByWithRelationInput = {
        SPR_SPH_ID?: SortOrder
        SPR_INN?: SortOrder
        SPR_CLIENT?: SortOrder
        SPR_GROUPTYPE?: SortOrder
        SPR_ARTICLE?: SortOrder
        SPR_BRAND?: SortOrder
        SPR_INFO?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
        SPR_DATETIME?: SortOrder
        SPR_ADDR?: SortOrder
        SPR_CLIENT_CODE?: SortOrder
        SPR_CLIENT_ID?: SortOrder
        SPR_CLIENT_CODE2?: SortOrder
        SPR_ADDR_ENC?: SortOrder
    }

    export type GA_SUP_50013_SELLOUTWhereUniqueInput = Prisma.AtLeast<
        {
            SPR_SPH_ID?: number
            AND?:
                | GA_SUP_50013_SELLOUTWhereInput
                | GA_SUP_50013_SELLOUTWhereInput[]
            OR?: GA_SUP_50013_SELLOUTWhereInput[]
            NOT?:
                | GA_SUP_50013_SELLOUTWhereInput
                | GA_SUP_50013_SELLOUTWhereInput[]
            SPR_INN?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
            SPR_CLIENT?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
            SPR_GROUPTYPE?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
            SPR_ARTICLE?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
            SPR_BRAND?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
            SPR_INFO?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
            SPR_QTY?: FloatFilter<'GA_SUP_50013_SELLOUT'> | number
            SPR_PRICE?: FloatFilter<'GA_SUP_50013_SELLOUT'> | number
            SPR_SUMMA?: FloatFilter<'GA_SUP_50013_SELLOUT'> | number
            SPR_ART_ID?: IntFilter<'GA_SUP_50013_SELLOUT'> | number
            SPR_DATETIME?:
                | DateTimeFilter<'GA_SUP_50013_SELLOUT'>
                | Date
                | string
            SPR_ADDR?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
            SPR_CLIENT_CODE?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
            SPR_CLIENT_ID?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
            SPR_CLIENT_CODE2?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
            SPR_ADDR_ENC?: StringFilter<'GA_SUP_50013_SELLOUT'> | string
        },
        'SPR_SPH_ID'
    >

    export type GA_SUP_50013_SELLOUTOrderByWithAggregationInput = {
        SPR_SPH_ID?: SortOrder
        SPR_INN?: SortOrder
        SPR_CLIENT?: SortOrder
        SPR_GROUPTYPE?: SortOrder
        SPR_ARTICLE?: SortOrder
        SPR_BRAND?: SortOrder
        SPR_INFO?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
        SPR_DATETIME?: SortOrder
        SPR_ADDR?: SortOrder
        SPR_CLIENT_CODE?: SortOrder
        SPR_CLIENT_ID?: SortOrder
        SPR_CLIENT_CODE2?: SortOrder
        SPR_ADDR_ENC?: SortOrder
        _count?: GA_SUP_50013_SELLOUTCountOrderByAggregateInput
        _avg?: GA_SUP_50013_SELLOUTAvgOrderByAggregateInput
        _max?: GA_SUP_50013_SELLOUTMaxOrderByAggregateInput
        _min?: GA_SUP_50013_SELLOUTMinOrderByAggregateInput
        _sum?: GA_SUP_50013_SELLOUTSumOrderByAggregateInput
    }

    export type GA_SUP_50013_SELLOUTScalarWhereWithAggregatesInput = {
        AND?:
            | GA_SUP_50013_SELLOUTScalarWhereWithAggregatesInput
            | GA_SUP_50013_SELLOUTScalarWhereWithAggregatesInput[]
        OR?: GA_SUP_50013_SELLOUTScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_SUP_50013_SELLOUTScalarWhereWithAggregatesInput
            | GA_SUP_50013_SELLOUTScalarWhereWithAggregatesInput[]
        SPR_SPH_ID?: IntWithAggregatesFilter<'GA_SUP_50013_SELLOUT'> | number
        SPR_INN?: StringWithAggregatesFilter<'GA_SUP_50013_SELLOUT'> | string
        SPR_CLIENT?: StringWithAggregatesFilter<'GA_SUP_50013_SELLOUT'> | string
        SPR_GROUPTYPE?:
            | StringWithAggregatesFilter<'GA_SUP_50013_SELLOUT'>
            | string
        SPR_ARTICLE?:
            | StringWithAggregatesFilter<'GA_SUP_50013_SELLOUT'>
            | string
        SPR_BRAND?: StringWithAggregatesFilter<'GA_SUP_50013_SELLOUT'> | string
        SPR_INFO?: StringWithAggregatesFilter<'GA_SUP_50013_SELLOUT'> | string
        SPR_QTY?: FloatWithAggregatesFilter<'GA_SUP_50013_SELLOUT'> | number
        SPR_PRICE?: FloatWithAggregatesFilter<'GA_SUP_50013_SELLOUT'> | number
        SPR_SUMMA?: FloatWithAggregatesFilter<'GA_SUP_50013_SELLOUT'> | number
        SPR_ART_ID?: IntWithAggregatesFilter<'GA_SUP_50013_SELLOUT'> | number
        SPR_DATETIME?:
            | DateTimeWithAggregatesFilter<'GA_SUP_50013_SELLOUT'>
            | Date
            | string
        SPR_ADDR?: StringWithAggregatesFilter<'GA_SUP_50013_SELLOUT'> | string
        SPR_CLIENT_CODE?:
            | StringWithAggregatesFilter<'GA_SUP_50013_SELLOUT'>
            | string
        SPR_CLIENT_ID?:
            | StringWithAggregatesFilter<'GA_SUP_50013_SELLOUT'>
            | string
        SPR_CLIENT_CODE2?:
            | StringWithAggregatesFilter<'GA_SUP_50013_SELLOUT'>
            | string
        SPR_ADDR_ENC?:
            | StringWithAggregatesFilter<'GA_SUP_50013_SELLOUT'>
            | string
    }

    export type GA_SUP_50014_SELLOUTWhereInput = {
        AND?: GA_SUP_50014_SELLOUTWhereInput | GA_SUP_50014_SELLOUTWhereInput[]
        OR?: GA_SUP_50014_SELLOUTWhereInput[]
        NOT?: GA_SUP_50014_SELLOUTWhereInput | GA_SUP_50014_SELLOUTWhereInput[]
        SPR_SPH_ID?: IntFilter<'GA_SUP_50014_SELLOUT'> | number
        SPR_INN?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
        SPR_CLIENT?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
        SPR_GROUPTYPE?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
        SPR_ARTICLE?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
        SPR_BRAND?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
        SPR_INFO?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
        SPR_QTY?: FloatFilter<'GA_SUP_50014_SELLOUT'> | number
        SPR_PRICE?: FloatFilter<'GA_SUP_50014_SELLOUT'> | number
        SPR_SUMMA?: FloatFilter<'GA_SUP_50014_SELLOUT'> | number
        SPR_ART_ID?: IntFilter<'GA_SUP_50014_SELLOUT'> | number
        SPR_DATETIME?: DateTimeFilter<'GA_SUP_50014_SELLOUT'> | Date | string
        SPR_ADDR?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
        SPR_CLIENT_CODE?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
        SPR_CLIENT_ID?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
        SPR_CLIENT_CODE2?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
        SPR_ADDR_ENC?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
    }

    export type GA_SUP_50014_SELLOUTOrderByWithRelationInput = {
        SPR_SPH_ID?: SortOrder
        SPR_INN?: SortOrder
        SPR_CLIENT?: SortOrder
        SPR_GROUPTYPE?: SortOrder
        SPR_ARTICLE?: SortOrder
        SPR_BRAND?: SortOrder
        SPR_INFO?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
        SPR_DATETIME?: SortOrder
        SPR_ADDR?: SortOrder
        SPR_CLIENT_CODE?: SortOrder
        SPR_CLIENT_ID?: SortOrder
        SPR_CLIENT_CODE2?: SortOrder
        SPR_ADDR_ENC?: SortOrder
    }

    export type GA_SUP_50014_SELLOUTWhereUniqueInput = Prisma.AtLeast<
        {
            SPR_SPH_ID?: number
            AND?:
                | GA_SUP_50014_SELLOUTWhereInput
                | GA_SUP_50014_SELLOUTWhereInput[]
            OR?: GA_SUP_50014_SELLOUTWhereInput[]
            NOT?:
                | GA_SUP_50014_SELLOUTWhereInput
                | GA_SUP_50014_SELLOUTWhereInput[]
            SPR_INN?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
            SPR_CLIENT?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
            SPR_GROUPTYPE?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
            SPR_ARTICLE?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
            SPR_BRAND?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
            SPR_INFO?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
            SPR_QTY?: FloatFilter<'GA_SUP_50014_SELLOUT'> | number
            SPR_PRICE?: FloatFilter<'GA_SUP_50014_SELLOUT'> | number
            SPR_SUMMA?: FloatFilter<'GA_SUP_50014_SELLOUT'> | number
            SPR_ART_ID?: IntFilter<'GA_SUP_50014_SELLOUT'> | number
            SPR_DATETIME?:
                | DateTimeFilter<'GA_SUP_50014_SELLOUT'>
                | Date
                | string
            SPR_ADDR?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
            SPR_CLIENT_CODE?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
            SPR_CLIENT_ID?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
            SPR_CLIENT_CODE2?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
            SPR_ADDR_ENC?: StringFilter<'GA_SUP_50014_SELLOUT'> | string
        },
        'SPR_SPH_ID'
    >

    export type GA_SUP_50014_SELLOUTOrderByWithAggregationInput = {
        SPR_SPH_ID?: SortOrder
        SPR_INN?: SortOrder
        SPR_CLIENT?: SortOrder
        SPR_GROUPTYPE?: SortOrder
        SPR_ARTICLE?: SortOrder
        SPR_BRAND?: SortOrder
        SPR_INFO?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
        SPR_DATETIME?: SortOrder
        SPR_ADDR?: SortOrder
        SPR_CLIENT_CODE?: SortOrder
        SPR_CLIENT_ID?: SortOrder
        SPR_CLIENT_CODE2?: SortOrder
        SPR_ADDR_ENC?: SortOrder
        _count?: GA_SUP_50014_SELLOUTCountOrderByAggregateInput
        _avg?: GA_SUP_50014_SELLOUTAvgOrderByAggregateInput
        _max?: GA_SUP_50014_SELLOUTMaxOrderByAggregateInput
        _min?: GA_SUP_50014_SELLOUTMinOrderByAggregateInput
        _sum?: GA_SUP_50014_SELLOUTSumOrderByAggregateInput
    }

    export type GA_SUP_50014_SELLOUTScalarWhereWithAggregatesInput = {
        AND?:
            | GA_SUP_50014_SELLOUTScalarWhereWithAggregatesInput
            | GA_SUP_50014_SELLOUTScalarWhereWithAggregatesInput[]
        OR?: GA_SUP_50014_SELLOUTScalarWhereWithAggregatesInput[]
        NOT?:
            | GA_SUP_50014_SELLOUTScalarWhereWithAggregatesInput
            | GA_SUP_50014_SELLOUTScalarWhereWithAggregatesInput[]
        SPR_SPH_ID?: IntWithAggregatesFilter<'GA_SUP_50014_SELLOUT'> | number
        SPR_INN?: StringWithAggregatesFilter<'GA_SUP_50014_SELLOUT'> | string
        SPR_CLIENT?: StringWithAggregatesFilter<'GA_SUP_50014_SELLOUT'> | string
        SPR_GROUPTYPE?:
            | StringWithAggregatesFilter<'GA_SUP_50014_SELLOUT'>
            | string
        SPR_ARTICLE?:
            | StringWithAggregatesFilter<'GA_SUP_50014_SELLOUT'>
            | string
        SPR_BRAND?: StringWithAggregatesFilter<'GA_SUP_50014_SELLOUT'> | string
        SPR_INFO?: StringWithAggregatesFilter<'GA_SUP_50014_SELLOUT'> | string
        SPR_QTY?: FloatWithAggregatesFilter<'GA_SUP_50014_SELLOUT'> | number
        SPR_PRICE?: FloatWithAggregatesFilter<'GA_SUP_50014_SELLOUT'> | number
        SPR_SUMMA?: FloatWithAggregatesFilter<'GA_SUP_50014_SELLOUT'> | number
        SPR_ART_ID?: IntWithAggregatesFilter<'GA_SUP_50014_SELLOUT'> | number
        SPR_DATETIME?:
            | DateTimeWithAggregatesFilter<'GA_SUP_50014_SELLOUT'>
            | Date
            | string
        SPR_ADDR?: StringWithAggregatesFilter<'GA_SUP_50014_SELLOUT'> | string
        SPR_CLIENT_CODE?:
            | StringWithAggregatesFilter<'GA_SUP_50014_SELLOUT'>
            | string
        SPR_CLIENT_ID?:
            | StringWithAggregatesFilter<'GA_SUP_50014_SELLOUT'>
            | string
        SPR_CLIENT_CODE2?:
            | StringWithAggregatesFilter<'GA_SUP_50014_SELLOUT'>
            | string
        SPR_ADDR_ENC?:
            | StringWithAggregatesFilter<'GA_SUP_50014_SELLOUT'>
            | string
    }

    export type GA_ANKETA_ADDRCreateInput = {
        AAD_ABA_ID: bigint | number
        AAD_SHIROTA: string
        AAD_DOLGOTA: string
        AAD_OBLAST: string
        AAD_GOROD: string
        AAD_ADDR: string
    }

    export type GA_ANKETA_ADDRUncheckedCreateInput = {
        AAD_ABA_ID: bigint | number
        AAD_SHIROTA: string
        AAD_DOLGOTA: string
        AAD_OBLAST: string
        AAD_GOROD: string
        AAD_ADDR: string
    }

    export type GA_ANKETA_ADDRUpdateInput = {
        AAD_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AAD_SHIROTA?: StringFieldUpdateOperationsInput | string
        AAD_DOLGOTA?: StringFieldUpdateOperationsInput | string
        AAD_OBLAST?: StringFieldUpdateOperationsInput | string
        AAD_GOROD?: StringFieldUpdateOperationsInput | string
        AAD_ADDR?: StringFieldUpdateOperationsInput | string
    }

    export type GA_ANKETA_ADDRUncheckedUpdateInput = {
        AAD_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AAD_SHIROTA?: StringFieldUpdateOperationsInput | string
        AAD_DOLGOTA?: StringFieldUpdateOperationsInput | string
        AAD_OBLAST?: StringFieldUpdateOperationsInput | string
        AAD_GOROD?: StringFieldUpdateOperationsInput | string
        AAD_ADDR?: StringFieldUpdateOperationsInput | string
    }

    export type GA_ANKETA_ADDRCreateManyInput = {
        AAD_ABA_ID: bigint | number
        AAD_SHIROTA: string
        AAD_DOLGOTA: string
        AAD_OBLAST: string
        AAD_GOROD: string
        AAD_ADDR: string
    }

    export type GA_ANKETA_ADDRUpdateManyMutationInput = {
        AAD_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AAD_SHIROTA?: StringFieldUpdateOperationsInput | string
        AAD_DOLGOTA?: StringFieldUpdateOperationsInput | string
        AAD_OBLAST?: StringFieldUpdateOperationsInput | string
        AAD_GOROD?: StringFieldUpdateOperationsInput | string
        AAD_ADDR?: StringFieldUpdateOperationsInput | string
    }

    export type GA_ANKETA_ADDRUncheckedUpdateManyInput = {
        AAD_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AAD_SHIROTA?: StringFieldUpdateOperationsInput | string
        AAD_DOLGOTA?: StringFieldUpdateOperationsInput | string
        AAD_OBLAST?: StringFieldUpdateOperationsInput | string
        AAD_GOROD?: StringFieldUpdateOperationsInput | string
        AAD_ADDR?: StringFieldUpdateOperationsInput | string
    }

    export type GA_ANKETA_BASECreateInput = {
        ABA_WSU_ID?: bigint | number
        ABA_STO_NAME: string
        ABA_STO_ID1: string
        ABA_REMZONA_QTY?: number
        ABA_ENABLED?: boolean
        ABA_PHONE: string
        ABA_INN: string
        ABA_DATETIME_CREATED: Date | string
        ABA_DATETIME_UPDATED: Date | string
        ABA_ID: bigint | number
        ABA_DATETIME: Date | string
        ABA_STO_ID2: string
        ABA_STO_NAME_FIND?: string | null
    }

    export type GA_ANKETA_BASEUncheckedCreateInput = {
        ABA_WSU_ID?: bigint | number
        ABA_STO_NAME: string
        ABA_STO_ID1: string
        ABA_REMZONA_QTY?: number
        ABA_ENABLED?: boolean
        ABA_PHONE: string
        ABA_INN: string
        ABA_DATETIME_CREATED: Date | string
        ABA_DATETIME_UPDATED: Date | string
        ABA_ID: bigint | number
        ABA_DATETIME: Date | string
        ABA_STO_ID2: string
        ABA_STO_NAME_FIND?: string | null
    }

    export type GA_ANKETA_BASEUpdateInput = {
        ABA_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABA_STO_NAME?: StringFieldUpdateOperationsInput | string
        ABA_STO_ID1?: StringFieldUpdateOperationsInput | string
        ABA_REMZONA_QTY?: IntFieldUpdateOperationsInput | number
        ABA_ENABLED?: BoolFieldUpdateOperationsInput | boolean
        ABA_PHONE?: StringFieldUpdateOperationsInput | string
        ABA_INN?: StringFieldUpdateOperationsInput | string
        ABA_DATETIME_CREATED?:
            | DateTimeFieldUpdateOperationsInput
            | Date
            | string
        ABA_DATETIME_UPDATED?:
            | DateTimeFieldUpdateOperationsInput
            | Date
            | string
        ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABA_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ABA_STO_ID2?: StringFieldUpdateOperationsInput | string
        ABA_STO_NAME_FIND?:
            | NullableStringFieldUpdateOperationsInput
            | string
            | null
    }

    export type GA_ANKETA_BASEUncheckedUpdateInput = {
        ABA_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABA_STO_NAME?: StringFieldUpdateOperationsInput | string
        ABA_STO_ID1?: StringFieldUpdateOperationsInput | string
        ABA_REMZONA_QTY?: IntFieldUpdateOperationsInput | number
        ABA_ENABLED?: BoolFieldUpdateOperationsInput | boolean
        ABA_PHONE?: StringFieldUpdateOperationsInput | string
        ABA_INN?: StringFieldUpdateOperationsInput | string
        ABA_DATETIME_CREATED?:
            | DateTimeFieldUpdateOperationsInput
            | Date
            | string
        ABA_DATETIME_UPDATED?:
            | DateTimeFieldUpdateOperationsInput
            | Date
            | string
        ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABA_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ABA_STO_ID2?: StringFieldUpdateOperationsInput | string
        ABA_STO_NAME_FIND?:
            | NullableStringFieldUpdateOperationsInput
            | string
            | null
    }

    export type GA_ANKETA_BASECreateManyInput = {
        ABA_WSU_ID?: bigint | number
        ABA_STO_NAME: string
        ABA_STO_ID1: string
        ABA_REMZONA_QTY?: number
        ABA_ENABLED?: boolean
        ABA_PHONE: string
        ABA_INN: string
        ABA_DATETIME_CREATED: Date | string
        ABA_DATETIME_UPDATED: Date | string
        ABA_ID: bigint | number
        ABA_DATETIME: Date | string
        ABA_STO_ID2: string
        ABA_STO_NAME_FIND?: string | null
    }

    export type GA_ANKETA_BASEUpdateManyMutationInput = {
        ABA_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABA_STO_NAME?: StringFieldUpdateOperationsInput | string
        ABA_STO_ID1?: StringFieldUpdateOperationsInput | string
        ABA_REMZONA_QTY?: IntFieldUpdateOperationsInput | number
        ABA_ENABLED?: BoolFieldUpdateOperationsInput | boolean
        ABA_PHONE?: StringFieldUpdateOperationsInput | string
        ABA_INN?: StringFieldUpdateOperationsInput | string
        ABA_DATETIME_CREATED?:
            | DateTimeFieldUpdateOperationsInput
            | Date
            | string
        ABA_DATETIME_UPDATED?:
            | DateTimeFieldUpdateOperationsInput
            | Date
            | string
        ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABA_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ABA_STO_ID2?: StringFieldUpdateOperationsInput | string
        ABA_STO_NAME_FIND?:
            | NullableStringFieldUpdateOperationsInput
            | string
            | null
    }

    export type GA_ANKETA_BASEUncheckedUpdateManyInput = {
        ABA_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABA_STO_NAME?: StringFieldUpdateOperationsInput | string
        ABA_STO_ID1?: StringFieldUpdateOperationsInput | string
        ABA_REMZONA_QTY?: IntFieldUpdateOperationsInput | number
        ABA_ENABLED?: BoolFieldUpdateOperationsInput | boolean
        ABA_PHONE?: StringFieldUpdateOperationsInput | string
        ABA_INN?: StringFieldUpdateOperationsInput | string
        ABA_DATETIME_CREATED?:
            | DateTimeFieldUpdateOperationsInput
            | Date
            | string
        ABA_DATETIME_UPDATED?:
            | DateTimeFieldUpdateOperationsInput
            | Date
            | string
        ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABA_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ABA_STO_ID2?: StringFieldUpdateOperationsInput | string
        ABA_STO_NAME_FIND?:
            | NullableStringFieldUpdateOperationsInput
            | string
            | null
    }

    export type GA_ANKETA_BILETSCreateInput = {
        BIL_INN: string
        BIL_LOGIN: string
        BIL_N1: string
        BIL_N2: string
        BIL_N3: string
        BIL_N4: string
        BIL_N5: string
        BIL_N6: string
        BIL_N7: string
        BIL_WSU_ID: bigint | number
        BIL_N8: string
        BIL_ABA_ID: bigint | number
        BIL_DATETIME: Date | string
    }

    export type GA_ANKETA_BILETSUncheckedCreateInput = {
        BIL_INN: string
        BIL_LOGIN: string
        BIL_N1: string
        BIL_N2: string
        BIL_N3: string
        BIL_N4: string
        BIL_N5: string
        BIL_N6: string
        BIL_N7: string
        BIL_WSU_ID: bigint | number
        BIL_N8: string
        BIL_ABA_ID: bigint | number
        BIL_DATETIME: Date | string
    }

    export type GA_ANKETA_BILETSUpdateInput = {
        BIL_INN?: StringFieldUpdateOperationsInput | string
        BIL_LOGIN?: StringFieldUpdateOperationsInput | string
        BIL_N1?: StringFieldUpdateOperationsInput | string
        BIL_N2?: StringFieldUpdateOperationsInput | string
        BIL_N3?: StringFieldUpdateOperationsInput | string
        BIL_N4?: StringFieldUpdateOperationsInput | string
        BIL_N5?: StringFieldUpdateOperationsInput | string
        BIL_N6?: StringFieldUpdateOperationsInput | string
        BIL_N7?: StringFieldUpdateOperationsInput | string
        BIL_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        BIL_N8?: StringFieldUpdateOperationsInput | string
        BIL_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        BIL_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
    }

    export type GA_ANKETA_BILETSUncheckedUpdateInput = {
        BIL_INN?: StringFieldUpdateOperationsInput | string
        BIL_LOGIN?: StringFieldUpdateOperationsInput | string
        BIL_N1?: StringFieldUpdateOperationsInput | string
        BIL_N2?: StringFieldUpdateOperationsInput | string
        BIL_N3?: StringFieldUpdateOperationsInput | string
        BIL_N4?: StringFieldUpdateOperationsInput | string
        BIL_N5?: StringFieldUpdateOperationsInput | string
        BIL_N6?: StringFieldUpdateOperationsInput | string
        BIL_N7?: StringFieldUpdateOperationsInput | string
        BIL_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        BIL_N8?: StringFieldUpdateOperationsInput | string
        BIL_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        BIL_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
    }

    export type GA_ANKETA_BILETSCreateManyInput = {
        BIL_INN: string
        BIL_LOGIN: string
        BIL_N1: string
        BIL_N2: string
        BIL_N3: string
        BIL_N4: string
        BIL_N5: string
        BIL_N6: string
        BIL_N7: string
        BIL_WSU_ID: bigint | number
        BIL_N8: string
        BIL_ABA_ID: bigint | number
        BIL_DATETIME: Date | string
    }

    export type GA_ANKETA_BILETSUpdateManyMutationInput = {
        BIL_INN?: StringFieldUpdateOperationsInput | string
        BIL_LOGIN?: StringFieldUpdateOperationsInput | string
        BIL_N1?: StringFieldUpdateOperationsInput | string
        BIL_N2?: StringFieldUpdateOperationsInput | string
        BIL_N3?: StringFieldUpdateOperationsInput | string
        BIL_N4?: StringFieldUpdateOperationsInput | string
        BIL_N5?: StringFieldUpdateOperationsInput | string
        BIL_N6?: StringFieldUpdateOperationsInput | string
        BIL_N7?: StringFieldUpdateOperationsInput | string
        BIL_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        BIL_N8?: StringFieldUpdateOperationsInput | string
        BIL_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        BIL_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
    }

    export type GA_ANKETA_BILETSUncheckedUpdateManyInput = {
        BIL_INN?: StringFieldUpdateOperationsInput | string
        BIL_LOGIN?: StringFieldUpdateOperationsInput | string
        BIL_N1?: StringFieldUpdateOperationsInput | string
        BIL_N2?: StringFieldUpdateOperationsInput | string
        BIL_N3?: StringFieldUpdateOperationsInput | string
        BIL_N4?: StringFieldUpdateOperationsInput | string
        BIL_N5?: StringFieldUpdateOperationsInput | string
        BIL_N6?: StringFieldUpdateOperationsInput | string
        BIL_N7?: StringFieldUpdateOperationsInput | string
        BIL_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        BIL_N8?: StringFieldUpdateOperationsInput | string
        BIL_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        BIL_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
    }

    export type GA_ANKETA_BRAND_IMGCreateInput = {
        ABI_ABA_ID: bigint | number
        ABI_NUM: number
        ABI_NAME: string
        ABI_PATH: string
    }

    export type GA_ANKETA_BRAND_IMGUncheckedCreateInput = {
        ABI_ABA_ID: bigint | number
        ABI_NUM: number
        ABI_NAME: string
        ABI_PATH: string
    }

    export type GA_ANKETA_BRAND_IMGUpdateInput = {
        ABI_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABI_NUM?: IntFieldUpdateOperationsInput | number
        ABI_NAME?: StringFieldUpdateOperationsInput | string
        ABI_PATH?: StringFieldUpdateOperationsInput | string
    }

    export type GA_ANKETA_BRAND_IMGUncheckedUpdateInput = {
        ABI_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABI_NUM?: IntFieldUpdateOperationsInput | number
        ABI_NAME?: StringFieldUpdateOperationsInput | string
        ABI_PATH?: StringFieldUpdateOperationsInput | string
    }

    export type GA_ANKETA_BRAND_IMGCreateManyInput = {
        ABI_ABA_ID: bigint | number
        ABI_NUM: number
        ABI_NAME: string
        ABI_PATH: string
    }

    export type GA_ANKETA_BRAND_IMGUpdateManyMutationInput = {
        ABI_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABI_NUM?: IntFieldUpdateOperationsInput | number
        ABI_NAME?: StringFieldUpdateOperationsInput | string
        ABI_PATH?: StringFieldUpdateOperationsInput | string
    }

    export type GA_ANKETA_BRAND_IMGUncheckedUpdateManyInput = {
        ABI_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABI_NUM?: IntFieldUpdateOperationsInput | number
        ABI_NAME?: StringFieldUpdateOperationsInput | string
        ABI_PATH?: StringFieldUpdateOperationsInput | string
    }

    export type GA_ANKETA_DIRCreateInput = {
        AIR_ABA_ID: bigint | number
        AIR_NAME1: string
        AIR_NAME2: string
        AIR_NAME3: string
        AIR_PHONE: string
        AIR_EMAIL: string
    }

    export type GA_ANKETA_DIRUncheckedCreateInput = {
        AIR_ABA_ID: bigint | number
        AIR_NAME1: string
        AIR_NAME2: string
        AIR_NAME3: string
        AIR_PHONE: string
        AIR_EMAIL: string
    }

    export type GA_ANKETA_DIRUpdateInput = {
        AIR_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AIR_NAME1?: StringFieldUpdateOperationsInput | string
        AIR_NAME2?: StringFieldUpdateOperationsInput | string
        AIR_NAME3?: StringFieldUpdateOperationsInput | string
        AIR_PHONE?: StringFieldUpdateOperationsInput | string
        AIR_EMAIL?: StringFieldUpdateOperationsInput | string
    }

    export type GA_ANKETA_DIRUncheckedUpdateInput = {
        AIR_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AIR_NAME1?: StringFieldUpdateOperationsInput | string
        AIR_NAME2?: StringFieldUpdateOperationsInput | string
        AIR_NAME3?: StringFieldUpdateOperationsInput | string
        AIR_PHONE?: StringFieldUpdateOperationsInput | string
        AIR_EMAIL?: StringFieldUpdateOperationsInput | string
    }

    export type GA_ANKETA_DIRCreateManyInput = {
        AIR_ABA_ID: bigint | number
        AIR_NAME1: string
        AIR_NAME2: string
        AIR_NAME3: string
        AIR_PHONE: string
        AIR_EMAIL: string
    }

    export type GA_ANKETA_DIRUpdateManyMutationInput = {
        AIR_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AIR_NAME1?: StringFieldUpdateOperationsInput | string
        AIR_NAME2?: StringFieldUpdateOperationsInput | string
        AIR_NAME3?: StringFieldUpdateOperationsInput | string
        AIR_PHONE?: StringFieldUpdateOperationsInput | string
        AIR_EMAIL?: StringFieldUpdateOperationsInput | string
    }

    export type GA_ANKETA_DIRUncheckedUpdateManyInput = {
        AIR_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AIR_NAME1?: StringFieldUpdateOperationsInput | string
        AIR_NAME2?: StringFieldUpdateOperationsInput | string
        AIR_NAME3?: StringFieldUpdateOperationsInput | string
        AIR_PHONE?: StringFieldUpdateOperationsInput | string
        AIR_EMAIL?: StringFieldUpdateOperationsInput | string
    }

    export type GA_ANKETA_DOGOVORCreateInput = {
        ADO_ABA_ID: bigint | number
        ADO_NAME1: string
        ADO_NAME2: string
        ADO_NAME3: string
        ADO_PHONE: string
        ADO_EMAIL: string
        ADO_DATETIME: Date | string
        ADO_STATUS: boolean
    }

    export type GA_ANKETA_DOGOVORUncheckedCreateInput = {
        ADO_ABA_ID: bigint | number
        ADO_NAME1: string
        ADO_NAME2: string
        ADO_NAME3: string
        ADO_PHONE: string
        ADO_EMAIL: string
        ADO_DATETIME: Date | string
        ADO_STATUS: boolean
    }

    export type GA_ANKETA_DOGOVORUpdateInput = {
        ADO_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ADO_NAME1?: StringFieldUpdateOperationsInput | string
        ADO_NAME2?: StringFieldUpdateOperationsInput | string
        ADO_NAME3?: StringFieldUpdateOperationsInput | string
        ADO_PHONE?: StringFieldUpdateOperationsInput | string
        ADO_EMAIL?: StringFieldUpdateOperationsInput | string
        ADO_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ADO_STATUS?: BoolFieldUpdateOperationsInput | boolean
    }

    export type GA_ANKETA_DOGOVORUncheckedUpdateInput = {
        ADO_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ADO_NAME1?: StringFieldUpdateOperationsInput | string
        ADO_NAME2?: StringFieldUpdateOperationsInput | string
        ADO_NAME3?: StringFieldUpdateOperationsInput | string
        ADO_PHONE?: StringFieldUpdateOperationsInput | string
        ADO_EMAIL?: StringFieldUpdateOperationsInput | string
        ADO_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ADO_STATUS?: BoolFieldUpdateOperationsInput | boolean
    }

    export type GA_ANKETA_DOGOVORCreateManyInput = {
        ADO_ABA_ID: bigint | number
        ADO_NAME1: string
        ADO_NAME2: string
        ADO_NAME3: string
        ADO_PHONE: string
        ADO_EMAIL: string
        ADO_DATETIME: Date | string
        ADO_STATUS: boolean
    }

    export type GA_ANKETA_DOGOVORUpdateManyMutationInput = {
        ADO_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ADO_NAME1?: StringFieldUpdateOperationsInput | string
        ADO_NAME2?: StringFieldUpdateOperationsInput | string
        ADO_NAME3?: StringFieldUpdateOperationsInput | string
        ADO_PHONE?: StringFieldUpdateOperationsInput | string
        ADO_EMAIL?: StringFieldUpdateOperationsInput | string
        ADO_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ADO_STATUS?: BoolFieldUpdateOperationsInput | boolean
    }

    export type GA_ANKETA_DOGOVORUncheckedUpdateManyInput = {
        ADO_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ADO_NAME1?: StringFieldUpdateOperationsInput | string
        ADO_NAME2?: StringFieldUpdateOperationsInput | string
        ADO_NAME3?: StringFieldUpdateOperationsInput | string
        ADO_PHONE?: StringFieldUpdateOperationsInput | string
        ADO_EMAIL?: StringFieldUpdateOperationsInput | string
        ADO_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ADO_STATUS?: BoolFieldUpdateOperationsInput | boolean
    }

    export type GA_ANKETA_OBOROTCreateInput = {
        ABO_ABA_ID: bigint | number
        ABO_DATETIME: Date | string
        ABO_OBOROT_ALL: number
        ABO_OBOROT_BRANDS_MONTH: number
        ABO_OBOROT_AE: number
        ABO_OBOROT_ROSSKO: number
        ABO_OBOROT_ARKONA: number
        ABO_OBOROT_AUTORUS: number
        ABO_SCORES_MONTH_PLAN: number
        ABO_SCORES_MONTH_FAKT: number
        ABO_COUNT_ROSSKO: number
        ABO_COUNT_AE: number
        ABO_COUNT_ARKONA: number
        ABO_COUNT_AUTORUS: number
        ABO_OBOROT_BRANDS: number
        ABO_OBOROT_BRAND_LOOK1: number
        ABO_SCORES: number
        ABO_OBOROT_BRAND_LOOK2?: number | null
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: number | null
        ABO_OBOROT_BRAND_LOOK2_AE?: number | null
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: number | null
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: number | null
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: number | null
        ABO_OBOROT_BRANDS_MONTH_AE?: number | null
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: number | null
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: number | null
        ABO_OBOROT_BRAND1?: number | null
        ABO_OBOROT_BRAND2?: number | null
        ABO_OBOROT_BRAND3?: number | null
        ABO_OBOROT_BRAND4?: number | null
        ABO_OBOROT_BRAND5?: number | null
        ABO_OBOROT_BRAND6?: number | null
        ABO_OBOROT_NEXT?: number | null
        ABO_SCORES_MONTH_PLAN_NEXT?: number
        ABO_ABA_REMZONA_QTY?: number | null
    }

    export type GA_ANKETA_OBOROTUncheckedCreateInput = {
        ABO_ABA_ID: bigint | number
        ABO_DATETIME: Date | string
        ABO_OBOROT_ALL: number
        ABO_OBOROT_BRANDS_MONTH: number
        ABO_OBOROT_AE: number
        ABO_OBOROT_ROSSKO: number
        ABO_OBOROT_ARKONA: number
        ABO_OBOROT_AUTORUS: number
        ABO_SCORES_MONTH_PLAN: number
        ABO_SCORES_MONTH_FAKT: number
        ABO_COUNT_ROSSKO: number
        ABO_COUNT_AE: number
        ABO_COUNT_ARKONA: number
        ABO_COUNT_AUTORUS: number
        ABO_OBOROT_BRANDS: number
        ABO_OBOROT_BRAND_LOOK1: number
        ABO_SCORES: number
        ABO_OBOROT_BRAND_LOOK2?: number | null
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: number | null
        ABO_OBOROT_BRAND_LOOK2_AE?: number | null
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: number | null
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: number | null
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: number | null
        ABO_OBOROT_BRANDS_MONTH_AE?: number | null
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: number | null
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: number | null
        ABO_OBOROT_BRAND1?: number | null
        ABO_OBOROT_BRAND2?: number | null
        ABO_OBOROT_BRAND3?: number | null
        ABO_OBOROT_BRAND4?: number | null
        ABO_OBOROT_BRAND5?: number | null
        ABO_OBOROT_BRAND6?: number | null
        ABO_OBOROT_NEXT?: number | null
        ABO_SCORES_MONTH_PLAN_NEXT?: number
        ABO_ABA_REMZONA_QTY?: number | null
    }

    export type GA_ANKETA_OBOROTUpdateInput = {
        ABO_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABO_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ABO_OBOROT_ALL?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_BRANDS_MONTH?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_AE?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_ROSSKO?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_ARKONA?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_AUTORUS?: FloatFieldUpdateOperationsInput | number
        ABO_SCORES_MONTH_PLAN?: FloatFieldUpdateOperationsInput | number
        ABO_SCORES_MONTH_FAKT?: FloatFieldUpdateOperationsInput | number
        ABO_COUNT_ROSSKO?: IntFieldUpdateOperationsInput | number
        ABO_COUNT_AE?: IntFieldUpdateOperationsInput | number
        ABO_COUNT_ARKONA?: IntFieldUpdateOperationsInput | number
        ABO_COUNT_AUTORUS?: IntFieldUpdateOperationsInput | number
        ABO_OBOROT_BRANDS?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_BRAND_LOOK1?: FloatFieldUpdateOperationsInput | number
        ABO_SCORES?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_BRAND_LOOK2?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_AE?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_ARKONA?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_AE?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_ARKONA?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND1?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND2?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND3?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND4?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND5?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND6?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_NEXT?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_SCORES_MONTH_PLAN_NEXT?: FloatFieldUpdateOperationsInput | number
        ABO_ABA_REMZONA_QTY?:
            | NullableIntFieldUpdateOperationsInput
            | number
            | null
    }

    export type GA_ANKETA_OBOROTUncheckedUpdateInput = {
        ABO_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABO_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ABO_OBOROT_ALL?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_BRANDS_MONTH?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_AE?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_ROSSKO?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_ARKONA?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_AUTORUS?: FloatFieldUpdateOperationsInput | number
        ABO_SCORES_MONTH_PLAN?: FloatFieldUpdateOperationsInput | number
        ABO_SCORES_MONTH_FAKT?: FloatFieldUpdateOperationsInput | number
        ABO_COUNT_ROSSKO?: IntFieldUpdateOperationsInput | number
        ABO_COUNT_AE?: IntFieldUpdateOperationsInput | number
        ABO_COUNT_ARKONA?: IntFieldUpdateOperationsInput | number
        ABO_COUNT_AUTORUS?: IntFieldUpdateOperationsInput | number
        ABO_OBOROT_BRANDS?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_BRAND_LOOK1?: FloatFieldUpdateOperationsInput | number
        ABO_SCORES?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_BRAND_LOOK2?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_AE?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_ARKONA?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_AE?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_ARKONA?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND1?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND2?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND3?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND4?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND5?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND6?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_NEXT?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_SCORES_MONTH_PLAN_NEXT?: FloatFieldUpdateOperationsInput | number
        ABO_ABA_REMZONA_QTY?:
            | NullableIntFieldUpdateOperationsInput
            | number
            | null
    }

    export type GA_ANKETA_OBOROTCreateManyInput = {
        ABO_ABA_ID: bigint | number
        ABO_DATETIME: Date | string
        ABO_OBOROT_ALL: number
        ABO_OBOROT_BRANDS_MONTH: number
        ABO_OBOROT_AE: number
        ABO_OBOROT_ROSSKO: number
        ABO_OBOROT_ARKONA: number
        ABO_OBOROT_AUTORUS: number
        ABO_SCORES_MONTH_PLAN: number
        ABO_SCORES_MONTH_FAKT: number
        ABO_COUNT_ROSSKO: number
        ABO_COUNT_AE: number
        ABO_COUNT_ARKONA: number
        ABO_COUNT_AUTORUS: number
        ABO_OBOROT_BRANDS: number
        ABO_OBOROT_BRAND_LOOK1: number
        ABO_SCORES: number
        ABO_OBOROT_BRAND_LOOK2?: number | null
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: number | null
        ABO_OBOROT_BRAND_LOOK2_AE?: number | null
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: number | null
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: number | null
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: number | null
        ABO_OBOROT_BRANDS_MONTH_AE?: number | null
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: number | null
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: number | null
        ABO_OBOROT_BRAND1?: number | null
        ABO_OBOROT_BRAND2?: number | null
        ABO_OBOROT_BRAND3?: number | null
        ABO_OBOROT_BRAND4?: number | null
        ABO_OBOROT_BRAND5?: number | null
        ABO_OBOROT_BRAND6?: number | null
        ABO_OBOROT_NEXT?: number | null
        ABO_SCORES_MONTH_PLAN_NEXT?: number
        ABO_ABA_REMZONA_QTY?: number | null
    }

    export type GA_ANKETA_OBOROTUpdateManyMutationInput = {
        ABO_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABO_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ABO_OBOROT_ALL?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_BRANDS_MONTH?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_AE?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_ROSSKO?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_ARKONA?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_AUTORUS?: FloatFieldUpdateOperationsInput | number
        ABO_SCORES_MONTH_PLAN?: FloatFieldUpdateOperationsInput | number
        ABO_SCORES_MONTH_FAKT?: FloatFieldUpdateOperationsInput | number
        ABO_COUNT_ROSSKO?: IntFieldUpdateOperationsInput | number
        ABO_COUNT_AE?: IntFieldUpdateOperationsInput | number
        ABO_COUNT_ARKONA?: IntFieldUpdateOperationsInput | number
        ABO_COUNT_AUTORUS?: IntFieldUpdateOperationsInput | number
        ABO_OBOROT_BRANDS?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_BRAND_LOOK1?: FloatFieldUpdateOperationsInput | number
        ABO_SCORES?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_BRAND_LOOK2?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_AE?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_ARKONA?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_AE?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_ARKONA?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND1?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND2?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND3?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND4?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND5?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND6?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_NEXT?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_SCORES_MONTH_PLAN_NEXT?: FloatFieldUpdateOperationsInput | number
        ABO_ABA_REMZONA_QTY?:
            | NullableIntFieldUpdateOperationsInput
            | number
            | null
    }

    export type GA_ANKETA_OBOROTUncheckedUpdateManyInput = {
        ABO_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ABO_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ABO_OBOROT_ALL?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_BRANDS_MONTH?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_AE?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_ROSSKO?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_ARKONA?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_AUTORUS?: FloatFieldUpdateOperationsInput | number
        ABO_SCORES_MONTH_PLAN?: FloatFieldUpdateOperationsInput | number
        ABO_SCORES_MONTH_FAKT?: FloatFieldUpdateOperationsInput | number
        ABO_COUNT_ROSSKO?: IntFieldUpdateOperationsInput | number
        ABO_COUNT_AE?: IntFieldUpdateOperationsInput | number
        ABO_COUNT_ARKONA?: IntFieldUpdateOperationsInput | number
        ABO_COUNT_AUTORUS?: IntFieldUpdateOperationsInput | number
        ABO_OBOROT_BRANDS?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_BRAND_LOOK1?: FloatFieldUpdateOperationsInput | number
        ABO_SCORES?: FloatFieldUpdateOperationsInput | number
        ABO_OBOROT_BRAND_LOOK2?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_AE?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_ARKONA?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_AE?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_ARKONA?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND1?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND2?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND3?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND4?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND5?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_BRAND6?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_OBOROT_NEXT?:
            | NullableFloatFieldUpdateOperationsInput
            | number
            | null
        ABO_SCORES_MONTH_PLAN_NEXT?: FloatFieldUpdateOperationsInput | number
        ABO_ABA_REMZONA_QTY?:
            | NullableIntFieldUpdateOperationsInput
            | number
            | null
    }

    export type GA_ANKETA_OBOROT_BRANDSCreateInput = {
        AOB_ABA_ID: bigint | number
        AOB_DATETIME: Date | string
        AOB_ALL_24189?: number
        AOB_50011_24189?: number
        AOB_50012_24189?: number
        AOB_50013_24189?: number
        AOB_50014_24189?: number
        AOB_ALL_10566?: number
        AOB_50011_10566?: number
        AOB_50012_10566?: number
        AOB_50013_10566?: number
        AOB_50014_10566?: number
        AOB_ALL_20079?: number
        AOB_50011_20079?: number
        AOB_50012_20079?: number
        AOB_50013_20079?: number
        AOB_50014_20079?: number
        AOB_ALL_7251?: number
        AOB_50011_7251?: number
        AOB_50012_7251?: number
        AOB_50013_7251?: number
        AOB_50014_7251?: number
        AOB_ALL_24191?: number
        AOB_50011_24191?: number
        AOB_50012_24191?: number
        AOB_50013_24191?: number
        AOB_50014_24191?: number
        AOB_ALL_193?: number
        AOB_50011_193?: number
        AOB_50012_193?: number
        AOB_50013_193?: number
        AOB_50014_193?: number
        AOB_ALL_7610?: number
        AOB_50011_7610?: number
        AOB_50012_7610?: number
        AOB_50013_7610?: number
        AOB_50014_7610?: number
        AOB_ALL_10180?: number
        AOB_50011_10180?: number
        AOB_50012_10180?: number
        AOB_50013_10180?: number
        AOB_50014_10180?: number
        AOB_ALL_177?: number
        AOB_50011_177?: number
        AOB_50012_177?: number
        AOB_50013_177?: number
        AOB_50014_177?: number
        AOB_ALL_10223?: number
        AOB_50011_10223?: number
        AOB_50012_10223?: number
        AOB_50013_10223?: number
        AOB_50014_10223?: number
        AOB_ALL_7230?: number
        AOB_50011_7230?: number
        AOB_50012_7230?: number
        AOB_50013_7230?: number
        AOB_50014_7230?: number
        AOB_ALL_1359?: number
        AOB_50011_1359?: number
        AOB_50012_1359?: number
        AOB_50013_1359?: number
        AOB_50014_1359?: number
        AOB_ALL_110?: number
        AOB_50011_110?: number
        AOB_50012_110?: number
        AOB_50013_110?: number
        AOB_50014_110?: number
        AOB_ALL_20182?: number
        AOB_50011_20182?: number
        AOB_50012_20182?: number
        AOB_50013_20182?: number
        AOB_50014_20182?: number
        AOB_ALL_20203?: number
        AOB_50011_20203?: number
        AOB_50012_20203?: number
        AOB_50013_20203?: number
        AOB_50014_20203?: number
        AOB_ALL_24155?: number
        AOB_50011_24155?: number
        AOB_50012_24155?: number
        AOB_50013_24155?: number
        AOB_50014_24155?: number
        AOB_ALL_24198?: number
        AOB_50011_24198?: number
        AOB_50012_24198?: number
        AOB_50013_24198?: number
        AOB_50014_24198?: number
        AOB_ALL_135?: number
        AOB_50011_135?: number
        AOB_50012_135?: number
        AOB_50013_135?: number
        AOB_50014_135?: number
        AOB_ALL_24196?: number
        AOB_50011_24196?: number
        AOB_50012_24196?: number
        AOB_50013_24196?: number
        AOB_50014_24196?: number
        AOB_ALL_24197?: number
        AOB_50011_24197?: number
        AOB_50012_24197?: number
        AOB_50013_24197?: number
        AOB_50014_24197?: number
        AOB_ALL_21?: number
        AOB_50011_21?: number
        AOB_50012_21?: number
        AOB_50013_21?: number
        AOB_50014_21?: number
    }

    export type GA_ANKETA_OBOROT_BRANDSUncheckedCreateInput = {
        AOB_ABA_ID: bigint | number
        AOB_DATETIME: Date | string
        AOB_ALL_24189?: number
        AOB_50011_24189?: number
        AOB_50012_24189?: number
        AOB_50013_24189?: number
        AOB_50014_24189?: number
        AOB_ALL_10566?: number
        AOB_50011_10566?: number
        AOB_50012_10566?: number
        AOB_50013_10566?: number
        AOB_50014_10566?: number
        AOB_ALL_20079?: number
        AOB_50011_20079?: number
        AOB_50012_20079?: number
        AOB_50013_20079?: number
        AOB_50014_20079?: number
        AOB_ALL_7251?: number
        AOB_50011_7251?: number
        AOB_50012_7251?: number
        AOB_50013_7251?: number
        AOB_50014_7251?: number
        AOB_ALL_24191?: number
        AOB_50011_24191?: number
        AOB_50012_24191?: number
        AOB_50013_24191?: number
        AOB_50014_24191?: number
        AOB_ALL_193?: number
        AOB_50011_193?: number
        AOB_50012_193?: number
        AOB_50013_193?: number
        AOB_50014_193?: number
        AOB_ALL_7610?: number
        AOB_50011_7610?: number
        AOB_50012_7610?: number
        AOB_50013_7610?: number
        AOB_50014_7610?: number
        AOB_ALL_10180?: number
        AOB_50011_10180?: number
        AOB_50012_10180?: number
        AOB_50013_10180?: number
        AOB_50014_10180?: number
        AOB_ALL_177?: number
        AOB_50011_177?: number
        AOB_50012_177?: number
        AOB_50013_177?: number
        AOB_50014_177?: number
        AOB_ALL_10223?: number
        AOB_50011_10223?: number
        AOB_50012_10223?: number
        AOB_50013_10223?: number
        AOB_50014_10223?: number
        AOB_ALL_7230?: number
        AOB_50011_7230?: number
        AOB_50012_7230?: number
        AOB_50013_7230?: number
        AOB_50014_7230?: number
        AOB_ALL_1359?: number
        AOB_50011_1359?: number
        AOB_50012_1359?: number
        AOB_50013_1359?: number
        AOB_50014_1359?: number
        AOB_ALL_110?: number
        AOB_50011_110?: number
        AOB_50012_110?: number
        AOB_50013_110?: number
        AOB_50014_110?: number
        AOB_ALL_20182?: number
        AOB_50011_20182?: number
        AOB_50012_20182?: number
        AOB_50013_20182?: number
        AOB_50014_20182?: number
        AOB_ALL_20203?: number
        AOB_50011_20203?: number
        AOB_50012_20203?: number
        AOB_50013_20203?: number
        AOB_50014_20203?: number
        AOB_ALL_24155?: number
        AOB_50011_24155?: number
        AOB_50012_24155?: number
        AOB_50013_24155?: number
        AOB_50014_24155?: number
        AOB_ALL_24198?: number
        AOB_50011_24198?: number
        AOB_50012_24198?: number
        AOB_50013_24198?: number
        AOB_50014_24198?: number
        AOB_ALL_135?: number
        AOB_50011_135?: number
        AOB_50012_135?: number
        AOB_50013_135?: number
        AOB_50014_135?: number
        AOB_ALL_24196?: number
        AOB_50011_24196?: number
        AOB_50012_24196?: number
        AOB_50013_24196?: number
        AOB_50014_24196?: number
        AOB_ALL_24197?: number
        AOB_50011_24197?: number
        AOB_50012_24197?: number
        AOB_50013_24197?: number
        AOB_50014_24197?: number
        AOB_ALL_21?: number
        AOB_50011_21?: number
        AOB_50012_21?: number
        AOB_50013_21?: number
        AOB_50014_21?: number
    }

    export type GA_ANKETA_OBOROT_BRANDSUpdateInput = {
        AOB_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AOB_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        AOB_ALL_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24189?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50011_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50012_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50013_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50014_10566?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50011_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50012_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50013_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50014_20079?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7251?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24191?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_193?: FloatFieldUpdateOperationsInput | number
        AOB_50011_193?: FloatFieldUpdateOperationsInput | number
        AOB_50012_193?: FloatFieldUpdateOperationsInput | number
        AOB_50013_193?: FloatFieldUpdateOperationsInput | number
        AOB_50014_193?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7610?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50011_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50012_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50013_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50014_10180?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_177?: FloatFieldUpdateOperationsInput | number
        AOB_50011_177?: FloatFieldUpdateOperationsInput | number
        AOB_50012_177?: FloatFieldUpdateOperationsInput | number
        AOB_50013_177?: FloatFieldUpdateOperationsInput | number
        AOB_50014_177?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50011_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50012_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50013_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50014_10223?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7230?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50011_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50012_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50013_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50014_1359?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_110?: FloatFieldUpdateOperationsInput | number
        AOB_50011_110?: FloatFieldUpdateOperationsInput | number
        AOB_50012_110?: FloatFieldUpdateOperationsInput | number
        AOB_50013_110?: FloatFieldUpdateOperationsInput | number
        AOB_50014_110?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50011_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50012_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50013_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50014_20182?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50011_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50012_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50013_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50014_20203?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24155?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24198?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_135?: FloatFieldUpdateOperationsInput | number
        AOB_50011_135?: FloatFieldUpdateOperationsInput | number
        AOB_50012_135?: FloatFieldUpdateOperationsInput | number
        AOB_50013_135?: FloatFieldUpdateOperationsInput | number
        AOB_50014_135?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24196?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24197?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_21?: FloatFieldUpdateOperationsInput | number
        AOB_50011_21?: FloatFieldUpdateOperationsInput | number
        AOB_50012_21?: FloatFieldUpdateOperationsInput | number
        AOB_50013_21?: FloatFieldUpdateOperationsInput | number
        AOB_50014_21?: FloatFieldUpdateOperationsInput | number
    }

    export type GA_ANKETA_OBOROT_BRANDSUncheckedUpdateInput = {
        AOB_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AOB_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        AOB_ALL_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24189?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50011_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50012_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50013_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50014_10566?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50011_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50012_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50013_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50014_20079?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7251?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24191?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_193?: FloatFieldUpdateOperationsInput | number
        AOB_50011_193?: FloatFieldUpdateOperationsInput | number
        AOB_50012_193?: FloatFieldUpdateOperationsInput | number
        AOB_50013_193?: FloatFieldUpdateOperationsInput | number
        AOB_50014_193?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7610?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50011_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50012_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50013_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50014_10180?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_177?: FloatFieldUpdateOperationsInput | number
        AOB_50011_177?: FloatFieldUpdateOperationsInput | number
        AOB_50012_177?: FloatFieldUpdateOperationsInput | number
        AOB_50013_177?: FloatFieldUpdateOperationsInput | number
        AOB_50014_177?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50011_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50012_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50013_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50014_10223?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7230?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50011_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50012_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50013_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50014_1359?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_110?: FloatFieldUpdateOperationsInput | number
        AOB_50011_110?: FloatFieldUpdateOperationsInput | number
        AOB_50012_110?: FloatFieldUpdateOperationsInput | number
        AOB_50013_110?: FloatFieldUpdateOperationsInput | number
        AOB_50014_110?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50011_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50012_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50013_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50014_20182?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50011_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50012_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50013_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50014_20203?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24155?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24198?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_135?: FloatFieldUpdateOperationsInput | number
        AOB_50011_135?: FloatFieldUpdateOperationsInput | number
        AOB_50012_135?: FloatFieldUpdateOperationsInput | number
        AOB_50013_135?: FloatFieldUpdateOperationsInput | number
        AOB_50014_135?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24196?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24197?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_21?: FloatFieldUpdateOperationsInput | number
        AOB_50011_21?: FloatFieldUpdateOperationsInput | number
        AOB_50012_21?: FloatFieldUpdateOperationsInput | number
        AOB_50013_21?: FloatFieldUpdateOperationsInput | number
        AOB_50014_21?: FloatFieldUpdateOperationsInput | number
    }

    export type GA_ANKETA_OBOROT_BRANDSCreateManyInput = {
        AOB_ABA_ID: bigint | number
        AOB_DATETIME: Date | string
        AOB_ALL_24189?: number
        AOB_50011_24189?: number
        AOB_50012_24189?: number
        AOB_50013_24189?: number
        AOB_50014_24189?: number
        AOB_ALL_10566?: number
        AOB_50011_10566?: number
        AOB_50012_10566?: number
        AOB_50013_10566?: number
        AOB_50014_10566?: number
        AOB_ALL_20079?: number
        AOB_50011_20079?: number
        AOB_50012_20079?: number
        AOB_50013_20079?: number
        AOB_50014_20079?: number
        AOB_ALL_7251?: number
        AOB_50011_7251?: number
        AOB_50012_7251?: number
        AOB_50013_7251?: number
        AOB_50014_7251?: number
        AOB_ALL_24191?: number
        AOB_50011_24191?: number
        AOB_50012_24191?: number
        AOB_50013_24191?: number
        AOB_50014_24191?: number
        AOB_ALL_193?: number
        AOB_50011_193?: number
        AOB_50012_193?: number
        AOB_50013_193?: number
        AOB_50014_193?: number
        AOB_ALL_7610?: number
        AOB_50011_7610?: number
        AOB_50012_7610?: number
        AOB_50013_7610?: number
        AOB_50014_7610?: number
        AOB_ALL_10180?: number
        AOB_50011_10180?: number
        AOB_50012_10180?: number
        AOB_50013_10180?: number
        AOB_50014_10180?: number
        AOB_ALL_177?: number
        AOB_50011_177?: number
        AOB_50012_177?: number
        AOB_50013_177?: number
        AOB_50014_177?: number
        AOB_ALL_10223?: number
        AOB_50011_10223?: number
        AOB_50012_10223?: number
        AOB_50013_10223?: number
        AOB_50014_10223?: number
        AOB_ALL_7230?: number
        AOB_50011_7230?: number
        AOB_50012_7230?: number
        AOB_50013_7230?: number
        AOB_50014_7230?: number
        AOB_ALL_1359?: number
        AOB_50011_1359?: number
        AOB_50012_1359?: number
        AOB_50013_1359?: number
        AOB_50014_1359?: number
        AOB_ALL_110?: number
        AOB_50011_110?: number
        AOB_50012_110?: number
        AOB_50013_110?: number
        AOB_50014_110?: number
        AOB_ALL_20182?: number
        AOB_50011_20182?: number
        AOB_50012_20182?: number
        AOB_50013_20182?: number
        AOB_50014_20182?: number
        AOB_ALL_20203?: number
        AOB_50011_20203?: number
        AOB_50012_20203?: number
        AOB_50013_20203?: number
        AOB_50014_20203?: number
        AOB_ALL_24155?: number
        AOB_50011_24155?: number
        AOB_50012_24155?: number
        AOB_50013_24155?: number
        AOB_50014_24155?: number
        AOB_ALL_24198?: number
        AOB_50011_24198?: number
        AOB_50012_24198?: number
        AOB_50013_24198?: number
        AOB_50014_24198?: number
        AOB_ALL_135?: number
        AOB_50011_135?: number
        AOB_50012_135?: number
        AOB_50013_135?: number
        AOB_50014_135?: number
        AOB_ALL_24196?: number
        AOB_50011_24196?: number
        AOB_50012_24196?: number
        AOB_50013_24196?: number
        AOB_50014_24196?: number
        AOB_ALL_24197?: number
        AOB_50011_24197?: number
        AOB_50012_24197?: number
        AOB_50013_24197?: number
        AOB_50014_24197?: number
        AOB_ALL_21?: number
        AOB_50011_21?: number
        AOB_50012_21?: number
        AOB_50013_21?: number
        AOB_50014_21?: number
    }

    export type GA_ANKETA_OBOROT_BRANDSUpdateManyMutationInput = {
        AOB_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AOB_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        AOB_ALL_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24189?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50011_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50012_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50013_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50014_10566?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50011_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50012_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50013_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50014_20079?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7251?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24191?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_193?: FloatFieldUpdateOperationsInput | number
        AOB_50011_193?: FloatFieldUpdateOperationsInput | number
        AOB_50012_193?: FloatFieldUpdateOperationsInput | number
        AOB_50013_193?: FloatFieldUpdateOperationsInput | number
        AOB_50014_193?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7610?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50011_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50012_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50013_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50014_10180?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_177?: FloatFieldUpdateOperationsInput | number
        AOB_50011_177?: FloatFieldUpdateOperationsInput | number
        AOB_50012_177?: FloatFieldUpdateOperationsInput | number
        AOB_50013_177?: FloatFieldUpdateOperationsInput | number
        AOB_50014_177?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50011_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50012_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50013_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50014_10223?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7230?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50011_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50012_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50013_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50014_1359?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_110?: FloatFieldUpdateOperationsInput | number
        AOB_50011_110?: FloatFieldUpdateOperationsInput | number
        AOB_50012_110?: FloatFieldUpdateOperationsInput | number
        AOB_50013_110?: FloatFieldUpdateOperationsInput | number
        AOB_50014_110?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50011_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50012_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50013_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50014_20182?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50011_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50012_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50013_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50014_20203?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24155?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24198?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_135?: FloatFieldUpdateOperationsInput | number
        AOB_50011_135?: FloatFieldUpdateOperationsInput | number
        AOB_50012_135?: FloatFieldUpdateOperationsInput | number
        AOB_50013_135?: FloatFieldUpdateOperationsInput | number
        AOB_50014_135?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24196?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24197?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_21?: FloatFieldUpdateOperationsInput | number
        AOB_50011_21?: FloatFieldUpdateOperationsInput | number
        AOB_50012_21?: FloatFieldUpdateOperationsInput | number
        AOB_50013_21?: FloatFieldUpdateOperationsInput | number
        AOB_50014_21?: FloatFieldUpdateOperationsInput | number
    }

    export type GA_ANKETA_OBOROT_BRANDSUncheckedUpdateManyInput = {
        AOB_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AOB_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        AOB_ALL_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24189?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24189?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50011_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50012_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50013_10566?: FloatFieldUpdateOperationsInput | number
        AOB_50014_10566?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50011_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50012_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50013_20079?: FloatFieldUpdateOperationsInput | number
        AOB_50014_20079?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7251?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7251?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24191?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24191?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_193?: FloatFieldUpdateOperationsInput | number
        AOB_50011_193?: FloatFieldUpdateOperationsInput | number
        AOB_50012_193?: FloatFieldUpdateOperationsInput | number
        AOB_50013_193?: FloatFieldUpdateOperationsInput | number
        AOB_50014_193?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7610?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7610?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50011_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50012_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50013_10180?: FloatFieldUpdateOperationsInput | number
        AOB_50014_10180?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_177?: FloatFieldUpdateOperationsInput | number
        AOB_50011_177?: FloatFieldUpdateOperationsInput | number
        AOB_50012_177?: FloatFieldUpdateOperationsInput | number
        AOB_50013_177?: FloatFieldUpdateOperationsInput | number
        AOB_50014_177?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50011_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50012_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50013_10223?: FloatFieldUpdateOperationsInput | number
        AOB_50014_10223?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7230?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7230?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50011_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50012_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50013_1359?: FloatFieldUpdateOperationsInput | number
        AOB_50014_1359?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_110?: FloatFieldUpdateOperationsInput | number
        AOB_50011_110?: FloatFieldUpdateOperationsInput | number
        AOB_50012_110?: FloatFieldUpdateOperationsInput | number
        AOB_50013_110?: FloatFieldUpdateOperationsInput | number
        AOB_50014_110?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50011_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50012_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50013_20182?: FloatFieldUpdateOperationsInput | number
        AOB_50014_20182?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50011_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50012_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50013_20203?: FloatFieldUpdateOperationsInput | number
        AOB_50014_20203?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24155?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24155?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24198?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24198?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_135?: FloatFieldUpdateOperationsInput | number
        AOB_50011_135?: FloatFieldUpdateOperationsInput | number
        AOB_50012_135?: FloatFieldUpdateOperationsInput | number
        AOB_50013_135?: FloatFieldUpdateOperationsInput | number
        AOB_50014_135?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24196?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24196?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24197?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24197?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_21?: FloatFieldUpdateOperationsInput | number
        AOB_50011_21?: FloatFieldUpdateOperationsInput | number
        AOB_50012_21?: FloatFieldUpdateOperationsInput | number
        AOB_50013_21?: FloatFieldUpdateOperationsInput | number
        AOB_50014_21?: FloatFieldUpdateOperationsInput | number
    }

    export type GA_ANKETA_OBOROT_BRANDS2CreateInput = {
        AOB_ABA_ID: bigint | number
        AOB_DATETIME: Date | string
        AOB_ALL_7438?: number
        AOB_50011_7438?: number
        AOB_50012_7438?: number
        AOB_50013_7438?: number
        AOB_50014_7438?: number
        AOB_ALL_7801?: number
        AOB_50011_7801?: number
        AOB_50012_7801?: number
        AOB_50013_7801?: number
        AOB_50014_7801?: number
        AOB_ALL_7763?: number
        AOB_50011_7763?: number
        AOB_50012_7763?: number
        AOB_50013_7763?: number
        AOB_50014_7763?: number
        AOB_ALL_265?: number
        AOB_50011_265?: number
        AOB_50012_265?: number
        AOB_50013_265?: number
        AOB_50014_265?: number
        AOB_ALL_24158?: number
        AOB_50011_24158?: number
        AOB_50012_24158?: number
        AOB_50013_24158?: number
        AOB_50014_24158?: number
        AOB_ALL_7219?: number
        AOB_50011_7219?: number
        AOB_50012_7219?: number
        AOB_50013_7219?: number
        AOB_50014_7219?: number
    }

    export type GA_ANKETA_OBOROT_BRANDS2UncheckedCreateInput = {
        AOB_ABA_ID: bigint | number
        AOB_DATETIME: Date | string
        AOB_ALL_7438?: number
        AOB_50011_7438?: number
        AOB_50012_7438?: number
        AOB_50013_7438?: number
        AOB_50014_7438?: number
        AOB_ALL_7801?: number
        AOB_50011_7801?: number
        AOB_50012_7801?: number
        AOB_50013_7801?: number
        AOB_50014_7801?: number
        AOB_ALL_7763?: number
        AOB_50011_7763?: number
        AOB_50012_7763?: number
        AOB_50013_7763?: number
        AOB_50014_7763?: number
        AOB_ALL_265?: number
        AOB_50011_265?: number
        AOB_50012_265?: number
        AOB_50013_265?: number
        AOB_50014_265?: number
        AOB_ALL_24158?: number
        AOB_50011_24158?: number
        AOB_50012_24158?: number
        AOB_50013_24158?: number
        AOB_50014_24158?: number
        AOB_ALL_7219?: number
        AOB_50011_7219?: number
        AOB_50012_7219?: number
        AOB_50013_7219?: number
        AOB_50014_7219?: number
    }

    export type GA_ANKETA_OBOROT_BRANDS2UpdateInput = {
        AOB_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AOB_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        AOB_ALL_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7438?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7801?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7763?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_265?: FloatFieldUpdateOperationsInput | number
        AOB_50011_265?: FloatFieldUpdateOperationsInput | number
        AOB_50012_265?: FloatFieldUpdateOperationsInput | number
        AOB_50013_265?: FloatFieldUpdateOperationsInput | number
        AOB_50014_265?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24158?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7219?: FloatFieldUpdateOperationsInput | number
    }

    export type GA_ANKETA_OBOROT_BRANDS2UncheckedUpdateInput = {
        AOB_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AOB_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        AOB_ALL_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7438?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7801?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7763?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_265?: FloatFieldUpdateOperationsInput | number
        AOB_50011_265?: FloatFieldUpdateOperationsInput | number
        AOB_50012_265?: FloatFieldUpdateOperationsInput | number
        AOB_50013_265?: FloatFieldUpdateOperationsInput | number
        AOB_50014_265?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24158?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7219?: FloatFieldUpdateOperationsInput | number
    }

    export type GA_ANKETA_OBOROT_BRANDS2CreateManyInput = {
        AOB_ABA_ID: bigint | number
        AOB_DATETIME: Date | string
        AOB_ALL_7438?: number
        AOB_50011_7438?: number
        AOB_50012_7438?: number
        AOB_50013_7438?: number
        AOB_50014_7438?: number
        AOB_ALL_7801?: number
        AOB_50011_7801?: number
        AOB_50012_7801?: number
        AOB_50013_7801?: number
        AOB_50014_7801?: number
        AOB_ALL_7763?: number
        AOB_50011_7763?: number
        AOB_50012_7763?: number
        AOB_50013_7763?: number
        AOB_50014_7763?: number
        AOB_ALL_265?: number
        AOB_50011_265?: number
        AOB_50012_265?: number
        AOB_50013_265?: number
        AOB_50014_265?: number
        AOB_ALL_24158?: number
        AOB_50011_24158?: number
        AOB_50012_24158?: number
        AOB_50013_24158?: number
        AOB_50014_24158?: number
        AOB_ALL_7219?: number
        AOB_50011_7219?: number
        AOB_50012_7219?: number
        AOB_50013_7219?: number
        AOB_50014_7219?: number
    }

    export type GA_ANKETA_OBOROT_BRANDS2UpdateManyMutationInput = {
        AOB_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AOB_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        AOB_ALL_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7438?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7801?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7763?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_265?: FloatFieldUpdateOperationsInput | number
        AOB_50011_265?: FloatFieldUpdateOperationsInput | number
        AOB_50012_265?: FloatFieldUpdateOperationsInput | number
        AOB_50013_265?: FloatFieldUpdateOperationsInput | number
        AOB_50014_265?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24158?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7219?: FloatFieldUpdateOperationsInput | number
    }

    export type GA_ANKETA_OBOROT_BRANDS2UncheckedUpdateManyInput = {
        AOB_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AOB_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        AOB_ALL_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7438?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7438?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7801?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7801?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7763?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7763?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_265?: FloatFieldUpdateOperationsInput | number
        AOB_50011_265?: FloatFieldUpdateOperationsInput | number
        AOB_50012_265?: FloatFieldUpdateOperationsInput | number
        AOB_50013_265?: FloatFieldUpdateOperationsInput | number
        AOB_50014_265?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50011_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50012_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50013_24158?: FloatFieldUpdateOperationsInput | number
        AOB_50014_24158?: FloatFieldUpdateOperationsInput | number
        AOB_ALL_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50011_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50012_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50013_7219?: FloatFieldUpdateOperationsInput | number
        AOB_50014_7219?: FloatFieldUpdateOperationsInput | number
    }

    export type GA_ANKETA_OBOROT_COUNTSCreateInput = {
        AOC_ABA_ID: bigint | number
        AOC_DATETIME: Date | string
        AOC_ALL_24189?: number
        AOC_50011_24189?: number
        AOC_50012_24189?: number
        AOC_50013_24189?: number
        AOC_50014_24189?: number
        AOC_ALL_10566?: number
        AOC_50011_10566?: number
        AOC_50012_10566?: number
        AOC_50013_10566?: number
        AOC_50014_10566?: number
        AOC_ALL_20079?: number
        AOC_50011_20079?: number
        AOC_50012_20079?: number
        AOC_50013_20079?: number
        AOC_50014_20079?: number
        AOC_ALL_7251?: number
        AOC_50011_7251?: number
        AOC_50012_7251?: number
        AOC_50013_7251?: number
        AOC_50014_7251?: number
        AOC_ALL_24191?: number
        AOC_50011_24191?: number
        AOC_50012_24191?: number
        AOC_50013_24191?: number
        AOC_50014_24191?: number
        AOC_ALL_193?: number
        AOC_50011_193?: number
        AOC_50012_193?: number
        AOC_50013_193?: number
        AOC_50014_193?: number
        AOC_ALL_7610?: number
        AOC_50011_7610?: number
        AOC_50012_7610?: number
        AOC_50013_7610?: number
        AOC_50014_7610?: number
        AOC_ALL_10180?: number
        AOC_50011_10180?: number
        AOC_50012_10180?: number
        AOC_50013_10180?: number
        AOC_50014_10180?: number
        AOC_ALL_177?: number
        AOC_50011_177?: number
        AOC_50012_177?: number
        AOC_50013_177?: number
        AOC_50014_177?: number
        AOC_ALL_10223?: number
        AOC_50011_10223?: number
        AOC_50012_10223?: number
        AOC_50013_10223?: number
        AOC_50014_10223?: number
        AOC_ALL_7230?: number
        AOC_50011_7230?: number
        AOC_50012_7230?: number
        AOC_50013_7230?: number
        AOC_50014_7230?: number
        AOC_ALL_1359?: number
        AOC_50011_1359?: number
        AOC_50012_1359?: number
        AOC_50013_1359?: number
        AOC_50014_1359?: number
        AOC_ALL_110?: number
        AOC_50011_110?: number
        AOC_50012_110?: number
        AOC_50013_110?: number
        AOC_50014_110?: number
        AOC_ALL_20182?: number
        AOC_50011_20182?: number
        AOC_50012_20182?: number
        AOC_50013_20182?: number
        AOC_50014_20182?: number
        AOC_ALL_20203?: number
        AOC_50011_20203?: number
        AOC_50012_20203?: number
        AOC_50013_20203?: number
        AOC_50014_20203?: number
        AOC_ALL_24155?: number
        AOC_50011_24155?: number
        AOC_50012_24155?: number
        AOC_50013_24155?: number
        AOC_50014_24155?: number
        AOC_ALL_24198?: number
        AOC_50011_24198?: number
        AOC_50012_24198?: number
        AOC_50013_24198?: number
        AOC_50014_24198?: number
        AOC_ALL_135?: number
        AOC_50011_135?: number
        AOC_50012_135?: number
        AOC_50013_135?: number
        AOC_50014_135?: number
        AOC_ALL_24196?: number
        AOC_50011_24196?: number
        AOC_50012_24196?: number
        AOC_50013_24196?: number
        AOC_50014_24196?: number
        AOC_ALL_24197?: number
        AOC_50011_24197?: number
        AOC_50012_24197?: number
        AOC_50013_24197?: number
        AOC_50014_24197?: number
        AOC_ALL_21?: number
        AOC_50011_21?: number
        AOC_50012_21?: number
        AOC_50013_21?: number
        AOC_50014_21?: number
    }

    export type GA_ANKETA_OBOROT_COUNTSUncheckedCreateInput = {
        AOC_ABA_ID: bigint | number
        AOC_DATETIME: Date | string
        AOC_ALL_24189?: number
        AOC_50011_24189?: number
        AOC_50012_24189?: number
        AOC_50013_24189?: number
        AOC_50014_24189?: number
        AOC_ALL_10566?: number
        AOC_50011_10566?: number
        AOC_50012_10566?: number
        AOC_50013_10566?: number
        AOC_50014_10566?: number
        AOC_ALL_20079?: number
        AOC_50011_20079?: number
        AOC_50012_20079?: number
        AOC_50013_20079?: number
        AOC_50014_20079?: number
        AOC_ALL_7251?: number
        AOC_50011_7251?: number
        AOC_50012_7251?: number
        AOC_50013_7251?: number
        AOC_50014_7251?: number
        AOC_ALL_24191?: number
        AOC_50011_24191?: number
        AOC_50012_24191?: number
        AOC_50013_24191?: number
        AOC_50014_24191?: number
        AOC_ALL_193?: number
        AOC_50011_193?: number
        AOC_50012_193?: number
        AOC_50013_193?: number
        AOC_50014_193?: number
        AOC_ALL_7610?: number
        AOC_50011_7610?: number
        AOC_50012_7610?: number
        AOC_50013_7610?: number
        AOC_50014_7610?: number
        AOC_ALL_10180?: number
        AOC_50011_10180?: number
        AOC_50012_10180?: number
        AOC_50013_10180?: number
        AOC_50014_10180?: number
        AOC_ALL_177?: number
        AOC_50011_177?: number
        AOC_50012_177?: number
        AOC_50013_177?: number
        AOC_50014_177?: number
        AOC_ALL_10223?: number
        AOC_50011_10223?: number
        AOC_50012_10223?: number
        AOC_50013_10223?: number
        AOC_50014_10223?: number
        AOC_ALL_7230?: number
        AOC_50011_7230?: number
        AOC_50012_7230?: number
        AOC_50013_7230?: number
        AOC_50014_7230?: number
        AOC_ALL_1359?: number
        AOC_50011_1359?: number
        AOC_50012_1359?: number
        AOC_50013_1359?: number
        AOC_50014_1359?: number
        AOC_ALL_110?: number
        AOC_50011_110?: number
        AOC_50012_110?: number
        AOC_50013_110?: number
        AOC_50014_110?: number
        AOC_ALL_20182?: number
        AOC_50011_20182?: number
        AOC_50012_20182?: number
        AOC_50013_20182?: number
        AOC_50014_20182?: number
        AOC_ALL_20203?: number
        AOC_50011_20203?: number
        AOC_50012_20203?: number
        AOC_50013_20203?: number
        AOC_50014_20203?: number
        AOC_ALL_24155?: number
        AOC_50011_24155?: number
        AOC_50012_24155?: number
        AOC_50013_24155?: number
        AOC_50014_24155?: number
        AOC_ALL_24198?: number
        AOC_50011_24198?: number
        AOC_50012_24198?: number
        AOC_50013_24198?: number
        AOC_50014_24198?: number
        AOC_ALL_135?: number
        AOC_50011_135?: number
        AOC_50012_135?: number
        AOC_50013_135?: number
        AOC_50014_135?: number
        AOC_ALL_24196?: number
        AOC_50011_24196?: number
        AOC_50012_24196?: number
        AOC_50013_24196?: number
        AOC_50014_24196?: number
        AOC_ALL_24197?: number
        AOC_50011_24197?: number
        AOC_50012_24197?: number
        AOC_50013_24197?: number
        AOC_50014_24197?: number
        AOC_ALL_21?: number
        AOC_50011_21?: number
        AOC_50012_21?: number
        AOC_50013_21?: number
        AOC_50014_21?: number
    }

    export type GA_ANKETA_OBOROT_COUNTSUpdateInput = {
        AOC_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AOC_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        AOC_ALL_24189?: IntFieldUpdateOperationsInput | number
        AOC_50011_24189?: IntFieldUpdateOperationsInput | number
        AOC_50012_24189?: IntFieldUpdateOperationsInput | number
        AOC_50013_24189?: IntFieldUpdateOperationsInput | number
        AOC_50014_24189?: IntFieldUpdateOperationsInput | number
        AOC_ALL_10566?: IntFieldUpdateOperationsInput | number
        AOC_50011_10566?: IntFieldUpdateOperationsInput | number
        AOC_50012_10566?: IntFieldUpdateOperationsInput | number
        AOC_50013_10566?: IntFieldUpdateOperationsInput | number
        AOC_50014_10566?: IntFieldUpdateOperationsInput | number
        AOC_ALL_20079?: IntFieldUpdateOperationsInput | number
        AOC_50011_20079?: IntFieldUpdateOperationsInput | number
        AOC_50012_20079?: IntFieldUpdateOperationsInput | number
        AOC_50013_20079?: IntFieldUpdateOperationsInput | number
        AOC_50014_20079?: IntFieldUpdateOperationsInput | number
        AOC_ALL_7251?: IntFieldUpdateOperationsInput | number
        AOC_50011_7251?: IntFieldUpdateOperationsInput | number
        AOC_50012_7251?: IntFieldUpdateOperationsInput | number
        AOC_50013_7251?: IntFieldUpdateOperationsInput | number
        AOC_50014_7251?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24191?: IntFieldUpdateOperationsInput | number
        AOC_50011_24191?: IntFieldUpdateOperationsInput | number
        AOC_50012_24191?: IntFieldUpdateOperationsInput | number
        AOC_50013_24191?: IntFieldUpdateOperationsInput | number
        AOC_50014_24191?: IntFieldUpdateOperationsInput | number
        AOC_ALL_193?: IntFieldUpdateOperationsInput | number
        AOC_50011_193?: IntFieldUpdateOperationsInput | number
        AOC_50012_193?: IntFieldUpdateOperationsInput | number
        AOC_50013_193?: IntFieldUpdateOperationsInput | number
        AOC_50014_193?: IntFieldUpdateOperationsInput | number
        AOC_ALL_7610?: IntFieldUpdateOperationsInput | number
        AOC_50011_7610?: IntFieldUpdateOperationsInput | number
        AOC_50012_7610?: IntFieldUpdateOperationsInput | number
        AOC_50013_7610?: IntFieldUpdateOperationsInput | number
        AOC_50014_7610?: IntFieldUpdateOperationsInput | number
        AOC_ALL_10180?: IntFieldUpdateOperationsInput | number
        AOC_50011_10180?: IntFieldUpdateOperationsInput | number
        AOC_50012_10180?: IntFieldUpdateOperationsInput | number
        AOC_50013_10180?: IntFieldUpdateOperationsInput | number
        AOC_50014_10180?: IntFieldUpdateOperationsInput | number
        AOC_ALL_177?: IntFieldUpdateOperationsInput | number
        AOC_50011_177?: IntFieldUpdateOperationsInput | number
        AOC_50012_177?: IntFieldUpdateOperationsInput | number
        AOC_50013_177?: IntFieldUpdateOperationsInput | number
        AOC_50014_177?: IntFieldUpdateOperationsInput | number
        AOC_ALL_10223?: IntFieldUpdateOperationsInput | number
        AOC_50011_10223?: IntFieldUpdateOperationsInput | number
        AOC_50012_10223?: IntFieldUpdateOperationsInput | number
        AOC_50013_10223?: IntFieldUpdateOperationsInput | number
        AOC_50014_10223?: IntFieldUpdateOperationsInput | number
        AOC_ALL_7230?: IntFieldUpdateOperationsInput | number
        AOC_50011_7230?: IntFieldUpdateOperationsInput | number
        AOC_50012_7230?: IntFieldUpdateOperationsInput | number
        AOC_50013_7230?: IntFieldUpdateOperationsInput | number
        AOC_50014_7230?: IntFieldUpdateOperationsInput | number
        AOC_ALL_1359?: IntFieldUpdateOperationsInput | number
        AOC_50011_1359?: IntFieldUpdateOperationsInput | number
        AOC_50012_1359?: IntFieldUpdateOperationsInput | number
        AOC_50013_1359?: IntFieldUpdateOperationsInput | number
        AOC_50014_1359?: IntFieldUpdateOperationsInput | number
        AOC_ALL_110?: IntFieldUpdateOperationsInput | number
        AOC_50011_110?: IntFieldUpdateOperationsInput | number
        AOC_50012_110?: IntFieldUpdateOperationsInput | number
        AOC_50013_110?: IntFieldUpdateOperationsInput | number
        AOC_50014_110?: IntFieldUpdateOperationsInput | number
        AOC_ALL_20182?: IntFieldUpdateOperationsInput | number
        AOC_50011_20182?: IntFieldUpdateOperationsInput | number
        AOC_50012_20182?: IntFieldUpdateOperationsInput | number
        AOC_50013_20182?: IntFieldUpdateOperationsInput | number
        AOC_50014_20182?: IntFieldUpdateOperationsInput | number
        AOC_ALL_20203?: IntFieldUpdateOperationsInput | number
        AOC_50011_20203?: IntFieldUpdateOperationsInput | number
        AOC_50012_20203?: IntFieldUpdateOperationsInput | number
        AOC_50013_20203?: IntFieldUpdateOperationsInput | number
        AOC_50014_20203?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24155?: IntFieldUpdateOperationsInput | number
        AOC_50011_24155?: IntFieldUpdateOperationsInput | number
        AOC_50012_24155?: IntFieldUpdateOperationsInput | number
        AOC_50013_24155?: IntFieldUpdateOperationsInput | number
        AOC_50014_24155?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24198?: IntFieldUpdateOperationsInput | number
        AOC_50011_24198?: IntFieldUpdateOperationsInput | number
        AOC_50012_24198?: IntFieldUpdateOperationsInput | number
        AOC_50013_24198?: IntFieldUpdateOperationsInput | number
        AOC_50014_24198?: IntFieldUpdateOperationsInput | number
        AOC_ALL_135?: IntFieldUpdateOperationsInput | number
        AOC_50011_135?: IntFieldUpdateOperationsInput | number
        AOC_50012_135?: IntFieldUpdateOperationsInput | number
        AOC_50013_135?: IntFieldUpdateOperationsInput | number
        AOC_50014_135?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24196?: IntFieldUpdateOperationsInput | number
        AOC_50011_24196?: IntFieldUpdateOperationsInput | number
        AOC_50012_24196?: IntFieldUpdateOperationsInput | number
        AOC_50013_24196?: IntFieldUpdateOperationsInput | number
        AOC_50014_24196?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24197?: IntFieldUpdateOperationsInput | number
        AOC_50011_24197?: IntFieldUpdateOperationsInput | number
        AOC_50012_24197?: IntFieldUpdateOperationsInput | number
        AOC_50013_24197?: IntFieldUpdateOperationsInput | number
        AOC_50014_24197?: IntFieldUpdateOperationsInput | number
        AOC_ALL_21?: IntFieldUpdateOperationsInput | number
        AOC_50011_21?: IntFieldUpdateOperationsInput | number
        AOC_50012_21?: IntFieldUpdateOperationsInput | number
        AOC_50013_21?: IntFieldUpdateOperationsInput | number
        AOC_50014_21?: IntFieldUpdateOperationsInput | number
    }

    export type GA_ANKETA_OBOROT_COUNTSUncheckedUpdateInput = {
        AOC_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AOC_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        AOC_ALL_24189?: IntFieldUpdateOperationsInput | number
        AOC_50011_24189?: IntFieldUpdateOperationsInput | number
        AOC_50012_24189?: IntFieldUpdateOperationsInput | number
        AOC_50013_24189?: IntFieldUpdateOperationsInput | number
        AOC_50014_24189?: IntFieldUpdateOperationsInput | number
        AOC_ALL_10566?: IntFieldUpdateOperationsInput | number
        AOC_50011_10566?: IntFieldUpdateOperationsInput | number
        AOC_50012_10566?: IntFieldUpdateOperationsInput | number
        AOC_50013_10566?: IntFieldUpdateOperationsInput | number
        AOC_50014_10566?: IntFieldUpdateOperationsInput | number
        AOC_ALL_20079?: IntFieldUpdateOperationsInput | number
        AOC_50011_20079?: IntFieldUpdateOperationsInput | number
        AOC_50012_20079?: IntFieldUpdateOperationsInput | number
        AOC_50013_20079?: IntFieldUpdateOperationsInput | number
        AOC_50014_20079?: IntFieldUpdateOperationsInput | number
        AOC_ALL_7251?: IntFieldUpdateOperationsInput | number
        AOC_50011_7251?: IntFieldUpdateOperationsInput | number
        AOC_50012_7251?: IntFieldUpdateOperationsInput | number
        AOC_50013_7251?: IntFieldUpdateOperationsInput | number
        AOC_50014_7251?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24191?: IntFieldUpdateOperationsInput | number
        AOC_50011_24191?: IntFieldUpdateOperationsInput | number
        AOC_50012_24191?: IntFieldUpdateOperationsInput | number
        AOC_50013_24191?: IntFieldUpdateOperationsInput | number
        AOC_50014_24191?: IntFieldUpdateOperationsInput | number
        AOC_ALL_193?: IntFieldUpdateOperationsInput | number
        AOC_50011_193?: IntFieldUpdateOperationsInput | number
        AOC_50012_193?: IntFieldUpdateOperationsInput | number
        AOC_50013_193?: IntFieldUpdateOperationsInput | number
        AOC_50014_193?: IntFieldUpdateOperationsInput | number
        AOC_ALL_7610?: IntFieldUpdateOperationsInput | number
        AOC_50011_7610?: IntFieldUpdateOperationsInput | number
        AOC_50012_7610?: IntFieldUpdateOperationsInput | number
        AOC_50013_7610?: IntFieldUpdateOperationsInput | number
        AOC_50014_7610?: IntFieldUpdateOperationsInput | number
        AOC_ALL_10180?: IntFieldUpdateOperationsInput | number
        AOC_50011_10180?: IntFieldUpdateOperationsInput | number
        AOC_50012_10180?: IntFieldUpdateOperationsInput | number
        AOC_50013_10180?: IntFieldUpdateOperationsInput | number
        AOC_50014_10180?: IntFieldUpdateOperationsInput | number
        AOC_ALL_177?: IntFieldUpdateOperationsInput | number
        AOC_50011_177?: IntFieldUpdateOperationsInput | number
        AOC_50012_177?: IntFieldUpdateOperationsInput | number
        AOC_50013_177?: IntFieldUpdateOperationsInput | number
        AOC_50014_177?: IntFieldUpdateOperationsInput | number
        AOC_ALL_10223?: IntFieldUpdateOperationsInput | number
        AOC_50011_10223?: IntFieldUpdateOperationsInput | number
        AOC_50012_10223?: IntFieldUpdateOperationsInput | number
        AOC_50013_10223?: IntFieldUpdateOperationsInput | number
        AOC_50014_10223?: IntFieldUpdateOperationsInput | number
        AOC_ALL_7230?: IntFieldUpdateOperationsInput | number
        AOC_50011_7230?: IntFieldUpdateOperationsInput | number
        AOC_50012_7230?: IntFieldUpdateOperationsInput | number
        AOC_50013_7230?: IntFieldUpdateOperationsInput | number
        AOC_50014_7230?: IntFieldUpdateOperationsInput | number
        AOC_ALL_1359?: IntFieldUpdateOperationsInput | number
        AOC_50011_1359?: IntFieldUpdateOperationsInput | number
        AOC_50012_1359?: IntFieldUpdateOperationsInput | number
        AOC_50013_1359?: IntFieldUpdateOperationsInput | number
        AOC_50014_1359?: IntFieldUpdateOperationsInput | number
        AOC_ALL_110?: IntFieldUpdateOperationsInput | number
        AOC_50011_110?: IntFieldUpdateOperationsInput | number
        AOC_50012_110?: IntFieldUpdateOperationsInput | number
        AOC_50013_110?: IntFieldUpdateOperationsInput | number
        AOC_50014_110?: IntFieldUpdateOperationsInput | number
        AOC_ALL_20182?: IntFieldUpdateOperationsInput | number
        AOC_50011_20182?: IntFieldUpdateOperationsInput | number
        AOC_50012_20182?: IntFieldUpdateOperationsInput | number
        AOC_50013_20182?: IntFieldUpdateOperationsInput | number
        AOC_50014_20182?: IntFieldUpdateOperationsInput | number
        AOC_ALL_20203?: IntFieldUpdateOperationsInput | number
        AOC_50011_20203?: IntFieldUpdateOperationsInput | number
        AOC_50012_20203?: IntFieldUpdateOperationsInput | number
        AOC_50013_20203?: IntFieldUpdateOperationsInput | number
        AOC_50014_20203?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24155?: IntFieldUpdateOperationsInput | number
        AOC_50011_24155?: IntFieldUpdateOperationsInput | number
        AOC_50012_24155?: IntFieldUpdateOperationsInput | number
        AOC_50013_24155?: IntFieldUpdateOperationsInput | number
        AOC_50014_24155?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24198?: IntFieldUpdateOperationsInput | number
        AOC_50011_24198?: IntFieldUpdateOperationsInput | number
        AOC_50012_24198?: IntFieldUpdateOperationsInput | number
        AOC_50013_24198?: IntFieldUpdateOperationsInput | number
        AOC_50014_24198?: IntFieldUpdateOperationsInput | number
        AOC_ALL_135?: IntFieldUpdateOperationsInput | number
        AOC_50011_135?: IntFieldUpdateOperationsInput | number
        AOC_50012_135?: IntFieldUpdateOperationsInput | number
        AOC_50013_135?: IntFieldUpdateOperationsInput | number
        AOC_50014_135?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24196?: IntFieldUpdateOperationsInput | number
        AOC_50011_24196?: IntFieldUpdateOperationsInput | number
        AOC_50012_24196?: IntFieldUpdateOperationsInput | number
        AOC_50013_24196?: IntFieldUpdateOperationsInput | number
        AOC_50014_24196?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24197?: IntFieldUpdateOperationsInput | number
        AOC_50011_24197?: IntFieldUpdateOperationsInput | number
        AOC_50012_24197?: IntFieldUpdateOperationsInput | number
        AOC_50013_24197?: IntFieldUpdateOperationsInput | number
        AOC_50014_24197?: IntFieldUpdateOperationsInput | number
        AOC_ALL_21?: IntFieldUpdateOperationsInput | number
        AOC_50011_21?: IntFieldUpdateOperationsInput | number
        AOC_50012_21?: IntFieldUpdateOperationsInput | number
        AOC_50013_21?: IntFieldUpdateOperationsInput | number
        AOC_50014_21?: IntFieldUpdateOperationsInput | number
    }

    export type GA_ANKETA_OBOROT_COUNTSCreateManyInput = {
        AOC_ABA_ID: bigint | number
        AOC_DATETIME: Date | string
        AOC_ALL_24189?: number
        AOC_50011_24189?: number
        AOC_50012_24189?: number
        AOC_50013_24189?: number
        AOC_50014_24189?: number
        AOC_ALL_10566?: number
        AOC_50011_10566?: number
        AOC_50012_10566?: number
        AOC_50013_10566?: number
        AOC_50014_10566?: number
        AOC_ALL_20079?: number
        AOC_50011_20079?: number
        AOC_50012_20079?: number
        AOC_50013_20079?: number
        AOC_50014_20079?: number
        AOC_ALL_7251?: number
        AOC_50011_7251?: number
        AOC_50012_7251?: number
        AOC_50013_7251?: number
        AOC_50014_7251?: number
        AOC_ALL_24191?: number
        AOC_50011_24191?: number
        AOC_50012_24191?: number
        AOC_50013_24191?: number
        AOC_50014_24191?: number
        AOC_ALL_193?: number
        AOC_50011_193?: number
        AOC_50012_193?: number
        AOC_50013_193?: number
        AOC_50014_193?: number
        AOC_ALL_7610?: number
        AOC_50011_7610?: number
        AOC_50012_7610?: number
        AOC_50013_7610?: number
        AOC_50014_7610?: number
        AOC_ALL_10180?: number
        AOC_50011_10180?: number
        AOC_50012_10180?: number
        AOC_50013_10180?: number
        AOC_50014_10180?: number
        AOC_ALL_177?: number
        AOC_50011_177?: number
        AOC_50012_177?: number
        AOC_50013_177?: number
        AOC_50014_177?: number
        AOC_ALL_10223?: number
        AOC_50011_10223?: number
        AOC_50012_10223?: number
        AOC_50013_10223?: number
        AOC_50014_10223?: number
        AOC_ALL_7230?: number
        AOC_50011_7230?: number
        AOC_50012_7230?: number
        AOC_50013_7230?: number
        AOC_50014_7230?: number
        AOC_ALL_1359?: number
        AOC_50011_1359?: number
        AOC_50012_1359?: number
        AOC_50013_1359?: number
        AOC_50014_1359?: number
        AOC_ALL_110?: number
        AOC_50011_110?: number
        AOC_50012_110?: number
        AOC_50013_110?: number
        AOC_50014_110?: number
        AOC_ALL_20182?: number
        AOC_50011_20182?: number
        AOC_50012_20182?: number
        AOC_50013_20182?: number
        AOC_50014_20182?: number
        AOC_ALL_20203?: number
        AOC_50011_20203?: number
        AOC_50012_20203?: number
        AOC_50013_20203?: number
        AOC_50014_20203?: number
        AOC_ALL_24155?: number
        AOC_50011_24155?: number
        AOC_50012_24155?: number
        AOC_50013_24155?: number
        AOC_50014_24155?: number
        AOC_ALL_24198?: number
        AOC_50011_24198?: number
        AOC_50012_24198?: number
        AOC_50013_24198?: number
        AOC_50014_24198?: number
        AOC_ALL_135?: number
        AOC_50011_135?: number
        AOC_50012_135?: number
        AOC_50013_135?: number
        AOC_50014_135?: number
        AOC_ALL_24196?: number
        AOC_50011_24196?: number
        AOC_50012_24196?: number
        AOC_50013_24196?: number
        AOC_50014_24196?: number
        AOC_ALL_24197?: number
        AOC_50011_24197?: number
        AOC_50012_24197?: number
        AOC_50013_24197?: number
        AOC_50014_24197?: number
        AOC_ALL_21?: number
        AOC_50011_21?: number
        AOC_50012_21?: number
        AOC_50013_21?: number
        AOC_50014_21?: number
    }

    export type GA_ANKETA_OBOROT_COUNTSUpdateManyMutationInput = {
        AOC_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AOC_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        AOC_ALL_24189?: IntFieldUpdateOperationsInput | number
        AOC_50011_24189?: IntFieldUpdateOperationsInput | number
        AOC_50012_24189?: IntFieldUpdateOperationsInput | number
        AOC_50013_24189?: IntFieldUpdateOperationsInput | number
        AOC_50014_24189?: IntFieldUpdateOperationsInput | number
        AOC_ALL_10566?: IntFieldUpdateOperationsInput | number
        AOC_50011_10566?: IntFieldUpdateOperationsInput | number
        AOC_50012_10566?: IntFieldUpdateOperationsInput | number
        AOC_50013_10566?: IntFieldUpdateOperationsInput | number
        AOC_50014_10566?: IntFieldUpdateOperationsInput | number
        AOC_ALL_20079?: IntFieldUpdateOperationsInput | number
        AOC_50011_20079?: IntFieldUpdateOperationsInput | number
        AOC_50012_20079?: IntFieldUpdateOperationsInput | number
        AOC_50013_20079?: IntFieldUpdateOperationsInput | number
        AOC_50014_20079?: IntFieldUpdateOperationsInput | number
        AOC_ALL_7251?: IntFieldUpdateOperationsInput | number
        AOC_50011_7251?: IntFieldUpdateOperationsInput | number
        AOC_50012_7251?: IntFieldUpdateOperationsInput | number
        AOC_50013_7251?: IntFieldUpdateOperationsInput | number
        AOC_50014_7251?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24191?: IntFieldUpdateOperationsInput | number
        AOC_50011_24191?: IntFieldUpdateOperationsInput | number
        AOC_50012_24191?: IntFieldUpdateOperationsInput | number
        AOC_50013_24191?: IntFieldUpdateOperationsInput | number
        AOC_50014_24191?: IntFieldUpdateOperationsInput | number
        AOC_ALL_193?: IntFieldUpdateOperationsInput | number
        AOC_50011_193?: IntFieldUpdateOperationsInput | number
        AOC_50012_193?: IntFieldUpdateOperationsInput | number
        AOC_50013_193?: IntFieldUpdateOperationsInput | number
        AOC_50014_193?: IntFieldUpdateOperationsInput | number
        AOC_ALL_7610?: IntFieldUpdateOperationsInput | number
        AOC_50011_7610?: IntFieldUpdateOperationsInput | number
        AOC_50012_7610?: IntFieldUpdateOperationsInput | number
        AOC_50013_7610?: IntFieldUpdateOperationsInput | number
        AOC_50014_7610?: IntFieldUpdateOperationsInput | number
        AOC_ALL_10180?: IntFieldUpdateOperationsInput | number
        AOC_50011_10180?: IntFieldUpdateOperationsInput | number
        AOC_50012_10180?: IntFieldUpdateOperationsInput | number
        AOC_50013_10180?: IntFieldUpdateOperationsInput | number
        AOC_50014_10180?: IntFieldUpdateOperationsInput | number
        AOC_ALL_177?: IntFieldUpdateOperationsInput | number
        AOC_50011_177?: IntFieldUpdateOperationsInput | number
        AOC_50012_177?: IntFieldUpdateOperationsInput | number
        AOC_50013_177?: IntFieldUpdateOperationsInput | number
        AOC_50014_177?: IntFieldUpdateOperationsInput | number
        AOC_ALL_10223?: IntFieldUpdateOperationsInput | number
        AOC_50011_10223?: IntFieldUpdateOperationsInput | number
        AOC_50012_10223?: IntFieldUpdateOperationsInput | number
        AOC_50013_10223?: IntFieldUpdateOperationsInput | number
        AOC_50014_10223?: IntFieldUpdateOperationsInput | number
        AOC_ALL_7230?: IntFieldUpdateOperationsInput | number
        AOC_50011_7230?: IntFieldUpdateOperationsInput | number
        AOC_50012_7230?: IntFieldUpdateOperationsInput | number
        AOC_50013_7230?: IntFieldUpdateOperationsInput | number
        AOC_50014_7230?: IntFieldUpdateOperationsInput | number
        AOC_ALL_1359?: IntFieldUpdateOperationsInput | number
        AOC_50011_1359?: IntFieldUpdateOperationsInput | number
        AOC_50012_1359?: IntFieldUpdateOperationsInput | number
        AOC_50013_1359?: IntFieldUpdateOperationsInput | number
        AOC_50014_1359?: IntFieldUpdateOperationsInput | number
        AOC_ALL_110?: IntFieldUpdateOperationsInput | number
        AOC_50011_110?: IntFieldUpdateOperationsInput | number
        AOC_50012_110?: IntFieldUpdateOperationsInput | number
        AOC_50013_110?: IntFieldUpdateOperationsInput | number
        AOC_50014_110?: IntFieldUpdateOperationsInput | number
        AOC_ALL_20182?: IntFieldUpdateOperationsInput | number
        AOC_50011_20182?: IntFieldUpdateOperationsInput | number
        AOC_50012_20182?: IntFieldUpdateOperationsInput | number
        AOC_50013_20182?: IntFieldUpdateOperationsInput | number
        AOC_50014_20182?: IntFieldUpdateOperationsInput | number
        AOC_ALL_20203?: IntFieldUpdateOperationsInput | number
        AOC_50011_20203?: IntFieldUpdateOperationsInput | number
        AOC_50012_20203?: IntFieldUpdateOperationsInput | number
        AOC_50013_20203?: IntFieldUpdateOperationsInput | number
        AOC_50014_20203?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24155?: IntFieldUpdateOperationsInput | number
        AOC_50011_24155?: IntFieldUpdateOperationsInput | number
        AOC_50012_24155?: IntFieldUpdateOperationsInput | number
        AOC_50013_24155?: IntFieldUpdateOperationsInput | number
        AOC_50014_24155?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24198?: IntFieldUpdateOperationsInput | number
        AOC_50011_24198?: IntFieldUpdateOperationsInput | number
        AOC_50012_24198?: IntFieldUpdateOperationsInput | number
        AOC_50013_24198?: IntFieldUpdateOperationsInput | number
        AOC_50014_24198?: IntFieldUpdateOperationsInput | number
        AOC_ALL_135?: IntFieldUpdateOperationsInput | number
        AOC_50011_135?: IntFieldUpdateOperationsInput | number
        AOC_50012_135?: IntFieldUpdateOperationsInput | number
        AOC_50013_135?: IntFieldUpdateOperationsInput | number
        AOC_50014_135?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24196?: IntFieldUpdateOperationsInput | number
        AOC_50011_24196?: IntFieldUpdateOperationsInput | number
        AOC_50012_24196?: IntFieldUpdateOperationsInput | number
        AOC_50013_24196?: IntFieldUpdateOperationsInput | number
        AOC_50014_24196?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24197?: IntFieldUpdateOperationsInput | number
        AOC_50011_24197?: IntFieldUpdateOperationsInput | number
        AOC_50012_24197?: IntFieldUpdateOperationsInput | number
        AOC_50013_24197?: IntFieldUpdateOperationsInput | number
        AOC_50014_24197?: IntFieldUpdateOperationsInput | number
        AOC_ALL_21?: IntFieldUpdateOperationsInput | number
        AOC_50011_21?: IntFieldUpdateOperationsInput | number
        AOC_50012_21?: IntFieldUpdateOperationsInput | number
        AOC_50013_21?: IntFieldUpdateOperationsInput | number
        AOC_50014_21?: IntFieldUpdateOperationsInput | number
    }

    export type GA_ANKETA_OBOROT_COUNTSUncheckedUpdateManyInput = {
        AOC_ABA_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        AOC_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        AOC_ALL_24189?: IntFieldUpdateOperationsInput | number
        AOC_50011_24189?: IntFieldUpdateOperationsInput | number
        AOC_50012_24189?: IntFieldUpdateOperationsInput | number
        AOC_50013_24189?: IntFieldUpdateOperationsInput | number
        AOC_50014_24189?: IntFieldUpdateOperationsInput | number
        AOC_ALL_10566?: IntFieldUpdateOperationsInput | number
        AOC_50011_10566?: IntFieldUpdateOperationsInput | number
        AOC_50012_10566?: IntFieldUpdateOperationsInput | number
        AOC_50013_10566?: IntFieldUpdateOperationsInput | number
        AOC_50014_10566?: IntFieldUpdateOperationsInput | number
        AOC_ALL_20079?: IntFieldUpdateOperationsInput | number
        AOC_50011_20079?: IntFieldUpdateOperationsInput | number
        AOC_50012_20079?: IntFieldUpdateOperationsInput | number
        AOC_50013_20079?: IntFieldUpdateOperationsInput | number
        AOC_50014_20079?: IntFieldUpdateOperationsInput | number
        AOC_ALL_7251?: IntFieldUpdateOperationsInput | number
        AOC_50011_7251?: IntFieldUpdateOperationsInput | number
        AOC_50012_7251?: IntFieldUpdateOperationsInput | number
        AOC_50013_7251?: IntFieldUpdateOperationsInput | number
        AOC_50014_7251?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24191?: IntFieldUpdateOperationsInput | number
        AOC_50011_24191?: IntFieldUpdateOperationsInput | number
        AOC_50012_24191?: IntFieldUpdateOperationsInput | number
        AOC_50013_24191?: IntFieldUpdateOperationsInput | number
        AOC_50014_24191?: IntFieldUpdateOperationsInput | number
        AOC_ALL_193?: IntFieldUpdateOperationsInput | number
        AOC_50011_193?: IntFieldUpdateOperationsInput | number
        AOC_50012_193?: IntFieldUpdateOperationsInput | number
        AOC_50013_193?: IntFieldUpdateOperationsInput | number
        AOC_50014_193?: IntFieldUpdateOperationsInput | number
        AOC_ALL_7610?: IntFieldUpdateOperationsInput | number
        AOC_50011_7610?: IntFieldUpdateOperationsInput | number
        AOC_50012_7610?: IntFieldUpdateOperationsInput | number
        AOC_50013_7610?: IntFieldUpdateOperationsInput | number
        AOC_50014_7610?: IntFieldUpdateOperationsInput | number
        AOC_ALL_10180?: IntFieldUpdateOperationsInput | number
        AOC_50011_10180?: IntFieldUpdateOperationsInput | number
        AOC_50012_10180?: IntFieldUpdateOperationsInput | number
        AOC_50013_10180?: IntFieldUpdateOperationsInput | number
        AOC_50014_10180?: IntFieldUpdateOperationsInput | number
        AOC_ALL_177?: IntFieldUpdateOperationsInput | number
        AOC_50011_177?: IntFieldUpdateOperationsInput | number
        AOC_50012_177?: IntFieldUpdateOperationsInput | number
        AOC_50013_177?: IntFieldUpdateOperationsInput | number
        AOC_50014_177?: IntFieldUpdateOperationsInput | number
        AOC_ALL_10223?: IntFieldUpdateOperationsInput | number
        AOC_50011_10223?: IntFieldUpdateOperationsInput | number
        AOC_50012_10223?: IntFieldUpdateOperationsInput | number
        AOC_50013_10223?: IntFieldUpdateOperationsInput | number
        AOC_50014_10223?: IntFieldUpdateOperationsInput | number
        AOC_ALL_7230?: IntFieldUpdateOperationsInput | number
        AOC_50011_7230?: IntFieldUpdateOperationsInput | number
        AOC_50012_7230?: IntFieldUpdateOperationsInput | number
        AOC_50013_7230?: IntFieldUpdateOperationsInput | number
        AOC_50014_7230?: IntFieldUpdateOperationsInput | number
        AOC_ALL_1359?: IntFieldUpdateOperationsInput | number
        AOC_50011_1359?: IntFieldUpdateOperationsInput | number
        AOC_50012_1359?: IntFieldUpdateOperationsInput | number
        AOC_50013_1359?: IntFieldUpdateOperationsInput | number
        AOC_50014_1359?: IntFieldUpdateOperationsInput | number
        AOC_ALL_110?: IntFieldUpdateOperationsInput | number
        AOC_50011_110?: IntFieldUpdateOperationsInput | number
        AOC_50012_110?: IntFieldUpdateOperationsInput | number
        AOC_50013_110?: IntFieldUpdateOperationsInput | number
        AOC_50014_110?: IntFieldUpdateOperationsInput | number
        AOC_ALL_20182?: IntFieldUpdateOperationsInput | number
        AOC_50011_20182?: IntFieldUpdateOperationsInput | number
        AOC_50012_20182?: IntFieldUpdateOperationsInput | number
        AOC_50013_20182?: IntFieldUpdateOperationsInput | number
        AOC_50014_20182?: IntFieldUpdateOperationsInput | number
        AOC_ALL_20203?: IntFieldUpdateOperationsInput | number
        AOC_50011_20203?: IntFieldUpdateOperationsInput | number
        AOC_50012_20203?: IntFieldUpdateOperationsInput | number
        AOC_50013_20203?: IntFieldUpdateOperationsInput | number
        AOC_50014_20203?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24155?: IntFieldUpdateOperationsInput | number
        AOC_50011_24155?: IntFieldUpdateOperationsInput | number
        AOC_50012_24155?: IntFieldUpdateOperationsInput | number
        AOC_50013_24155?: IntFieldUpdateOperationsInput | number
        AOC_50014_24155?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24198?: IntFieldUpdateOperationsInput | number
        AOC_50011_24198?: IntFieldUpdateOperationsInput | number
        AOC_50012_24198?: IntFieldUpdateOperationsInput | number
        AOC_50013_24198?: IntFieldUpdateOperationsInput | number
        AOC_50014_24198?: IntFieldUpdateOperationsInput | number
        AOC_ALL_135?: IntFieldUpdateOperationsInput | number
        AOC_50011_135?: IntFieldUpdateOperationsInput | number
        AOC_50012_135?: IntFieldUpdateOperationsInput | number
        AOC_50013_135?: IntFieldUpdateOperationsInput | number
        AOC_50014_135?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24196?: IntFieldUpdateOperationsInput | number
        AOC_50011_24196?: IntFieldUpdateOperationsInput | number
        AOC_50012_24196?: IntFieldUpdateOperationsInput | number
        AOC_50013_24196?: IntFieldUpdateOperationsInput | number
        AOC_50014_24196?: IntFieldUpdateOperationsInput | number
        AOC_ALL_24197?: IntFieldUpdateOperationsInput | number
        AOC_50011_24197?: IntFieldUpdateOperationsInput | number
        AOC_50012_24197?: IntFieldUpdateOperationsInput | number
        AOC_50013_24197?: IntFieldUpdateOperationsInput | number
        AOC_50014_24197?: IntFieldUpdateOperationsInput | number
        AOC_ALL_21?: IntFieldUpdateOperationsInput | number
        AOC_50011_21?: IntFieldUpdateOperationsInput | number
        AOC_50012_21?: IntFieldUpdateOperationsInput | number
        AOC_50013_21?: IntFieldUpdateOperationsInput | number
        AOC_50014_21?: IntFieldUpdateOperationsInput | number
    }

    export type GA_ANKETA_SCORESCreateInput = {
        ANS_WSU_ID: bigint | number
        ANS_SCORES: number
        ANS_DATETIME: Date | string
        ANS_ISSHOW?: boolean
    }

    export type GA_ANKETA_SCORESUncheckedCreateInput = {
        ANS_WSU_ID: bigint | number
        ANS_SCORES: number
        ANS_DATETIME: Date | string
        ANS_ISSHOW?: boolean
    }

    export type GA_ANKETA_SCORESUpdateInput = {
        ANS_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ANS_SCORES?: IntFieldUpdateOperationsInput | number
        ANS_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ANS_ISSHOW?: BoolFieldUpdateOperationsInput | boolean
    }

    export type GA_ANKETA_SCORESUncheckedUpdateInput = {
        ANS_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ANS_SCORES?: IntFieldUpdateOperationsInput | number
        ANS_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ANS_ISSHOW?: BoolFieldUpdateOperationsInput | boolean
    }

    export type GA_ANKETA_SCORESCreateManyInput = {
        ANS_WSU_ID: bigint | number
        ANS_SCORES: number
        ANS_DATETIME: Date | string
        ANS_ISSHOW?: boolean
    }

    export type GA_ANKETA_SCORESUpdateManyMutationInput = {
        ANS_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ANS_SCORES?: IntFieldUpdateOperationsInput | number
        ANS_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ANS_ISSHOW?: BoolFieldUpdateOperationsInput | boolean
    }

    export type GA_ANKETA_SCORESUncheckedUpdateManyInput = {
        ANS_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ANS_SCORES?: IntFieldUpdateOperationsInput | number
        ANS_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ANS_ISSHOW?: BoolFieldUpdateOperationsInput | boolean
    }

    export type GA_ANKETA_SCORES_HISTORYCreateInput = {
        ASH_WSU_ID: bigint | number
        ASH_SCORES: number
        ASH_DATETIME: Date | string
        ASH_DESC: string
        ASH_TYPE: number
        ASH_SCORES_OLD?: number
        ASH_EVENT_STATUS?: boolean
        ASH_DATETIME_UPDATE: Date | string
        ASH_IZO_ID?: bigint | number
    }

    export type GA_ANKETA_SCORES_HISTORYUncheckedCreateInput = {
        ASH_WSU_ID: bigint | number
        ASH_SCORES: number
        ASH_DATETIME: Date | string
        ASH_DESC: string
        ASH_TYPE: number
        ASH_SCORES_OLD?: number
        ASH_EVENT_STATUS?: boolean
        ASH_DATETIME_UPDATE: Date | string
        ASH_IZO_ID?: bigint | number
    }

    export type GA_ANKETA_SCORES_HISTORYUpdateInput = {
        ASH_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ASH_SCORES?: IntFieldUpdateOperationsInput | number
        ASH_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ASH_DESC?: StringFieldUpdateOperationsInput | string
        ASH_TYPE?: IntFieldUpdateOperationsInput | number
        ASH_SCORES_OLD?: IntFieldUpdateOperationsInput | number
        ASH_EVENT_STATUS?: BoolFieldUpdateOperationsInput | boolean
        ASH_DATETIME_UPDATE?: DateTimeFieldUpdateOperationsInput | Date | string
        ASH_IZO_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    }

    export type GA_ANKETA_SCORES_HISTORYUncheckedUpdateInput = {
        ASH_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ASH_SCORES?: IntFieldUpdateOperationsInput | number
        ASH_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ASH_DESC?: StringFieldUpdateOperationsInput | string
        ASH_TYPE?: IntFieldUpdateOperationsInput | number
        ASH_SCORES_OLD?: IntFieldUpdateOperationsInput | number
        ASH_EVENT_STATUS?: BoolFieldUpdateOperationsInput | boolean
        ASH_DATETIME_UPDATE?: DateTimeFieldUpdateOperationsInput | Date | string
        ASH_IZO_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    }

    export type GA_ANKETA_SCORES_HISTORYCreateManyInput = {
        ASH_WSU_ID: bigint | number
        ASH_SCORES: number
        ASH_DATETIME: Date | string
        ASH_DESC: string
        ASH_TYPE: number
        ASH_SCORES_OLD?: number
        ASH_EVENT_STATUS?: boolean
        ASH_DATETIME_UPDATE: Date | string
        ASH_IZO_ID?: bigint | number
    }

    export type GA_ANKETA_SCORES_HISTORYUpdateManyMutationInput = {
        ASH_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ASH_SCORES?: IntFieldUpdateOperationsInput | number
        ASH_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ASH_DESC?: StringFieldUpdateOperationsInput | string
        ASH_TYPE?: IntFieldUpdateOperationsInput | number
        ASH_SCORES_OLD?: IntFieldUpdateOperationsInput | number
        ASH_EVENT_STATUS?: BoolFieldUpdateOperationsInput | boolean
        ASH_DATETIME_UPDATE?: DateTimeFieldUpdateOperationsInput | Date | string
        ASH_IZO_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    }

    export type GA_ANKETA_SCORES_HISTORYUncheckedUpdateManyInput = {
        ASH_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ASH_SCORES?: IntFieldUpdateOperationsInput | number
        ASH_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        ASH_DESC?: StringFieldUpdateOperationsInput | string
        ASH_TYPE?: IntFieldUpdateOperationsInput | number
        ASH_SCORES_OLD?: IntFieldUpdateOperationsInput | number
        ASH_EVENT_STATUS?: BoolFieldUpdateOperationsInput | boolean
        ASH_DATETIME_UPDATE?: DateTimeFieldUpdateOperationsInput | Date | string
        ASH_IZO_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    }

    export type GA_ANKETA_SOREVNOVANIECreateInput = {
        ASR_YEAR: number
        ASR_MONTH: number
        ASR_WSU_ID: bigint | number
        ASR_LOGIN: string
        ASR_FIO: string
        ASR_SCORE: number
        ASR_DOLJNOST: string
        ASR_RUKOVODITEL?: boolean
    }

    export type GA_ANKETA_SOREVNOVANIEUncheckedCreateInput = {
        ASR_YEAR: number
        ASR_MONTH: number
        ASR_WSU_ID: bigint | number
        ASR_LOGIN: string
        ASR_FIO: string
        ASR_SCORE: number
        ASR_DOLJNOST: string
        ASR_RUKOVODITEL?: boolean
    }

    export type GA_ANKETA_SOREVNOVANIEUpdateInput = {
        ASR_YEAR?: IntFieldUpdateOperationsInput | number
        ASR_MONTH?: IntFieldUpdateOperationsInput | number
        ASR_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ASR_LOGIN?: StringFieldUpdateOperationsInput | string
        ASR_FIO?: StringFieldUpdateOperationsInput | string
        ASR_SCORE?: IntFieldUpdateOperationsInput | number
        ASR_DOLJNOST?: StringFieldUpdateOperationsInput | string
        ASR_RUKOVODITEL?: BoolFieldUpdateOperationsInput | boolean
    }

    export type GA_ANKETA_SOREVNOVANIEUncheckedUpdateInput = {
        ASR_YEAR?: IntFieldUpdateOperationsInput | number
        ASR_MONTH?: IntFieldUpdateOperationsInput | number
        ASR_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ASR_LOGIN?: StringFieldUpdateOperationsInput | string
        ASR_FIO?: StringFieldUpdateOperationsInput | string
        ASR_SCORE?: IntFieldUpdateOperationsInput | number
        ASR_DOLJNOST?: StringFieldUpdateOperationsInput | string
        ASR_RUKOVODITEL?: BoolFieldUpdateOperationsInput | boolean
    }

    export type GA_ANKETA_SOREVNOVANIECreateManyInput = {
        ASR_YEAR: number
        ASR_MONTH: number
        ASR_WSU_ID: bigint | number
        ASR_LOGIN: string
        ASR_FIO: string
        ASR_SCORE: number
        ASR_DOLJNOST: string
        ASR_RUKOVODITEL?: boolean
    }

    export type GA_ANKETA_SOREVNOVANIEUpdateManyMutationInput = {
        ASR_YEAR?: IntFieldUpdateOperationsInput | number
        ASR_MONTH?: IntFieldUpdateOperationsInput | number
        ASR_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ASR_LOGIN?: StringFieldUpdateOperationsInput | string
        ASR_FIO?: StringFieldUpdateOperationsInput | string
        ASR_SCORE?: IntFieldUpdateOperationsInput | number
        ASR_DOLJNOST?: StringFieldUpdateOperationsInput | string
        ASR_RUKOVODITEL?: BoolFieldUpdateOperationsInput | boolean
    }

    export type GA_ANKETA_SOREVNOVANIEUncheckedUpdateManyInput = {
        ASR_YEAR?: IntFieldUpdateOperationsInput | number
        ASR_MONTH?: IntFieldUpdateOperationsInput | number
        ASR_WSU_ID?: BigIntFieldUpdateOperationsInput | bigint | number
        ASR_LOGIN?: StringFieldUpdateOperationsInput | string
        ASR_FIO?: StringFieldUpdateOperationsInput | string
        ASR_SCORE?: IntFieldUpdateOperationsInput | number
        ASR_DOLJNOST?: StringFieldUpdateOperationsInput | string
        ASR_RUKOVODITEL?: BoolFieldUpdateOperationsInput | boolean
    }

    export type GA_SUP_50012_SELLOUTCreateInput = {
        SPR_SPH_ID: number
        SPR_INN: string
        SPR_CLIENT: string
        SPR_GROUPTYPE: string
        SPR_ARTICLE: string
        SPR_BRAND: string
        SPR_INFO: string
        SPR_QTY?: number
        SPR_PRICE?: number
        SPR_SUMMA?: number
        SPR_ART_ID: number
        SPR_DATETIME: Date | string
        SPR_ADDR: string
        SPR_CLIENT_CODE: string
        SPR_CLIENT_ID: string
        SPR_CLIENT_CODE2: string
        SPR_ADDR_ENC: string
    }

    export type GA_SUP_50012_SELLOUTUncheckedCreateInput = {
        SPR_SPH_ID: number
        SPR_INN: string
        SPR_CLIENT: string
        SPR_GROUPTYPE: string
        SPR_ARTICLE: string
        SPR_BRAND: string
        SPR_INFO: string
        SPR_QTY?: number
        SPR_PRICE?: number
        SPR_SUMMA?: number
        SPR_ART_ID: number
        SPR_DATETIME: Date | string
        SPR_ADDR: string
        SPR_CLIENT_CODE: string
        SPR_CLIENT_ID: string
        SPR_CLIENT_CODE2: string
        SPR_ADDR_ENC: string
    }

    export type GA_SUP_50012_SELLOUTUpdateInput = {
        SPR_SPH_ID?: IntFieldUpdateOperationsInput | number
        SPR_INN?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT?: StringFieldUpdateOperationsInput | string
        SPR_GROUPTYPE?: StringFieldUpdateOperationsInput | string
        SPR_ARTICLE?: StringFieldUpdateOperationsInput | string
        SPR_BRAND?: StringFieldUpdateOperationsInput | string
        SPR_INFO?: StringFieldUpdateOperationsInput | string
        SPR_QTY?: FloatFieldUpdateOperationsInput | number
        SPR_PRICE?: FloatFieldUpdateOperationsInput | number
        SPR_SUMMA?: FloatFieldUpdateOperationsInput | number
        SPR_ART_ID?: IntFieldUpdateOperationsInput | number
        SPR_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        SPR_ADDR?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_ID?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE2?: StringFieldUpdateOperationsInput | string
        SPR_ADDR_ENC?: StringFieldUpdateOperationsInput | string
    }

    export type GA_SUP_50012_SELLOUTUncheckedUpdateInput = {
        SPR_SPH_ID?: IntFieldUpdateOperationsInput | number
        SPR_INN?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT?: StringFieldUpdateOperationsInput | string
        SPR_GROUPTYPE?: StringFieldUpdateOperationsInput | string
        SPR_ARTICLE?: StringFieldUpdateOperationsInput | string
        SPR_BRAND?: StringFieldUpdateOperationsInput | string
        SPR_INFO?: StringFieldUpdateOperationsInput | string
        SPR_QTY?: FloatFieldUpdateOperationsInput | number
        SPR_PRICE?: FloatFieldUpdateOperationsInput | number
        SPR_SUMMA?: FloatFieldUpdateOperationsInput | number
        SPR_ART_ID?: IntFieldUpdateOperationsInput | number
        SPR_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        SPR_ADDR?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_ID?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE2?: StringFieldUpdateOperationsInput | string
        SPR_ADDR_ENC?: StringFieldUpdateOperationsInput | string
    }

    export type GA_SUP_50012_SELLOUTCreateManyInput = {
        SPR_SPH_ID: number
        SPR_INN: string
        SPR_CLIENT: string
        SPR_GROUPTYPE: string
        SPR_ARTICLE: string
        SPR_BRAND: string
        SPR_INFO: string
        SPR_QTY?: number
        SPR_PRICE?: number
        SPR_SUMMA?: number
        SPR_ART_ID: number
        SPR_DATETIME: Date | string
        SPR_ADDR: string
        SPR_CLIENT_CODE: string
        SPR_CLIENT_ID: string
        SPR_CLIENT_CODE2: string
        SPR_ADDR_ENC: string
    }

    export type GA_SUP_50012_SELLOUTUpdateManyMutationInput = {
        SPR_SPH_ID?: IntFieldUpdateOperationsInput | number
        SPR_INN?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT?: StringFieldUpdateOperationsInput | string
        SPR_GROUPTYPE?: StringFieldUpdateOperationsInput | string
        SPR_ARTICLE?: StringFieldUpdateOperationsInput | string
        SPR_BRAND?: StringFieldUpdateOperationsInput | string
        SPR_INFO?: StringFieldUpdateOperationsInput | string
        SPR_QTY?: FloatFieldUpdateOperationsInput | number
        SPR_PRICE?: FloatFieldUpdateOperationsInput | number
        SPR_SUMMA?: FloatFieldUpdateOperationsInput | number
        SPR_ART_ID?: IntFieldUpdateOperationsInput | number
        SPR_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        SPR_ADDR?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_ID?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE2?: StringFieldUpdateOperationsInput | string
        SPR_ADDR_ENC?: StringFieldUpdateOperationsInput | string
    }

    export type GA_SUP_50012_SELLOUTUncheckedUpdateManyInput = {
        SPR_SPH_ID?: IntFieldUpdateOperationsInput | number
        SPR_INN?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT?: StringFieldUpdateOperationsInput | string
        SPR_GROUPTYPE?: StringFieldUpdateOperationsInput | string
        SPR_ARTICLE?: StringFieldUpdateOperationsInput | string
        SPR_BRAND?: StringFieldUpdateOperationsInput | string
        SPR_INFO?: StringFieldUpdateOperationsInput | string
        SPR_QTY?: FloatFieldUpdateOperationsInput | number
        SPR_PRICE?: FloatFieldUpdateOperationsInput | number
        SPR_SUMMA?: FloatFieldUpdateOperationsInput | number
        SPR_ART_ID?: IntFieldUpdateOperationsInput | number
        SPR_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        SPR_ADDR?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_ID?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE2?: StringFieldUpdateOperationsInput | string
        SPR_ADDR_ENC?: StringFieldUpdateOperationsInput | string
    }

    export type GA_SUP_50013_SELLOUTCreateInput = {
        SPR_SPH_ID: number
        SPR_INN: string
        SPR_CLIENT: string
        SPR_GROUPTYPE: string
        SPR_ARTICLE: string
        SPR_BRAND: string
        SPR_INFO: string
        SPR_QTY?: number
        SPR_PRICE?: number
        SPR_SUMMA?: number
        SPR_ART_ID: number
        SPR_DATETIME: Date | string
        SPR_ADDR: string
        SPR_CLIENT_CODE: string
        SPR_CLIENT_ID: string
        SPR_CLIENT_CODE2: string
        SPR_ADDR_ENC: string
    }

    export type GA_SUP_50013_SELLOUTUncheckedCreateInput = {
        SPR_SPH_ID: number
        SPR_INN: string
        SPR_CLIENT: string
        SPR_GROUPTYPE: string
        SPR_ARTICLE: string
        SPR_BRAND: string
        SPR_INFO: string
        SPR_QTY?: number
        SPR_PRICE?: number
        SPR_SUMMA?: number
        SPR_ART_ID: number
        SPR_DATETIME: Date | string
        SPR_ADDR: string
        SPR_CLIENT_CODE: string
        SPR_CLIENT_ID: string
        SPR_CLIENT_CODE2: string
        SPR_ADDR_ENC: string
    }

    export type GA_SUP_50013_SELLOUTUpdateInput = {
        SPR_SPH_ID?: IntFieldUpdateOperationsInput | number
        SPR_INN?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT?: StringFieldUpdateOperationsInput | string
        SPR_GROUPTYPE?: StringFieldUpdateOperationsInput | string
        SPR_ARTICLE?: StringFieldUpdateOperationsInput | string
        SPR_BRAND?: StringFieldUpdateOperationsInput | string
        SPR_INFO?: StringFieldUpdateOperationsInput | string
        SPR_QTY?: FloatFieldUpdateOperationsInput | number
        SPR_PRICE?: FloatFieldUpdateOperationsInput | number
        SPR_SUMMA?: FloatFieldUpdateOperationsInput | number
        SPR_ART_ID?: IntFieldUpdateOperationsInput | number
        SPR_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        SPR_ADDR?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_ID?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE2?: StringFieldUpdateOperationsInput | string
        SPR_ADDR_ENC?: StringFieldUpdateOperationsInput | string
    }

    export type GA_SUP_50013_SELLOUTUncheckedUpdateInput = {
        SPR_SPH_ID?: IntFieldUpdateOperationsInput | number
        SPR_INN?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT?: StringFieldUpdateOperationsInput | string
        SPR_GROUPTYPE?: StringFieldUpdateOperationsInput | string
        SPR_ARTICLE?: StringFieldUpdateOperationsInput | string
        SPR_BRAND?: StringFieldUpdateOperationsInput | string
        SPR_INFO?: StringFieldUpdateOperationsInput | string
        SPR_QTY?: FloatFieldUpdateOperationsInput | number
        SPR_PRICE?: FloatFieldUpdateOperationsInput | number
        SPR_SUMMA?: FloatFieldUpdateOperationsInput | number
        SPR_ART_ID?: IntFieldUpdateOperationsInput | number
        SPR_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        SPR_ADDR?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_ID?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE2?: StringFieldUpdateOperationsInput | string
        SPR_ADDR_ENC?: StringFieldUpdateOperationsInput | string
    }

    export type GA_SUP_50013_SELLOUTCreateManyInput = {
        SPR_SPH_ID: number
        SPR_INN: string
        SPR_CLIENT: string
        SPR_GROUPTYPE: string
        SPR_ARTICLE: string
        SPR_BRAND: string
        SPR_INFO: string
        SPR_QTY?: number
        SPR_PRICE?: number
        SPR_SUMMA?: number
        SPR_ART_ID: number
        SPR_DATETIME: Date | string
        SPR_ADDR: string
        SPR_CLIENT_CODE: string
        SPR_CLIENT_ID: string
        SPR_CLIENT_CODE2: string
        SPR_ADDR_ENC: string
    }

    export type GA_SUP_50013_SELLOUTUpdateManyMutationInput = {
        SPR_SPH_ID?: IntFieldUpdateOperationsInput | number
        SPR_INN?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT?: StringFieldUpdateOperationsInput | string
        SPR_GROUPTYPE?: StringFieldUpdateOperationsInput | string
        SPR_ARTICLE?: StringFieldUpdateOperationsInput | string
        SPR_BRAND?: StringFieldUpdateOperationsInput | string
        SPR_INFO?: StringFieldUpdateOperationsInput | string
        SPR_QTY?: FloatFieldUpdateOperationsInput | number
        SPR_PRICE?: FloatFieldUpdateOperationsInput | number
        SPR_SUMMA?: FloatFieldUpdateOperationsInput | number
        SPR_ART_ID?: IntFieldUpdateOperationsInput | number
        SPR_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        SPR_ADDR?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_ID?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE2?: StringFieldUpdateOperationsInput | string
        SPR_ADDR_ENC?: StringFieldUpdateOperationsInput | string
    }

    export type GA_SUP_50013_SELLOUTUncheckedUpdateManyInput = {
        SPR_SPH_ID?: IntFieldUpdateOperationsInput | number
        SPR_INN?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT?: StringFieldUpdateOperationsInput | string
        SPR_GROUPTYPE?: StringFieldUpdateOperationsInput | string
        SPR_ARTICLE?: StringFieldUpdateOperationsInput | string
        SPR_BRAND?: StringFieldUpdateOperationsInput | string
        SPR_INFO?: StringFieldUpdateOperationsInput | string
        SPR_QTY?: FloatFieldUpdateOperationsInput | number
        SPR_PRICE?: FloatFieldUpdateOperationsInput | number
        SPR_SUMMA?: FloatFieldUpdateOperationsInput | number
        SPR_ART_ID?: IntFieldUpdateOperationsInput | number
        SPR_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        SPR_ADDR?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_ID?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE2?: StringFieldUpdateOperationsInput | string
        SPR_ADDR_ENC?: StringFieldUpdateOperationsInput | string
    }

    export type GA_SUP_50014_SELLOUTCreateInput = {
        SPR_SPH_ID: number
        SPR_INN: string
        SPR_CLIENT: string
        SPR_GROUPTYPE: string
        SPR_ARTICLE: string
        SPR_BRAND: string
        SPR_INFO: string
        SPR_QTY?: number
        SPR_PRICE?: number
        SPR_SUMMA?: number
        SPR_ART_ID: number
        SPR_DATETIME: Date | string
        SPR_ADDR: string
        SPR_CLIENT_CODE: string
        SPR_CLIENT_ID: string
        SPR_CLIENT_CODE2: string
        SPR_ADDR_ENC: string
    }

    export type GA_SUP_50014_SELLOUTUncheckedCreateInput = {
        SPR_SPH_ID: number
        SPR_INN: string
        SPR_CLIENT: string
        SPR_GROUPTYPE: string
        SPR_ARTICLE: string
        SPR_BRAND: string
        SPR_INFO: string
        SPR_QTY?: number
        SPR_PRICE?: number
        SPR_SUMMA?: number
        SPR_ART_ID: number
        SPR_DATETIME: Date | string
        SPR_ADDR: string
        SPR_CLIENT_CODE: string
        SPR_CLIENT_ID: string
        SPR_CLIENT_CODE2: string
        SPR_ADDR_ENC: string
    }

    export type GA_SUP_50014_SELLOUTUpdateInput = {
        SPR_SPH_ID?: IntFieldUpdateOperationsInput | number
        SPR_INN?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT?: StringFieldUpdateOperationsInput | string
        SPR_GROUPTYPE?: StringFieldUpdateOperationsInput | string
        SPR_ARTICLE?: StringFieldUpdateOperationsInput | string
        SPR_BRAND?: StringFieldUpdateOperationsInput | string
        SPR_INFO?: StringFieldUpdateOperationsInput | string
        SPR_QTY?: FloatFieldUpdateOperationsInput | number
        SPR_PRICE?: FloatFieldUpdateOperationsInput | number
        SPR_SUMMA?: FloatFieldUpdateOperationsInput | number
        SPR_ART_ID?: IntFieldUpdateOperationsInput | number
        SPR_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        SPR_ADDR?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_ID?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE2?: StringFieldUpdateOperationsInput | string
        SPR_ADDR_ENC?: StringFieldUpdateOperationsInput | string
    }

    export type GA_SUP_50014_SELLOUTUncheckedUpdateInput = {
        SPR_SPH_ID?: IntFieldUpdateOperationsInput | number
        SPR_INN?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT?: StringFieldUpdateOperationsInput | string
        SPR_GROUPTYPE?: StringFieldUpdateOperationsInput | string
        SPR_ARTICLE?: StringFieldUpdateOperationsInput | string
        SPR_BRAND?: StringFieldUpdateOperationsInput | string
        SPR_INFO?: StringFieldUpdateOperationsInput | string
        SPR_QTY?: FloatFieldUpdateOperationsInput | number
        SPR_PRICE?: FloatFieldUpdateOperationsInput | number
        SPR_SUMMA?: FloatFieldUpdateOperationsInput | number
        SPR_ART_ID?: IntFieldUpdateOperationsInput | number
        SPR_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        SPR_ADDR?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_ID?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE2?: StringFieldUpdateOperationsInput | string
        SPR_ADDR_ENC?: StringFieldUpdateOperationsInput | string
    }

    export type GA_SUP_50014_SELLOUTCreateManyInput = {
        SPR_SPH_ID: number
        SPR_INN: string
        SPR_CLIENT: string
        SPR_GROUPTYPE: string
        SPR_ARTICLE: string
        SPR_BRAND: string
        SPR_INFO: string
        SPR_QTY?: number
        SPR_PRICE?: number
        SPR_SUMMA?: number
        SPR_ART_ID: number
        SPR_DATETIME: Date | string
        SPR_ADDR: string
        SPR_CLIENT_CODE: string
        SPR_CLIENT_ID: string
        SPR_CLIENT_CODE2: string
        SPR_ADDR_ENC: string
    }

    export type GA_SUP_50014_SELLOUTUpdateManyMutationInput = {
        SPR_SPH_ID?: IntFieldUpdateOperationsInput | number
        SPR_INN?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT?: StringFieldUpdateOperationsInput | string
        SPR_GROUPTYPE?: StringFieldUpdateOperationsInput | string
        SPR_ARTICLE?: StringFieldUpdateOperationsInput | string
        SPR_BRAND?: StringFieldUpdateOperationsInput | string
        SPR_INFO?: StringFieldUpdateOperationsInput | string
        SPR_QTY?: FloatFieldUpdateOperationsInput | number
        SPR_PRICE?: FloatFieldUpdateOperationsInput | number
        SPR_SUMMA?: FloatFieldUpdateOperationsInput | number
        SPR_ART_ID?: IntFieldUpdateOperationsInput | number
        SPR_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        SPR_ADDR?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_ID?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE2?: StringFieldUpdateOperationsInput | string
        SPR_ADDR_ENC?: StringFieldUpdateOperationsInput | string
    }

    export type GA_SUP_50014_SELLOUTUncheckedUpdateManyInput = {
        SPR_SPH_ID?: IntFieldUpdateOperationsInput | number
        SPR_INN?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT?: StringFieldUpdateOperationsInput | string
        SPR_GROUPTYPE?: StringFieldUpdateOperationsInput | string
        SPR_ARTICLE?: StringFieldUpdateOperationsInput | string
        SPR_BRAND?: StringFieldUpdateOperationsInput | string
        SPR_INFO?: StringFieldUpdateOperationsInput | string
        SPR_QTY?: FloatFieldUpdateOperationsInput | number
        SPR_PRICE?: FloatFieldUpdateOperationsInput | number
        SPR_SUMMA?: FloatFieldUpdateOperationsInput | number
        SPR_ART_ID?: IntFieldUpdateOperationsInput | number
        SPR_DATETIME?: DateTimeFieldUpdateOperationsInput | Date | string
        SPR_ADDR?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_ID?: StringFieldUpdateOperationsInput | string
        SPR_CLIENT_CODE2?: StringFieldUpdateOperationsInput | string
        SPR_ADDR_ENC?: StringFieldUpdateOperationsInput | string
    }

    export type BigIntFilter<$PrismaModel = never> = {
        equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
        notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
        lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        not?: NestedBigIntFilter<$PrismaModel> | bigint | number
    }

    export type StringFilter<$PrismaModel = never> = {
        equals?: string | StringFieldRefInput<$PrismaModel>
        in?: string[] | ListStringFieldRefInput<$PrismaModel>
        notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
        lt?: string | StringFieldRefInput<$PrismaModel>
        lte?: string | StringFieldRefInput<$PrismaModel>
        gt?: string | StringFieldRefInput<$PrismaModel>
        gte?: string | StringFieldRefInput<$PrismaModel>
        contains?: string | StringFieldRefInput<$PrismaModel>
        startsWith?: string | StringFieldRefInput<$PrismaModel>
        endsWith?: string | StringFieldRefInput<$PrismaModel>
        mode?: QueryMode
        not?: NestedStringFilter<$PrismaModel> | string
    }

    export type GA_ANKETA_ADDRCountOrderByAggregateInput = {
        AAD_ABA_ID?: SortOrder
        AAD_SHIROTA?: SortOrder
        AAD_DOLGOTA?: SortOrder
        AAD_OBLAST?: SortOrder
        AAD_GOROD?: SortOrder
        AAD_ADDR?: SortOrder
    }

    export type GA_ANKETA_ADDRAvgOrderByAggregateInput = {
        AAD_ABA_ID?: SortOrder
    }

    export type GA_ANKETA_ADDRMaxOrderByAggregateInput = {
        AAD_ABA_ID?: SortOrder
        AAD_SHIROTA?: SortOrder
        AAD_DOLGOTA?: SortOrder
        AAD_OBLAST?: SortOrder
        AAD_GOROD?: SortOrder
        AAD_ADDR?: SortOrder
    }

    export type GA_ANKETA_ADDRMinOrderByAggregateInput = {
        AAD_ABA_ID?: SortOrder
        AAD_SHIROTA?: SortOrder
        AAD_DOLGOTA?: SortOrder
        AAD_OBLAST?: SortOrder
        AAD_GOROD?: SortOrder
        AAD_ADDR?: SortOrder
    }

    export type GA_ANKETA_ADDRSumOrderByAggregateInput = {
        AAD_ABA_ID?: SortOrder
    }

    export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
        equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
        notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
        lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
        _count?: NestedIntFilter<$PrismaModel>
        _avg?: NestedFloatFilter<$PrismaModel>
        _sum?: NestedBigIntFilter<$PrismaModel>
        _min?: NestedBigIntFilter<$PrismaModel>
        _max?: NestedBigIntFilter<$PrismaModel>
    }

    export type StringWithAggregatesFilter<$PrismaModel = never> = {
        equals?: string | StringFieldRefInput<$PrismaModel>
        in?: string[] | ListStringFieldRefInput<$PrismaModel>
        notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
        lt?: string | StringFieldRefInput<$PrismaModel>
        lte?: string | StringFieldRefInput<$PrismaModel>
        gt?: string | StringFieldRefInput<$PrismaModel>
        gte?: string | StringFieldRefInput<$PrismaModel>
        contains?: string | StringFieldRefInput<$PrismaModel>
        startsWith?: string | StringFieldRefInput<$PrismaModel>
        endsWith?: string | StringFieldRefInput<$PrismaModel>
        mode?: QueryMode
        not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
        _count?: NestedIntFilter<$PrismaModel>
        _min?: NestedStringFilter<$PrismaModel>
        _max?: NestedStringFilter<$PrismaModel>
    }

    export type IntFilter<$PrismaModel = never> = {
        equals?: number | IntFieldRefInput<$PrismaModel>
        in?: number[] | ListIntFieldRefInput<$PrismaModel>
        notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
        lt?: number | IntFieldRefInput<$PrismaModel>
        lte?: number | IntFieldRefInput<$PrismaModel>
        gt?: number | IntFieldRefInput<$PrismaModel>
        gte?: number | IntFieldRefInput<$PrismaModel>
        not?: NestedIntFilter<$PrismaModel> | number
    }

    export type BoolFilter<$PrismaModel = never> = {
        equals?: boolean | BooleanFieldRefInput<$PrismaModel>
        not?: NestedBoolFilter<$PrismaModel> | boolean
    }

    export type DateTimeFilter<$PrismaModel = never> = {
        equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
        notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
        lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        not?: NestedDateTimeFilter<$PrismaModel> | Date | string
    }

    export type StringNullableFilter<$PrismaModel = never> = {
        equals?: string | StringFieldRefInput<$PrismaModel> | null
        in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
        notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
        lt?: string | StringFieldRefInput<$PrismaModel>
        lte?: string | StringFieldRefInput<$PrismaModel>
        gt?: string | StringFieldRefInput<$PrismaModel>
        gte?: string | StringFieldRefInput<$PrismaModel>
        contains?: string | StringFieldRefInput<$PrismaModel>
        startsWith?: string | StringFieldRefInput<$PrismaModel>
        endsWith?: string | StringFieldRefInput<$PrismaModel>
        mode?: QueryMode
        not?: NestedStringNullableFilter<$PrismaModel> | string | null
    }

    export type SortOrderInput = {
        sort: SortOrder
        nulls?: NullsOrder
    }

    export type GA_ANKETA_BASECountOrderByAggregateInput = {
        ABA_WSU_ID?: SortOrder
        ABA_STO_NAME?: SortOrder
        ABA_STO_ID1?: SortOrder
        ABA_REMZONA_QTY?: SortOrder
        ABA_ENABLED?: SortOrder
        ABA_PHONE?: SortOrder
        ABA_INN?: SortOrder
        ABA_DATETIME_CREATED?: SortOrder
        ABA_DATETIME_UPDATED?: SortOrder
        ABA_ID?: SortOrder
        ABA_DATETIME?: SortOrder
        ABA_STO_ID2?: SortOrder
        ABA_STO_NAME_FIND?: SortOrder
    }

    export type GA_ANKETA_BASEAvgOrderByAggregateInput = {
        ABA_WSU_ID?: SortOrder
        ABA_REMZONA_QTY?: SortOrder
        ABA_ID?: SortOrder
    }

    export type GA_ANKETA_BASEMaxOrderByAggregateInput = {
        ABA_WSU_ID?: SortOrder
        ABA_STO_NAME?: SortOrder
        ABA_STO_ID1?: SortOrder
        ABA_REMZONA_QTY?: SortOrder
        ABA_ENABLED?: SortOrder
        ABA_PHONE?: SortOrder
        ABA_INN?: SortOrder
        ABA_DATETIME_CREATED?: SortOrder
        ABA_DATETIME_UPDATED?: SortOrder
        ABA_ID?: SortOrder
        ABA_DATETIME?: SortOrder
        ABA_STO_ID2?: SortOrder
        ABA_STO_NAME_FIND?: SortOrder
    }

    export type GA_ANKETA_BASEMinOrderByAggregateInput = {
        ABA_WSU_ID?: SortOrder
        ABA_STO_NAME?: SortOrder
        ABA_STO_ID1?: SortOrder
        ABA_REMZONA_QTY?: SortOrder
        ABA_ENABLED?: SortOrder
        ABA_PHONE?: SortOrder
        ABA_INN?: SortOrder
        ABA_DATETIME_CREATED?: SortOrder
        ABA_DATETIME_UPDATED?: SortOrder
        ABA_ID?: SortOrder
        ABA_DATETIME?: SortOrder
        ABA_STO_ID2?: SortOrder
        ABA_STO_NAME_FIND?: SortOrder
    }

    export type GA_ANKETA_BASESumOrderByAggregateInput = {
        ABA_WSU_ID?: SortOrder
        ABA_REMZONA_QTY?: SortOrder
        ABA_ID?: SortOrder
    }

    export type IntWithAggregatesFilter<$PrismaModel = never> = {
        equals?: number | IntFieldRefInput<$PrismaModel>
        in?: number[] | ListIntFieldRefInput<$PrismaModel>
        notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
        lt?: number | IntFieldRefInput<$PrismaModel>
        lte?: number | IntFieldRefInput<$PrismaModel>
        gt?: number | IntFieldRefInput<$PrismaModel>
        gte?: number | IntFieldRefInput<$PrismaModel>
        not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
        _count?: NestedIntFilter<$PrismaModel>
        _avg?: NestedFloatFilter<$PrismaModel>
        _sum?: NestedIntFilter<$PrismaModel>
        _min?: NestedIntFilter<$PrismaModel>
        _max?: NestedIntFilter<$PrismaModel>
    }

    export type BoolWithAggregatesFilter<$PrismaModel = never> = {
        equals?: boolean | BooleanFieldRefInput<$PrismaModel>
        not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
        _count?: NestedIntFilter<$PrismaModel>
        _min?: NestedBoolFilter<$PrismaModel>
        _max?: NestedBoolFilter<$PrismaModel>
    }

    export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
        equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
        notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
        lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
        _count?: NestedIntFilter<$PrismaModel>
        _min?: NestedDateTimeFilter<$PrismaModel>
        _max?: NestedDateTimeFilter<$PrismaModel>
    }

    export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
        equals?: string | StringFieldRefInput<$PrismaModel> | null
        in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
        notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
        lt?: string | StringFieldRefInput<$PrismaModel>
        lte?: string | StringFieldRefInput<$PrismaModel>
        gt?: string | StringFieldRefInput<$PrismaModel>
        gte?: string | StringFieldRefInput<$PrismaModel>
        contains?: string | StringFieldRefInput<$PrismaModel>
        startsWith?: string | StringFieldRefInput<$PrismaModel>
        endsWith?: string | StringFieldRefInput<$PrismaModel>
        mode?: QueryMode
        not?:
            | NestedStringNullableWithAggregatesFilter<$PrismaModel>
            | string
            | null
        _count?: NestedIntNullableFilter<$PrismaModel>
        _min?: NestedStringNullableFilter<$PrismaModel>
        _max?: NestedStringNullableFilter<$PrismaModel>
    }

    export type GA_ANKETA_BILETSCountOrderByAggregateInput = {
        BIL_INN?: SortOrder
        BIL_LOGIN?: SortOrder
        BIL_N1?: SortOrder
        BIL_N2?: SortOrder
        BIL_N3?: SortOrder
        BIL_N4?: SortOrder
        BIL_N5?: SortOrder
        BIL_N6?: SortOrder
        BIL_N7?: SortOrder
        BIL_WSU_ID?: SortOrder
        BIL_N8?: SortOrder
        BIL_ABA_ID?: SortOrder
        BIL_DATETIME?: SortOrder
    }

    export type GA_ANKETA_BILETSAvgOrderByAggregateInput = {
        BIL_WSU_ID?: SortOrder
        BIL_ABA_ID?: SortOrder
    }

    export type GA_ANKETA_BILETSMaxOrderByAggregateInput = {
        BIL_INN?: SortOrder
        BIL_LOGIN?: SortOrder
        BIL_N1?: SortOrder
        BIL_N2?: SortOrder
        BIL_N3?: SortOrder
        BIL_N4?: SortOrder
        BIL_N5?: SortOrder
        BIL_N6?: SortOrder
        BIL_N7?: SortOrder
        BIL_WSU_ID?: SortOrder
        BIL_N8?: SortOrder
        BIL_ABA_ID?: SortOrder
        BIL_DATETIME?: SortOrder
    }

    export type GA_ANKETA_BILETSMinOrderByAggregateInput = {
        BIL_INN?: SortOrder
        BIL_LOGIN?: SortOrder
        BIL_N1?: SortOrder
        BIL_N2?: SortOrder
        BIL_N3?: SortOrder
        BIL_N4?: SortOrder
        BIL_N5?: SortOrder
        BIL_N6?: SortOrder
        BIL_N7?: SortOrder
        BIL_WSU_ID?: SortOrder
        BIL_N8?: SortOrder
        BIL_ABA_ID?: SortOrder
        BIL_DATETIME?: SortOrder
    }

    export type GA_ANKETA_BILETSSumOrderByAggregateInput = {
        BIL_WSU_ID?: SortOrder
        BIL_ABA_ID?: SortOrder
    }

    export type GA_ANKETA_BRAND_IMGCountOrderByAggregateInput = {
        ABI_ABA_ID?: SortOrder
        ABI_NUM?: SortOrder
        ABI_NAME?: SortOrder
        ABI_PATH?: SortOrder
    }

    export type GA_ANKETA_BRAND_IMGAvgOrderByAggregateInput = {
        ABI_ABA_ID?: SortOrder
        ABI_NUM?: SortOrder
    }

    export type GA_ANKETA_BRAND_IMGMaxOrderByAggregateInput = {
        ABI_ABA_ID?: SortOrder
        ABI_NUM?: SortOrder
        ABI_NAME?: SortOrder
        ABI_PATH?: SortOrder
    }

    export type GA_ANKETA_BRAND_IMGMinOrderByAggregateInput = {
        ABI_ABA_ID?: SortOrder
        ABI_NUM?: SortOrder
        ABI_NAME?: SortOrder
        ABI_PATH?: SortOrder
    }

    export type GA_ANKETA_BRAND_IMGSumOrderByAggregateInput = {
        ABI_ABA_ID?: SortOrder
        ABI_NUM?: SortOrder
    }

    export type GA_ANKETA_DIRCountOrderByAggregateInput = {
        AIR_ABA_ID?: SortOrder
        AIR_NAME1?: SortOrder
        AIR_NAME2?: SortOrder
        AIR_NAME3?: SortOrder
        AIR_PHONE?: SortOrder
        AIR_EMAIL?: SortOrder
    }

    export type GA_ANKETA_DIRAvgOrderByAggregateInput = {
        AIR_ABA_ID?: SortOrder
    }

    export type GA_ANKETA_DIRMaxOrderByAggregateInput = {
        AIR_ABA_ID?: SortOrder
        AIR_NAME1?: SortOrder
        AIR_NAME2?: SortOrder
        AIR_NAME3?: SortOrder
        AIR_PHONE?: SortOrder
        AIR_EMAIL?: SortOrder
    }

    export type GA_ANKETA_DIRMinOrderByAggregateInput = {
        AIR_ABA_ID?: SortOrder
        AIR_NAME1?: SortOrder
        AIR_NAME2?: SortOrder
        AIR_NAME3?: SortOrder
        AIR_PHONE?: SortOrder
        AIR_EMAIL?: SortOrder
    }

    export type GA_ANKETA_DIRSumOrderByAggregateInput = {
        AIR_ABA_ID?: SortOrder
    }

    export type GA_ANKETA_DOGOVORCountOrderByAggregateInput = {
        ADO_ABA_ID?: SortOrder
        ADO_NAME1?: SortOrder
        ADO_NAME2?: SortOrder
        ADO_NAME3?: SortOrder
        ADO_PHONE?: SortOrder
        ADO_EMAIL?: SortOrder
        ADO_DATETIME?: SortOrder
        ADO_STATUS?: SortOrder
    }

    export type GA_ANKETA_DOGOVORAvgOrderByAggregateInput = {
        ADO_ABA_ID?: SortOrder
    }

    export type GA_ANKETA_DOGOVORMaxOrderByAggregateInput = {
        ADO_ABA_ID?: SortOrder
        ADO_NAME1?: SortOrder
        ADO_NAME2?: SortOrder
        ADO_NAME3?: SortOrder
        ADO_PHONE?: SortOrder
        ADO_EMAIL?: SortOrder
        ADO_DATETIME?: SortOrder
        ADO_STATUS?: SortOrder
    }

    export type GA_ANKETA_DOGOVORMinOrderByAggregateInput = {
        ADO_ABA_ID?: SortOrder
        ADO_NAME1?: SortOrder
        ADO_NAME2?: SortOrder
        ADO_NAME3?: SortOrder
        ADO_PHONE?: SortOrder
        ADO_EMAIL?: SortOrder
        ADO_DATETIME?: SortOrder
        ADO_STATUS?: SortOrder
    }

    export type GA_ANKETA_DOGOVORSumOrderByAggregateInput = {
        ADO_ABA_ID?: SortOrder
    }

    export type FloatFilter<$PrismaModel = never> = {
        equals?: number | FloatFieldRefInput<$PrismaModel>
        in?: number[] | ListFloatFieldRefInput<$PrismaModel>
        notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
        lt?: number | FloatFieldRefInput<$PrismaModel>
        lte?: number | FloatFieldRefInput<$PrismaModel>
        gt?: number | FloatFieldRefInput<$PrismaModel>
        gte?: number | FloatFieldRefInput<$PrismaModel>
        not?: NestedFloatFilter<$PrismaModel> | number
    }

    export type FloatNullableFilter<$PrismaModel = never> = {
        equals?: number | FloatFieldRefInput<$PrismaModel> | null
        in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
        notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
        lt?: number | FloatFieldRefInput<$PrismaModel>
        lte?: number | FloatFieldRefInput<$PrismaModel>
        gt?: number | FloatFieldRefInput<$PrismaModel>
        gte?: number | FloatFieldRefInput<$PrismaModel>
        not?: NestedFloatNullableFilter<$PrismaModel> | number | null
    }

    export type IntNullableFilter<$PrismaModel = never> = {
        equals?: number | IntFieldRefInput<$PrismaModel> | null
        in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
        notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
        lt?: number | IntFieldRefInput<$PrismaModel>
        lte?: number | IntFieldRefInput<$PrismaModel>
        gt?: number | IntFieldRefInput<$PrismaModel>
        gte?: number | IntFieldRefInput<$PrismaModel>
        not?: NestedIntNullableFilter<$PrismaModel> | number | null
    }

    export type GA_ANKETA_OBOROTCountOrderByAggregateInput = {
        ABO_ABA_ID?: SortOrder
        ABO_DATETIME?: SortOrder
        ABO_OBOROT_ALL?: SortOrder
        ABO_OBOROT_BRANDS_MONTH?: SortOrder
        ABO_OBOROT_AE?: SortOrder
        ABO_OBOROT_ROSSKO?: SortOrder
        ABO_OBOROT_ARKONA?: SortOrder
        ABO_OBOROT_AUTORUS?: SortOrder
        ABO_SCORES_MONTH_PLAN?: SortOrder
        ABO_SCORES_MONTH_FAKT?: SortOrder
        ABO_COUNT_ROSSKO?: SortOrder
        ABO_COUNT_AE?: SortOrder
        ABO_COUNT_ARKONA?: SortOrder
        ABO_COUNT_AUTORUS?: SortOrder
        ABO_OBOROT_BRANDS?: SortOrder
        ABO_OBOROT_BRAND_LOOK1?: SortOrder
        ABO_SCORES?: SortOrder
        ABO_OBOROT_BRAND_LOOK2?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_AE?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_AE?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: SortOrder
        ABO_OBOROT_BRAND1?: SortOrder
        ABO_OBOROT_BRAND2?: SortOrder
        ABO_OBOROT_BRAND3?: SortOrder
        ABO_OBOROT_BRAND4?: SortOrder
        ABO_OBOROT_BRAND5?: SortOrder
        ABO_OBOROT_BRAND6?: SortOrder
        ABO_OBOROT_NEXT?: SortOrder
        ABO_SCORES_MONTH_PLAN_NEXT?: SortOrder
        ABO_ABA_REMZONA_QTY?: SortOrder
    }

    export type GA_ANKETA_OBOROTAvgOrderByAggregateInput = {
        ABO_ABA_ID?: SortOrder
        ABO_OBOROT_ALL?: SortOrder
        ABO_OBOROT_BRANDS_MONTH?: SortOrder
        ABO_OBOROT_AE?: SortOrder
        ABO_OBOROT_ROSSKO?: SortOrder
        ABO_OBOROT_ARKONA?: SortOrder
        ABO_OBOROT_AUTORUS?: SortOrder
        ABO_SCORES_MONTH_PLAN?: SortOrder
        ABO_SCORES_MONTH_FAKT?: SortOrder
        ABO_COUNT_ROSSKO?: SortOrder
        ABO_COUNT_AE?: SortOrder
        ABO_COUNT_ARKONA?: SortOrder
        ABO_COUNT_AUTORUS?: SortOrder
        ABO_OBOROT_BRANDS?: SortOrder
        ABO_OBOROT_BRAND_LOOK1?: SortOrder
        ABO_SCORES?: SortOrder
        ABO_OBOROT_BRAND_LOOK2?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_AE?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_AE?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: SortOrder
        ABO_OBOROT_BRAND1?: SortOrder
        ABO_OBOROT_BRAND2?: SortOrder
        ABO_OBOROT_BRAND3?: SortOrder
        ABO_OBOROT_BRAND4?: SortOrder
        ABO_OBOROT_BRAND5?: SortOrder
        ABO_OBOROT_BRAND6?: SortOrder
        ABO_OBOROT_NEXT?: SortOrder
        ABO_SCORES_MONTH_PLAN_NEXT?: SortOrder
        ABO_ABA_REMZONA_QTY?: SortOrder
    }

    export type GA_ANKETA_OBOROTMaxOrderByAggregateInput = {
        ABO_ABA_ID?: SortOrder
        ABO_DATETIME?: SortOrder
        ABO_OBOROT_ALL?: SortOrder
        ABO_OBOROT_BRANDS_MONTH?: SortOrder
        ABO_OBOROT_AE?: SortOrder
        ABO_OBOROT_ROSSKO?: SortOrder
        ABO_OBOROT_ARKONA?: SortOrder
        ABO_OBOROT_AUTORUS?: SortOrder
        ABO_SCORES_MONTH_PLAN?: SortOrder
        ABO_SCORES_MONTH_FAKT?: SortOrder
        ABO_COUNT_ROSSKO?: SortOrder
        ABO_COUNT_AE?: SortOrder
        ABO_COUNT_ARKONA?: SortOrder
        ABO_COUNT_AUTORUS?: SortOrder
        ABO_OBOROT_BRANDS?: SortOrder
        ABO_OBOROT_BRAND_LOOK1?: SortOrder
        ABO_SCORES?: SortOrder
        ABO_OBOROT_BRAND_LOOK2?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_AE?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_AE?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: SortOrder
        ABO_OBOROT_BRAND1?: SortOrder
        ABO_OBOROT_BRAND2?: SortOrder
        ABO_OBOROT_BRAND3?: SortOrder
        ABO_OBOROT_BRAND4?: SortOrder
        ABO_OBOROT_BRAND5?: SortOrder
        ABO_OBOROT_BRAND6?: SortOrder
        ABO_OBOROT_NEXT?: SortOrder
        ABO_SCORES_MONTH_PLAN_NEXT?: SortOrder
        ABO_ABA_REMZONA_QTY?: SortOrder
    }

    export type GA_ANKETA_OBOROTMinOrderByAggregateInput = {
        ABO_ABA_ID?: SortOrder
        ABO_DATETIME?: SortOrder
        ABO_OBOROT_ALL?: SortOrder
        ABO_OBOROT_BRANDS_MONTH?: SortOrder
        ABO_OBOROT_AE?: SortOrder
        ABO_OBOROT_ROSSKO?: SortOrder
        ABO_OBOROT_ARKONA?: SortOrder
        ABO_OBOROT_AUTORUS?: SortOrder
        ABO_SCORES_MONTH_PLAN?: SortOrder
        ABO_SCORES_MONTH_FAKT?: SortOrder
        ABO_COUNT_ROSSKO?: SortOrder
        ABO_COUNT_AE?: SortOrder
        ABO_COUNT_ARKONA?: SortOrder
        ABO_COUNT_AUTORUS?: SortOrder
        ABO_OBOROT_BRANDS?: SortOrder
        ABO_OBOROT_BRAND_LOOK1?: SortOrder
        ABO_SCORES?: SortOrder
        ABO_OBOROT_BRAND_LOOK2?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_AE?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_AE?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: SortOrder
        ABO_OBOROT_BRAND1?: SortOrder
        ABO_OBOROT_BRAND2?: SortOrder
        ABO_OBOROT_BRAND3?: SortOrder
        ABO_OBOROT_BRAND4?: SortOrder
        ABO_OBOROT_BRAND5?: SortOrder
        ABO_OBOROT_BRAND6?: SortOrder
        ABO_OBOROT_NEXT?: SortOrder
        ABO_SCORES_MONTH_PLAN_NEXT?: SortOrder
        ABO_ABA_REMZONA_QTY?: SortOrder
    }

    export type GA_ANKETA_OBOROTSumOrderByAggregateInput = {
        ABO_ABA_ID?: SortOrder
        ABO_OBOROT_ALL?: SortOrder
        ABO_OBOROT_BRANDS_MONTH?: SortOrder
        ABO_OBOROT_AE?: SortOrder
        ABO_OBOROT_ROSSKO?: SortOrder
        ABO_OBOROT_ARKONA?: SortOrder
        ABO_OBOROT_AUTORUS?: SortOrder
        ABO_SCORES_MONTH_PLAN?: SortOrder
        ABO_SCORES_MONTH_FAKT?: SortOrder
        ABO_COUNT_ROSSKO?: SortOrder
        ABO_COUNT_AE?: SortOrder
        ABO_COUNT_ARKONA?: SortOrder
        ABO_COUNT_AUTORUS?: SortOrder
        ABO_OBOROT_BRANDS?: SortOrder
        ABO_OBOROT_BRAND_LOOK1?: SortOrder
        ABO_SCORES?: SortOrder
        ABO_OBOROT_BRAND_LOOK2?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_ROSSKO?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_AE?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_ARKONA?: SortOrder
        ABO_OBOROT_BRAND_LOOK2_AUTORUS?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_ROSSKO?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_AE?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_ARKONA?: SortOrder
        ABO_OBOROT_BRANDS_MONTH_AUTORUS?: SortOrder
        ABO_OBOROT_BRAND1?: SortOrder
        ABO_OBOROT_BRAND2?: SortOrder
        ABO_OBOROT_BRAND3?: SortOrder
        ABO_OBOROT_BRAND4?: SortOrder
        ABO_OBOROT_BRAND5?: SortOrder
        ABO_OBOROT_BRAND6?: SortOrder
        ABO_OBOROT_NEXT?: SortOrder
        ABO_SCORES_MONTH_PLAN_NEXT?: SortOrder
        ABO_ABA_REMZONA_QTY?: SortOrder
    }

    export type FloatWithAggregatesFilter<$PrismaModel = never> = {
        equals?: number | FloatFieldRefInput<$PrismaModel>
        in?: number[] | ListFloatFieldRefInput<$PrismaModel>
        notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
        lt?: number | FloatFieldRefInput<$PrismaModel>
        lte?: number | FloatFieldRefInput<$PrismaModel>
        gt?: number | FloatFieldRefInput<$PrismaModel>
        gte?: number | FloatFieldRefInput<$PrismaModel>
        not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
        _count?: NestedIntFilter<$PrismaModel>
        _avg?: NestedFloatFilter<$PrismaModel>
        _sum?: NestedFloatFilter<$PrismaModel>
        _min?: NestedFloatFilter<$PrismaModel>
        _max?: NestedFloatFilter<$PrismaModel>
    }

    export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
        equals?: number | FloatFieldRefInput<$PrismaModel> | null
        in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
        notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
        lt?: number | FloatFieldRefInput<$PrismaModel>
        lte?: number | FloatFieldRefInput<$PrismaModel>
        gt?: number | FloatFieldRefInput<$PrismaModel>
        gte?: number | FloatFieldRefInput<$PrismaModel>
        not?:
            | NestedFloatNullableWithAggregatesFilter<$PrismaModel>
            | number
            | null
        _count?: NestedIntNullableFilter<$PrismaModel>
        _avg?: NestedFloatNullableFilter<$PrismaModel>
        _sum?: NestedFloatNullableFilter<$PrismaModel>
        _min?: NestedFloatNullableFilter<$PrismaModel>
        _max?: NestedFloatNullableFilter<$PrismaModel>
    }

    export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
        equals?: number | IntFieldRefInput<$PrismaModel> | null
        in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
        notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
        lt?: number | IntFieldRefInput<$PrismaModel>
        lte?: number | IntFieldRefInput<$PrismaModel>
        gt?: number | IntFieldRefInput<$PrismaModel>
        gte?: number | IntFieldRefInput<$PrismaModel>
        not?:
            | NestedIntNullableWithAggregatesFilter<$PrismaModel>
            | number
            | null
        _count?: NestedIntNullableFilter<$PrismaModel>
        _avg?: NestedFloatNullableFilter<$PrismaModel>
        _sum?: NestedIntNullableFilter<$PrismaModel>
        _min?: NestedIntNullableFilter<$PrismaModel>
        _max?: NestedIntNullableFilter<$PrismaModel>
    }

    export type GA_ANKETA_OBOROT_BRANDSCountOrderByAggregateInput = {
        AOB_ABA_ID?: SortOrder
        AOB_DATETIME?: SortOrder
        AOB_ALL_24189?: SortOrder
        AOB_50011_24189?: SortOrder
        AOB_50012_24189?: SortOrder
        AOB_50013_24189?: SortOrder
        AOB_50014_24189?: SortOrder
        AOB_ALL_10566?: SortOrder
        AOB_50011_10566?: SortOrder
        AOB_50012_10566?: SortOrder
        AOB_50013_10566?: SortOrder
        AOB_50014_10566?: SortOrder
        AOB_ALL_20079?: SortOrder
        AOB_50011_20079?: SortOrder
        AOB_50012_20079?: SortOrder
        AOB_50013_20079?: SortOrder
        AOB_50014_20079?: SortOrder
        AOB_ALL_7251?: SortOrder
        AOB_50011_7251?: SortOrder
        AOB_50012_7251?: SortOrder
        AOB_50013_7251?: SortOrder
        AOB_50014_7251?: SortOrder
        AOB_ALL_24191?: SortOrder
        AOB_50011_24191?: SortOrder
        AOB_50012_24191?: SortOrder
        AOB_50013_24191?: SortOrder
        AOB_50014_24191?: SortOrder
        AOB_ALL_193?: SortOrder
        AOB_50011_193?: SortOrder
        AOB_50012_193?: SortOrder
        AOB_50013_193?: SortOrder
        AOB_50014_193?: SortOrder
        AOB_ALL_7610?: SortOrder
        AOB_50011_7610?: SortOrder
        AOB_50012_7610?: SortOrder
        AOB_50013_7610?: SortOrder
        AOB_50014_7610?: SortOrder
        AOB_ALL_10180?: SortOrder
        AOB_50011_10180?: SortOrder
        AOB_50012_10180?: SortOrder
        AOB_50013_10180?: SortOrder
        AOB_50014_10180?: SortOrder
        AOB_ALL_177?: SortOrder
        AOB_50011_177?: SortOrder
        AOB_50012_177?: SortOrder
        AOB_50013_177?: SortOrder
        AOB_50014_177?: SortOrder
        AOB_ALL_10223?: SortOrder
        AOB_50011_10223?: SortOrder
        AOB_50012_10223?: SortOrder
        AOB_50013_10223?: SortOrder
        AOB_50014_10223?: SortOrder
        AOB_ALL_7230?: SortOrder
        AOB_50011_7230?: SortOrder
        AOB_50012_7230?: SortOrder
        AOB_50013_7230?: SortOrder
        AOB_50014_7230?: SortOrder
        AOB_ALL_1359?: SortOrder
        AOB_50011_1359?: SortOrder
        AOB_50012_1359?: SortOrder
        AOB_50013_1359?: SortOrder
        AOB_50014_1359?: SortOrder
        AOB_ALL_110?: SortOrder
        AOB_50011_110?: SortOrder
        AOB_50012_110?: SortOrder
        AOB_50013_110?: SortOrder
        AOB_50014_110?: SortOrder
        AOB_ALL_20182?: SortOrder
        AOB_50011_20182?: SortOrder
        AOB_50012_20182?: SortOrder
        AOB_50013_20182?: SortOrder
        AOB_50014_20182?: SortOrder
        AOB_ALL_20203?: SortOrder
        AOB_50011_20203?: SortOrder
        AOB_50012_20203?: SortOrder
        AOB_50013_20203?: SortOrder
        AOB_50014_20203?: SortOrder
        AOB_ALL_24155?: SortOrder
        AOB_50011_24155?: SortOrder
        AOB_50012_24155?: SortOrder
        AOB_50013_24155?: SortOrder
        AOB_50014_24155?: SortOrder
        AOB_ALL_24198?: SortOrder
        AOB_50011_24198?: SortOrder
        AOB_50012_24198?: SortOrder
        AOB_50013_24198?: SortOrder
        AOB_50014_24198?: SortOrder
        AOB_ALL_135?: SortOrder
        AOB_50011_135?: SortOrder
        AOB_50012_135?: SortOrder
        AOB_50013_135?: SortOrder
        AOB_50014_135?: SortOrder
        AOB_ALL_24196?: SortOrder
        AOB_50011_24196?: SortOrder
        AOB_50012_24196?: SortOrder
        AOB_50013_24196?: SortOrder
        AOB_50014_24196?: SortOrder
        AOB_ALL_24197?: SortOrder
        AOB_50011_24197?: SortOrder
        AOB_50012_24197?: SortOrder
        AOB_50013_24197?: SortOrder
        AOB_50014_24197?: SortOrder
        AOB_ALL_21?: SortOrder
        AOB_50011_21?: SortOrder
        AOB_50012_21?: SortOrder
        AOB_50013_21?: SortOrder
        AOB_50014_21?: SortOrder
    }

    export type GA_ANKETA_OBOROT_BRANDSAvgOrderByAggregateInput = {
        AOB_ABA_ID?: SortOrder
        AOB_ALL_24189?: SortOrder
        AOB_50011_24189?: SortOrder
        AOB_50012_24189?: SortOrder
        AOB_50013_24189?: SortOrder
        AOB_50014_24189?: SortOrder
        AOB_ALL_10566?: SortOrder
        AOB_50011_10566?: SortOrder
        AOB_50012_10566?: SortOrder
        AOB_50013_10566?: SortOrder
        AOB_50014_10566?: SortOrder
        AOB_ALL_20079?: SortOrder
        AOB_50011_20079?: SortOrder
        AOB_50012_20079?: SortOrder
        AOB_50013_20079?: SortOrder
        AOB_50014_20079?: SortOrder
        AOB_ALL_7251?: SortOrder
        AOB_50011_7251?: SortOrder
        AOB_50012_7251?: SortOrder
        AOB_50013_7251?: SortOrder
        AOB_50014_7251?: SortOrder
        AOB_ALL_24191?: SortOrder
        AOB_50011_24191?: SortOrder
        AOB_50012_24191?: SortOrder
        AOB_50013_24191?: SortOrder
        AOB_50014_24191?: SortOrder
        AOB_ALL_193?: SortOrder
        AOB_50011_193?: SortOrder
        AOB_50012_193?: SortOrder
        AOB_50013_193?: SortOrder
        AOB_50014_193?: SortOrder
        AOB_ALL_7610?: SortOrder
        AOB_50011_7610?: SortOrder
        AOB_50012_7610?: SortOrder
        AOB_50013_7610?: SortOrder
        AOB_50014_7610?: SortOrder
        AOB_ALL_10180?: SortOrder
        AOB_50011_10180?: SortOrder
        AOB_50012_10180?: SortOrder
        AOB_50013_10180?: SortOrder
        AOB_50014_10180?: SortOrder
        AOB_ALL_177?: SortOrder
        AOB_50011_177?: SortOrder
        AOB_50012_177?: SortOrder
        AOB_50013_177?: SortOrder
        AOB_50014_177?: SortOrder
        AOB_ALL_10223?: SortOrder
        AOB_50011_10223?: SortOrder
        AOB_50012_10223?: SortOrder
        AOB_50013_10223?: SortOrder
        AOB_50014_10223?: SortOrder
        AOB_ALL_7230?: SortOrder
        AOB_50011_7230?: SortOrder
        AOB_50012_7230?: SortOrder
        AOB_50013_7230?: SortOrder
        AOB_50014_7230?: SortOrder
        AOB_ALL_1359?: SortOrder
        AOB_50011_1359?: SortOrder
        AOB_50012_1359?: SortOrder
        AOB_50013_1359?: SortOrder
        AOB_50014_1359?: SortOrder
        AOB_ALL_110?: SortOrder
        AOB_50011_110?: SortOrder
        AOB_50012_110?: SortOrder
        AOB_50013_110?: SortOrder
        AOB_50014_110?: SortOrder
        AOB_ALL_20182?: SortOrder
        AOB_50011_20182?: SortOrder
        AOB_50012_20182?: SortOrder
        AOB_50013_20182?: SortOrder
        AOB_50014_20182?: SortOrder
        AOB_ALL_20203?: SortOrder
        AOB_50011_20203?: SortOrder
        AOB_50012_20203?: SortOrder
        AOB_50013_20203?: SortOrder
        AOB_50014_20203?: SortOrder
        AOB_ALL_24155?: SortOrder
        AOB_50011_24155?: SortOrder
        AOB_50012_24155?: SortOrder
        AOB_50013_24155?: SortOrder
        AOB_50014_24155?: SortOrder
        AOB_ALL_24198?: SortOrder
        AOB_50011_24198?: SortOrder
        AOB_50012_24198?: SortOrder
        AOB_50013_24198?: SortOrder
        AOB_50014_24198?: SortOrder
        AOB_ALL_135?: SortOrder
        AOB_50011_135?: SortOrder
        AOB_50012_135?: SortOrder
        AOB_50013_135?: SortOrder
        AOB_50014_135?: SortOrder
        AOB_ALL_24196?: SortOrder
        AOB_50011_24196?: SortOrder
        AOB_50012_24196?: SortOrder
        AOB_50013_24196?: SortOrder
        AOB_50014_24196?: SortOrder
        AOB_ALL_24197?: SortOrder
        AOB_50011_24197?: SortOrder
        AOB_50012_24197?: SortOrder
        AOB_50013_24197?: SortOrder
        AOB_50014_24197?: SortOrder
        AOB_ALL_21?: SortOrder
        AOB_50011_21?: SortOrder
        AOB_50012_21?: SortOrder
        AOB_50013_21?: SortOrder
        AOB_50014_21?: SortOrder
    }

    export type GA_ANKETA_OBOROT_BRANDSMaxOrderByAggregateInput = {
        AOB_ABA_ID?: SortOrder
        AOB_DATETIME?: SortOrder
        AOB_ALL_24189?: SortOrder
        AOB_50011_24189?: SortOrder
        AOB_50012_24189?: SortOrder
        AOB_50013_24189?: SortOrder
        AOB_50014_24189?: SortOrder
        AOB_ALL_10566?: SortOrder
        AOB_50011_10566?: SortOrder
        AOB_50012_10566?: SortOrder
        AOB_50013_10566?: SortOrder
        AOB_50014_10566?: SortOrder
        AOB_ALL_20079?: SortOrder
        AOB_50011_20079?: SortOrder
        AOB_50012_20079?: SortOrder
        AOB_50013_20079?: SortOrder
        AOB_50014_20079?: SortOrder
        AOB_ALL_7251?: SortOrder
        AOB_50011_7251?: SortOrder
        AOB_50012_7251?: SortOrder
        AOB_50013_7251?: SortOrder
        AOB_50014_7251?: SortOrder
        AOB_ALL_24191?: SortOrder
        AOB_50011_24191?: SortOrder
        AOB_50012_24191?: SortOrder
        AOB_50013_24191?: SortOrder
        AOB_50014_24191?: SortOrder
        AOB_ALL_193?: SortOrder
        AOB_50011_193?: SortOrder
        AOB_50012_193?: SortOrder
        AOB_50013_193?: SortOrder
        AOB_50014_193?: SortOrder
        AOB_ALL_7610?: SortOrder
        AOB_50011_7610?: SortOrder
        AOB_50012_7610?: SortOrder
        AOB_50013_7610?: SortOrder
        AOB_50014_7610?: SortOrder
        AOB_ALL_10180?: SortOrder
        AOB_50011_10180?: SortOrder
        AOB_50012_10180?: SortOrder
        AOB_50013_10180?: SortOrder
        AOB_50014_10180?: SortOrder
        AOB_ALL_177?: SortOrder
        AOB_50011_177?: SortOrder
        AOB_50012_177?: SortOrder
        AOB_50013_177?: SortOrder
        AOB_50014_177?: SortOrder
        AOB_ALL_10223?: SortOrder
        AOB_50011_10223?: SortOrder
        AOB_50012_10223?: SortOrder
        AOB_50013_10223?: SortOrder
        AOB_50014_10223?: SortOrder
        AOB_ALL_7230?: SortOrder
        AOB_50011_7230?: SortOrder
        AOB_50012_7230?: SortOrder
        AOB_50013_7230?: SortOrder
        AOB_50014_7230?: SortOrder
        AOB_ALL_1359?: SortOrder
        AOB_50011_1359?: SortOrder
        AOB_50012_1359?: SortOrder
        AOB_50013_1359?: SortOrder
        AOB_50014_1359?: SortOrder
        AOB_ALL_110?: SortOrder
        AOB_50011_110?: SortOrder
        AOB_50012_110?: SortOrder
        AOB_50013_110?: SortOrder
        AOB_50014_110?: SortOrder
        AOB_ALL_20182?: SortOrder
        AOB_50011_20182?: SortOrder
        AOB_50012_20182?: SortOrder
        AOB_50013_20182?: SortOrder
        AOB_50014_20182?: SortOrder
        AOB_ALL_20203?: SortOrder
        AOB_50011_20203?: SortOrder
        AOB_50012_20203?: SortOrder
        AOB_50013_20203?: SortOrder
        AOB_50014_20203?: SortOrder
        AOB_ALL_24155?: SortOrder
        AOB_50011_24155?: SortOrder
        AOB_50012_24155?: SortOrder
        AOB_50013_24155?: SortOrder
        AOB_50014_24155?: SortOrder
        AOB_ALL_24198?: SortOrder
        AOB_50011_24198?: SortOrder
        AOB_50012_24198?: SortOrder
        AOB_50013_24198?: SortOrder
        AOB_50014_24198?: SortOrder
        AOB_ALL_135?: SortOrder
        AOB_50011_135?: SortOrder
        AOB_50012_135?: SortOrder
        AOB_50013_135?: SortOrder
        AOB_50014_135?: SortOrder
        AOB_ALL_24196?: SortOrder
        AOB_50011_24196?: SortOrder
        AOB_50012_24196?: SortOrder
        AOB_50013_24196?: SortOrder
        AOB_50014_24196?: SortOrder
        AOB_ALL_24197?: SortOrder
        AOB_50011_24197?: SortOrder
        AOB_50012_24197?: SortOrder
        AOB_50013_24197?: SortOrder
        AOB_50014_24197?: SortOrder
        AOB_ALL_21?: SortOrder
        AOB_50011_21?: SortOrder
        AOB_50012_21?: SortOrder
        AOB_50013_21?: SortOrder
        AOB_50014_21?: SortOrder
    }

    export type GA_ANKETA_OBOROT_BRANDSMinOrderByAggregateInput = {
        AOB_ABA_ID?: SortOrder
        AOB_DATETIME?: SortOrder
        AOB_ALL_24189?: SortOrder
        AOB_50011_24189?: SortOrder
        AOB_50012_24189?: SortOrder
        AOB_50013_24189?: SortOrder
        AOB_50014_24189?: SortOrder
        AOB_ALL_10566?: SortOrder
        AOB_50011_10566?: SortOrder
        AOB_50012_10566?: SortOrder
        AOB_50013_10566?: SortOrder
        AOB_50014_10566?: SortOrder
        AOB_ALL_20079?: SortOrder
        AOB_50011_20079?: SortOrder
        AOB_50012_20079?: SortOrder
        AOB_50013_20079?: SortOrder
        AOB_50014_20079?: SortOrder
        AOB_ALL_7251?: SortOrder
        AOB_50011_7251?: SortOrder
        AOB_50012_7251?: SortOrder
        AOB_50013_7251?: SortOrder
        AOB_50014_7251?: SortOrder
        AOB_ALL_24191?: SortOrder
        AOB_50011_24191?: SortOrder
        AOB_50012_24191?: SortOrder
        AOB_50013_24191?: SortOrder
        AOB_50014_24191?: SortOrder
        AOB_ALL_193?: SortOrder
        AOB_50011_193?: SortOrder
        AOB_50012_193?: SortOrder
        AOB_50013_193?: SortOrder
        AOB_50014_193?: SortOrder
        AOB_ALL_7610?: SortOrder
        AOB_50011_7610?: SortOrder
        AOB_50012_7610?: SortOrder
        AOB_50013_7610?: SortOrder
        AOB_50014_7610?: SortOrder
        AOB_ALL_10180?: SortOrder
        AOB_50011_10180?: SortOrder
        AOB_50012_10180?: SortOrder
        AOB_50013_10180?: SortOrder
        AOB_50014_10180?: SortOrder
        AOB_ALL_177?: SortOrder
        AOB_50011_177?: SortOrder
        AOB_50012_177?: SortOrder
        AOB_50013_177?: SortOrder
        AOB_50014_177?: SortOrder
        AOB_ALL_10223?: SortOrder
        AOB_50011_10223?: SortOrder
        AOB_50012_10223?: SortOrder
        AOB_50013_10223?: SortOrder
        AOB_50014_10223?: SortOrder
        AOB_ALL_7230?: SortOrder
        AOB_50011_7230?: SortOrder
        AOB_50012_7230?: SortOrder
        AOB_50013_7230?: SortOrder
        AOB_50014_7230?: SortOrder
        AOB_ALL_1359?: SortOrder
        AOB_50011_1359?: SortOrder
        AOB_50012_1359?: SortOrder
        AOB_50013_1359?: SortOrder
        AOB_50014_1359?: SortOrder
        AOB_ALL_110?: SortOrder
        AOB_50011_110?: SortOrder
        AOB_50012_110?: SortOrder
        AOB_50013_110?: SortOrder
        AOB_50014_110?: SortOrder
        AOB_ALL_20182?: SortOrder
        AOB_50011_20182?: SortOrder
        AOB_50012_20182?: SortOrder
        AOB_50013_20182?: SortOrder
        AOB_50014_20182?: SortOrder
        AOB_ALL_20203?: SortOrder
        AOB_50011_20203?: SortOrder
        AOB_50012_20203?: SortOrder
        AOB_50013_20203?: SortOrder
        AOB_50014_20203?: SortOrder
        AOB_ALL_24155?: SortOrder
        AOB_50011_24155?: SortOrder
        AOB_50012_24155?: SortOrder
        AOB_50013_24155?: SortOrder
        AOB_50014_24155?: SortOrder
        AOB_ALL_24198?: SortOrder
        AOB_50011_24198?: SortOrder
        AOB_50012_24198?: SortOrder
        AOB_50013_24198?: SortOrder
        AOB_50014_24198?: SortOrder
        AOB_ALL_135?: SortOrder
        AOB_50011_135?: SortOrder
        AOB_50012_135?: SortOrder
        AOB_50013_135?: SortOrder
        AOB_50014_135?: SortOrder
        AOB_ALL_24196?: SortOrder
        AOB_50011_24196?: SortOrder
        AOB_50012_24196?: SortOrder
        AOB_50013_24196?: SortOrder
        AOB_50014_24196?: SortOrder
        AOB_ALL_24197?: SortOrder
        AOB_50011_24197?: SortOrder
        AOB_50012_24197?: SortOrder
        AOB_50013_24197?: SortOrder
        AOB_50014_24197?: SortOrder
        AOB_ALL_21?: SortOrder
        AOB_50011_21?: SortOrder
        AOB_50012_21?: SortOrder
        AOB_50013_21?: SortOrder
        AOB_50014_21?: SortOrder
    }

    export type GA_ANKETA_OBOROT_BRANDSSumOrderByAggregateInput = {
        AOB_ABA_ID?: SortOrder
        AOB_ALL_24189?: SortOrder
        AOB_50011_24189?: SortOrder
        AOB_50012_24189?: SortOrder
        AOB_50013_24189?: SortOrder
        AOB_50014_24189?: SortOrder
        AOB_ALL_10566?: SortOrder
        AOB_50011_10566?: SortOrder
        AOB_50012_10566?: SortOrder
        AOB_50013_10566?: SortOrder
        AOB_50014_10566?: SortOrder
        AOB_ALL_20079?: SortOrder
        AOB_50011_20079?: SortOrder
        AOB_50012_20079?: SortOrder
        AOB_50013_20079?: SortOrder
        AOB_50014_20079?: SortOrder
        AOB_ALL_7251?: SortOrder
        AOB_50011_7251?: SortOrder
        AOB_50012_7251?: SortOrder
        AOB_50013_7251?: SortOrder
        AOB_50014_7251?: SortOrder
        AOB_ALL_24191?: SortOrder
        AOB_50011_24191?: SortOrder
        AOB_50012_24191?: SortOrder
        AOB_50013_24191?: SortOrder
        AOB_50014_24191?: SortOrder
        AOB_ALL_193?: SortOrder
        AOB_50011_193?: SortOrder
        AOB_50012_193?: SortOrder
        AOB_50013_193?: SortOrder
        AOB_50014_193?: SortOrder
        AOB_ALL_7610?: SortOrder
        AOB_50011_7610?: SortOrder
        AOB_50012_7610?: SortOrder
        AOB_50013_7610?: SortOrder
        AOB_50014_7610?: SortOrder
        AOB_ALL_10180?: SortOrder
        AOB_50011_10180?: SortOrder
        AOB_50012_10180?: SortOrder
        AOB_50013_10180?: SortOrder
        AOB_50014_10180?: SortOrder
        AOB_ALL_177?: SortOrder
        AOB_50011_177?: SortOrder
        AOB_50012_177?: SortOrder
        AOB_50013_177?: SortOrder
        AOB_50014_177?: SortOrder
        AOB_ALL_10223?: SortOrder
        AOB_50011_10223?: SortOrder
        AOB_50012_10223?: SortOrder
        AOB_50013_10223?: SortOrder
        AOB_50014_10223?: SortOrder
        AOB_ALL_7230?: SortOrder
        AOB_50011_7230?: SortOrder
        AOB_50012_7230?: SortOrder
        AOB_50013_7230?: SortOrder
        AOB_50014_7230?: SortOrder
        AOB_ALL_1359?: SortOrder
        AOB_50011_1359?: SortOrder
        AOB_50012_1359?: SortOrder
        AOB_50013_1359?: SortOrder
        AOB_50014_1359?: SortOrder
        AOB_ALL_110?: SortOrder
        AOB_50011_110?: SortOrder
        AOB_50012_110?: SortOrder
        AOB_50013_110?: SortOrder
        AOB_50014_110?: SortOrder
        AOB_ALL_20182?: SortOrder
        AOB_50011_20182?: SortOrder
        AOB_50012_20182?: SortOrder
        AOB_50013_20182?: SortOrder
        AOB_50014_20182?: SortOrder
        AOB_ALL_20203?: SortOrder
        AOB_50011_20203?: SortOrder
        AOB_50012_20203?: SortOrder
        AOB_50013_20203?: SortOrder
        AOB_50014_20203?: SortOrder
        AOB_ALL_24155?: SortOrder
        AOB_50011_24155?: SortOrder
        AOB_50012_24155?: SortOrder
        AOB_50013_24155?: SortOrder
        AOB_50014_24155?: SortOrder
        AOB_ALL_24198?: SortOrder
        AOB_50011_24198?: SortOrder
        AOB_50012_24198?: SortOrder
        AOB_50013_24198?: SortOrder
        AOB_50014_24198?: SortOrder
        AOB_ALL_135?: SortOrder
        AOB_50011_135?: SortOrder
        AOB_50012_135?: SortOrder
        AOB_50013_135?: SortOrder
        AOB_50014_135?: SortOrder
        AOB_ALL_24196?: SortOrder
        AOB_50011_24196?: SortOrder
        AOB_50012_24196?: SortOrder
        AOB_50013_24196?: SortOrder
        AOB_50014_24196?: SortOrder
        AOB_ALL_24197?: SortOrder
        AOB_50011_24197?: SortOrder
        AOB_50012_24197?: SortOrder
        AOB_50013_24197?: SortOrder
        AOB_50014_24197?: SortOrder
        AOB_ALL_21?: SortOrder
        AOB_50011_21?: SortOrder
        AOB_50012_21?: SortOrder
        AOB_50013_21?: SortOrder
        AOB_50014_21?: SortOrder
    }

    export type GA_ANKETA_OBOROT_BRANDS2CountOrderByAggregateInput = {
        AOB_ABA_ID?: SortOrder
        AOB_DATETIME?: SortOrder
        AOB_ALL_7438?: SortOrder
        AOB_50011_7438?: SortOrder
        AOB_50012_7438?: SortOrder
        AOB_50013_7438?: SortOrder
        AOB_50014_7438?: SortOrder
        AOB_ALL_7801?: SortOrder
        AOB_50011_7801?: SortOrder
        AOB_50012_7801?: SortOrder
        AOB_50013_7801?: SortOrder
        AOB_50014_7801?: SortOrder
        AOB_ALL_7763?: SortOrder
        AOB_50011_7763?: SortOrder
        AOB_50012_7763?: SortOrder
        AOB_50013_7763?: SortOrder
        AOB_50014_7763?: SortOrder
        AOB_ALL_265?: SortOrder
        AOB_50011_265?: SortOrder
        AOB_50012_265?: SortOrder
        AOB_50013_265?: SortOrder
        AOB_50014_265?: SortOrder
        AOB_ALL_24158?: SortOrder
        AOB_50011_24158?: SortOrder
        AOB_50012_24158?: SortOrder
        AOB_50013_24158?: SortOrder
        AOB_50014_24158?: SortOrder
        AOB_ALL_7219?: SortOrder
        AOB_50011_7219?: SortOrder
        AOB_50012_7219?: SortOrder
        AOB_50013_7219?: SortOrder
        AOB_50014_7219?: SortOrder
    }

    export type GA_ANKETA_OBOROT_BRANDS2AvgOrderByAggregateInput = {
        AOB_ABA_ID?: SortOrder
        AOB_ALL_7438?: SortOrder
        AOB_50011_7438?: SortOrder
        AOB_50012_7438?: SortOrder
        AOB_50013_7438?: SortOrder
        AOB_50014_7438?: SortOrder
        AOB_ALL_7801?: SortOrder
        AOB_50011_7801?: SortOrder
        AOB_50012_7801?: SortOrder
        AOB_50013_7801?: SortOrder
        AOB_50014_7801?: SortOrder
        AOB_ALL_7763?: SortOrder
        AOB_50011_7763?: SortOrder
        AOB_50012_7763?: SortOrder
        AOB_50013_7763?: SortOrder
        AOB_50014_7763?: SortOrder
        AOB_ALL_265?: SortOrder
        AOB_50011_265?: SortOrder
        AOB_50012_265?: SortOrder
        AOB_50013_265?: SortOrder
        AOB_50014_265?: SortOrder
        AOB_ALL_24158?: SortOrder
        AOB_50011_24158?: SortOrder
        AOB_50012_24158?: SortOrder
        AOB_50013_24158?: SortOrder
        AOB_50014_24158?: SortOrder
        AOB_ALL_7219?: SortOrder
        AOB_50011_7219?: SortOrder
        AOB_50012_7219?: SortOrder
        AOB_50013_7219?: SortOrder
        AOB_50014_7219?: SortOrder
    }

    export type GA_ANKETA_OBOROT_BRANDS2MaxOrderByAggregateInput = {
        AOB_ABA_ID?: SortOrder
        AOB_DATETIME?: SortOrder
        AOB_ALL_7438?: SortOrder
        AOB_50011_7438?: SortOrder
        AOB_50012_7438?: SortOrder
        AOB_50013_7438?: SortOrder
        AOB_50014_7438?: SortOrder
        AOB_ALL_7801?: SortOrder
        AOB_50011_7801?: SortOrder
        AOB_50012_7801?: SortOrder
        AOB_50013_7801?: SortOrder
        AOB_50014_7801?: SortOrder
        AOB_ALL_7763?: SortOrder
        AOB_50011_7763?: SortOrder
        AOB_50012_7763?: SortOrder
        AOB_50013_7763?: SortOrder
        AOB_50014_7763?: SortOrder
        AOB_ALL_265?: SortOrder
        AOB_50011_265?: SortOrder
        AOB_50012_265?: SortOrder
        AOB_50013_265?: SortOrder
        AOB_50014_265?: SortOrder
        AOB_ALL_24158?: SortOrder
        AOB_50011_24158?: SortOrder
        AOB_50012_24158?: SortOrder
        AOB_50013_24158?: SortOrder
        AOB_50014_24158?: SortOrder
        AOB_ALL_7219?: SortOrder
        AOB_50011_7219?: SortOrder
        AOB_50012_7219?: SortOrder
        AOB_50013_7219?: SortOrder
        AOB_50014_7219?: SortOrder
    }

    export type GA_ANKETA_OBOROT_BRANDS2MinOrderByAggregateInput = {
        AOB_ABA_ID?: SortOrder
        AOB_DATETIME?: SortOrder
        AOB_ALL_7438?: SortOrder
        AOB_50011_7438?: SortOrder
        AOB_50012_7438?: SortOrder
        AOB_50013_7438?: SortOrder
        AOB_50014_7438?: SortOrder
        AOB_ALL_7801?: SortOrder
        AOB_50011_7801?: SortOrder
        AOB_50012_7801?: SortOrder
        AOB_50013_7801?: SortOrder
        AOB_50014_7801?: SortOrder
        AOB_ALL_7763?: SortOrder
        AOB_50011_7763?: SortOrder
        AOB_50012_7763?: SortOrder
        AOB_50013_7763?: SortOrder
        AOB_50014_7763?: SortOrder
        AOB_ALL_265?: SortOrder
        AOB_50011_265?: SortOrder
        AOB_50012_265?: SortOrder
        AOB_50013_265?: SortOrder
        AOB_50014_265?: SortOrder
        AOB_ALL_24158?: SortOrder
        AOB_50011_24158?: SortOrder
        AOB_50012_24158?: SortOrder
        AOB_50013_24158?: SortOrder
        AOB_50014_24158?: SortOrder
        AOB_ALL_7219?: SortOrder
        AOB_50011_7219?: SortOrder
        AOB_50012_7219?: SortOrder
        AOB_50013_7219?: SortOrder
        AOB_50014_7219?: SortOrder
    }

    export type GA_ANKETA_OBOROT_BRANDS2SumOrderByAggregateInput = {
        AOB_ABA_ID?: SortOrder
        AOB_ALL_7438?: SortOrder
        AOB_50011_7438?: SortOrder
        AOB_50012_7438?: SortOrder
        AOB_50013_7438?: SortOrder
        AOB_50014_7438?: SortOrder
        AOB_ALL_7801?: SortOrder
        AOB_50011_7801?: SortOrder
        AOB_50012_7801?: SortOrder
        AOB_50013_7801?: SortOrder
        AOB_50014_7801?: SortOrder
        AOB_ALL_7763?: SortOrder
        AOB_50011_7763?: SortOrder
        AOB_50012_7763?: SortOrder
        AOB_50013_7763?: SortOrder
        AOB_50014_7763?: SortOrder
        AOB_ALL_265?: SortOrder
        AOB_50011_265?: SortOrder
        AOB_50012_265?: SortOrder
        AOB_50013_265?: SortOrder
        AOB_50014_265?: SortOrder
        AOB_ALL_24158?: SortOrder
        AOB_50011_24158?: SortOrder
        AOB_50012_24158?: SortOrder
        AOB_50013_24158?: SortOrder
        AOB_50014_24158?: SortOrder
        AOB_ALL_7219?: SortOrder
        AOB_50011_7219?: SortOrder
        AOB_50012_7219?: SortOrder
        AOB_50013_7219?: SortOrder
        AOB_50014_7219?: SortOrder
    }

    export type GA_ANKETA_OBOROT_COUNTSCountOrderByAggregateInput = {
        AOC_ABA_ID?: SortOrder
        AOC_DATETIME?: SortOrder
        AOC_ALL_24189?: SortOrder
        AOC_50011_24189?: SortOrder
        AOC_50012_24189?: SortOrder
        AOC_50013_24189?: SortOrder
        AOC_50014_24189?: SortOrder
        AOC_ALL_10566?: SortOrder
        AOC_50011_10566?: SortOrder
        AOC_50012_10566?: SortOrder
        AOC_50013_10566?: SortOrder
        AOC_50014_10566?: SortOrder
        AOC_ALL_20079?: SortOrder
        AOC_50011_20079?: SortOrder
        AOC_50012_20079?: SortOrder
        AOC_50013_20079?: SortOrder
        AOC_50014_20079?: SortOrder
        AOC_ALL_7251?: SortOrder
        AOC_50011_7251?: SortOrder
        AOC_50012_7251?: SortOrder
        AOC_50013_7251?: SortOrder
        AOC_50014_7251?: SortOrder
        AOC_ALL_24191?: SortOrder
        AOC_50011_24191?: SortOrder
        AOC_50012_24191?: SortOrder
        AOC_50013_24191?: SortOrder
        AOC_50014_24191?: SortOrder
        AOC_ALL_193?: SortOrder
        AOC_50011_193?: SortOrder
        AOC_50012_193?: SortOrder
        AOC_50013_193?: SortOrder
        AOC_50014_193?: SortOrder
        AOC_ALL_7610?: SortOrder
        AOC_50011_7610?: SortOrder
        AOC_50012_7610?: SortOrder
        AOC_50013_7610?: SortOrder
        AOC_50014_7610?: SortOrder
        AOC_ALL_10180?: SortOrder
        AOC_50011_10180?: SortOrder
        AOC_50012_10180?: SortOrder
        AOC_50013_10180?: SortOrder
        AOC_50014_10180?: SortOrder
        AOC_ALL_177?: SortOrder
        AOC_50011_177?: SortOrder
        AOC_50012_177?: SortOrder
        AOC_50013_177?: SortOrder
        AOC_50014_177?: SortOrder
        AOC_ALL_10223?: SortOrder
        AOC_50011_10223?: SortOrder
        AOC_50012_10223?: SortOrder
        AOC_50013_10223?: SortOrder
        AOC_50014_10223?: SortOrder
        AOC_ALL_7230?: SortOrder
        AOC_50011_7230?: SortOrder
        AOC_50012_7230?: SortOrder
        AOC_50013_7230?: SortOrder
        AOC_50014_7230?: SortOrder
        AOC_ALL_1359?: SortOrder
        AOC_50011_1359?: SortOrder
        AOC_50012_1359?: SortOrder
        AOC_50013_1359?: SortOrder
        AOC_50014_1359?: SortOrder
        AOC_ALL_110?: SortOrder
        AOC_50011_110?: SortOrder
        AOC_50012_110?: SortOrder
        AOC_50013_110?: SortOrder
        AOC_50014_110?: SortOrder
        AOC_ALL_20182?: SortOrder
        AOC_50011_20182?: SortOrder
        AOC_50012_20182?: SortOrder
        AOC_50013_20182?: SortOrder
        AOC_50014_20182?: SortOrder
        AOC_ALL_20203?: SortOrder
        AOC_50011_20203?: SortOrder
        AOC_50012_20203?: SortOrder
        AOC_50013_20203?: SortOrder
        AOC_50014_20203?: SortOrder
        AOC_ALL_24155?: SortOrder
        AOC_50011_24155?: SortOrder
        AOC_50012_24155?: SortOrder
        AOC_50013_24155?: SortOrder
        AOC_50014_24155?: SortOrder
        AOC_ALL_24198?: SortOrder
        AOC_50011_24198?: SortOrder
        AOC_50012_24198?: SortOrder
        AOC_50013_24198?: SortOrder
        AOC_50014_24198?: SortOrder
        AOC_ALL_135?: SortOrder
        AOC_50011_135?: SortOrder
        AOC_50012_135?: SortOrder
        AOC_50013_135?: SortOrder
        AOC_50014_135?: SortOrder
        AOC_ALL_24196?: SortOrder
        AOC_50011_24196?: SortOrder
        AOC_50012_24196?: SortOrder
        AOC_50013_24196?: SortOrder
        AOC_50014_24196?: SortOrder
        AOC_ALL_24197?: SortOrder
        AOC_50011_24197?: SortOrder
        AOC_50012_24197?: SortOrder
        AOC_50013_24197?: SortOrder
        AOC_50014_24197?: SortOrder
        AOC_ALL_21?: SortOrder
        AOC_50011_21?: SortOrder
        AOC_50012_21?: SortOrder
        AOC_50013_21?: SortOrder
        AOC_50014_21?: SortOrder
    }

    export type GA_ANKETA_OBOROT_COUNTSAvgOrderByAggregateInput = {
        AOC_ABA_ID?: SortOrder
        AOC_ALL_24189?: SortOrder
        AOC_50011_24189?: SortOrder
        AOC_50012_24189?: SortOrder
        AOC_50013_24189?: SortOrder
        AOC_50014_24189?: SortOrder
        AOC_ALL_10566?: SortOrder
        AOC_50011_10566?: SortOrder
        AOC_50012_10566?: SortOrder
        AOC_50013_10566?: SortOrder
        AOC_50014_10566?: SortOrder
        AOC_ALL_20079?: SortOrder
        AOC_50011_20079?: SortOrder
        AOC_50012_20079?: SortOrder
        AOC_50013_20079?: SortOrder
        AOC_50014_20079?: SortOrder
        AOC_ALL_7251?: SortOrder
        AOC_50011_7251?: SortOrder
        AOC_50012_7251?: SortOrder
        AOC_50013_7251?: SortOrder
        AOC_50014_7251?: SortOrder
        AOC_ALL_24191?: SortOrder
        AOC_50011_24191?: SortOrder
        AOC_50012_24191?: SortOrder
        AOC_50013_24191?: SortOrder
        AOC_50014_24191?: SortOrder
        AOC_ALL_193?: SortOrder
        AOC_50011_193?: SortOrder
        AOC_50012_193?: SortOrder
        AOC_50013_193?: SortOrder
        AOC_50014_193?: SortOrder
        AOC_ALL_7610?: SortOrder
        AOC_50011_7610?: SortOrder
        AOC_50012_7610?: SortOrder
        AOC_50013_7610?: SortOrder
        AOC_50014_7610?: SortOrder
        AOC_ALL_10180?: SortOrder
        AOC_50011_10180?: SortOrder
        AOC_50012_10180?: SortOrder
        AOC_50013_10180?: SortOrder
        AOC_50014_10180?: SortOrder
        AOC_ALL_177?: SortOrder
        AOC_50011_177?: SortOrder
        AOC_50012_177?: SortOrder
        AOC_50013_177?: SortOrder
        AOC_50014_177?: SortOrder
        AOC_ALL_10223?: SortOrder
        AOC_50011_10223?: SortOrder
        AOC_50012_10223?: SortOrder
        AOC_50013_10223?: SortOrder
        AOC_50014_10223?: SortOrder
        AOC_ALL_7230?: SortOrder
        AOC_50011_7230?: SortOrder
        AOC_50012_7230?: SortOrder
        AOC_50013_7230?: SortOrder
        AOC_50014_7230?: SortOrder
        AOC_ALL_1359?: SortOrder
        AOC_50011_1359?: SortOrder
        AOC_50012_1359?: SortOrder
        AOC_50013_1359?: SortOrder
        AOC_50014_1359?: SortOrder
        AOC_ALL_110?: SortOrder
        AOC_50011_110?: SortOrder
        AOC_50012_110?: SortOrder
        AOC_50013_110?: SortOrder
        AOC_50014_110?: SortOrder
        AOC_ALL_20182?: SortOrder
        AOC_50011_20182?: SortOrder
        AOC_50012_20182?: SortOrder
        AOC_50013_20182?: SortOrder
        AOC_50014_20182?: SortOrder
        AOC_ALL_20203?: SortOrder
        AOC_50011_20203?: SortOrder
        AOC_50012_20203?: SortOrder
        AOC_50013_20203?: SortOrder
        AOC_50014_20203?: SortOrder
        AOC_ALL_24155?: SortOrder
        AOC_50011_24155?: SortOrder
        AOC_50012_24155?: SortOrder
        AOC_50013_24155?: SortOrder
        AOC_50014_24155?: SortOrder
        AOC_ALL_24198?: SortOrder
        AOC_50011_24198?: SortOrder
        AOC_50012_24198?: SortOrder
        AOC_50013_24198?: SortOrder
        AOC_50014_24198?: SortOrder
        AOC_ALL_135?: SortOrder
        AOC_50011_135?: SortOrder
        AOC_50012_135?: SortOrder
        AOC_50013_135?: SortOrder
        AOC_50014_135?: SortOrder
        AOC_ALL_24196?: SortOrder
        AOC_50011_24196?: SortOrder
        AOC_50012_24196?: SortOrder
        AOC_50013_24196?: SortOrder
        AOC_50014_24196?: SortOrder
        AOC_ALL_24197?: SortOrder
        AOC_50011_24197?: SortOrder
        AOC_50012_24197?: SortOrder
        AOC_50013_24197?: SortOrder
        AOC_50014_24197?: SortOrder
        AOC_ALL_21?: SortOrder
        AOC_50011_21?: SortOrder
        AOC_50012_21?: SortOrder
        AOC_50013_21?: SortOrder
        AOC_50014_21?: SortOrder
    }

    export type GA_ANKETA_OBOROT_COUNTSMaxOrderByAggregateInput = {
        AOC_ABA_ID?: SortOrder
        AOC_DATETIME?: SortOrder
        AOC_ALL_24189?: SortOrder
        AOC_50011_24189?: SortOrder
        AOC_50012_24189?: SortOrder
        AOC_50013_24189?: SortOrder
        AOC_50014_24189?: SortOrder
        AOC_ALL_10566?: SortOrder
        AOC_50011_10566?: SortOrder
        AOC_50012_10566?: SortOrder
        AOC_50013_10566?: SortOrder
        AOC_50014_10566?: SortOrder
        AOC_ALL_20079?: SortOrder
        AOC_50011_20079?: SortOrder
        AOC_50012_20079?: SortOrder
        AOC_50013_20079?: SortOrder
        AOC_50014_20079?: SortOrder
        AOC_ALL_7251?: SortOrder
        AOC_50011_7251?: SortOrder
        AOC_50012_7251?: SortOrder
        AOC_50013_7251?: SortOrder
        AOC_50014_7251?: SortOrder
        AOC_ALL_24191?: SortOrder
        AOC_50011_24191?: SortOrder
        AOC_50012_24191?: SortOrder
        AOC_50013_24191?: SortOrder
        AOC_50014_24191?: SortOrder
        AOC_ALL_193?: SortOrder
        AOC_50011_193?: SortOrder
        AOC_50012_193?: SortOrder
        AOC_50013_193?: SortOrder
        AOC_50014_193?: SortOrder
        AOC_ALL_7610?: SortOrder
        AOC_50011_7610?: SortOrder
        AOC_50012_7610?: SortOrder
        AOC_50013_7610?: SortOrder
        AOC_50014_7610?: SortOrder
        AOC_ALL_10180?: SortOrder
        AOC_50011_10180?: SortOrder
        AOC_50012_10180?: SortOrder
        AOC_50013_10180?: SortOrder
        AOC_50014_10180?: SortOrder
        AOC_ALL_177?: SortOrder
        AOC_50011_177?: SortOrder
        AOC_50012_177?: SortOrder
        AOC_50013_177?: SortOrder
        AOC_50014_177?: SortOrder
        AOC_ALL_10223?: SortOrder
        AOC_50011_10223?: SortOrder
        AOC_50012_10223?: SortOrder
        AOC_50013_10223?: SortOrder
        AOC_50014_10223?: SortOrder
        AOC_ALL_7230?: SortOrder
        AOC_50011_7230?: SortOrder
        AOC_50012_7230?: SortOrder
        AOC_50013_7230?: SortOrder
        AOC_50014_7230?: SortOrder
        AOC_ALL_1359?: SortOrder
        AOC_50011_1359?: SortOrder
        AOC_50012_1359?: SortOrder
        AOC_50013_1359?: SortOrder
        AOC_50014_1359?: SortOrder
        AOC_ALL_110?: SortOrder
        AOC_50011_110?: SortOrder
        AOC_50012_110?: SortOrder
        AOC_50013_110?: SortOrder
        AOC_50014_110?: SortOrder
        AOC_ALL_20182?: SortOrder
        AOC_50011_20182?: SortOrder
        AOC_50012_20182?: SortOrder
        AOC_50013_20182?: SortOrder
        AOC_50014_20182?: SortOrder
        AOC_ALL_20203?: SortOrder
        AOC_50011_20203?: SortOrder
        AOC_50012_20203?: SortOrder
        AOC_50013_20203?: SortOrder
        AOC_50014_20203?: SortOrder
        AOC_ALL_24155?: SortOrder
        AOC_50011_24155?: SortOrder
        AOC_50012_24155?: SortOrder
        AOC_50013_24155?: SortOrder
        AOC_50014_24155?: SortOrder
        AOC_ALL_24198?: SortOrder
        AOC_50011_24198?: SortOrder
        AOC_50012_24198?: SortOrder
        AOC_50013_24198?: SortOrder
        AOC_50014_24198?: SortOrder
        AOC_ALL_135?: SortOrder
        AOC_50011_135?: SortOrder
        AOC_50012_135?: SortOrder
        AOC_50013_135?: SortOrder
        AOC_50014_135?: SortOrder
        AOC_ALL_24196?: SortOrder
        AOC_50011_24196?: SortOrder
        AOC_50012_24196?: SortOrder
        AOC_50013_24196?: SortOrder
        AOC_50014_24196?: SortOrder
        AOC_ALL_24197?: SortOrder
        AOC_50011_24197?: SortOrder
        AOC_50012_24197?: SortOrder
        AOC_50013_24197?: SortOrder
        AOC_50014_24197?: SortOrder
        AOC_ALL_21?: SortOrder
        AOC_50011_21?: SortOrder
        AOC_50012_21?: SortOrder
        AOC_50013_21?: SortOrder
        AOC_50014_21?: SortOrder
    }

    export type GA_ANKETA_OBOROT_COUNTSMinOrderByAggregateInput = {
        AOC_ABA_ID?: SortOrder
        AOC_DATETIME?: SortOrder
        AOC_ALL_24189?: SortOrder
        AOC_50011_24189?: SortOrder
        AOC_50012_24189?: SortOrder
        AOC_50013_24189?: SortOrder
        AOC_50014_24189?: SortOrder
        AOC_ALL_10566?: SortOrder
        AOC_50011_10566?: SortOrder
        AOC_50012_10566?: SortOrder
        AOC_50013_10566?: SortOrder
        AOC_50014_10566?: SortOrder
        AOC_ALL_20079?: SortOrder
        AOC_50011_20079?: SortOrder
        AOC_50012_20079?: SortOrder
        AOC_50013_20079?: SortOrder
        AOC_50014_20079?: SortOrder
        AOC_ALL_7251?: SortOrder
        AOC_50011_7251?: SortOrder
        AOC_50012_7251?: SortOrder
        AOC_50013_7251?: SortOrder
        AOC_50014_7251?: SortOrder
        AOC_ALL_24191?: SortOrder
        AOC_50011_24191?: SortOrder
        AOC_50012_24191?: SortOrder
        AOC_50013_24191?: SortOrder
        AOC_50014_24191?: SortOrder
        AOC_ALL_193?: SortOrder
        AOC_50011_193?: SortOrder
        AOC_50012_193?: SortOrder
        AOC_50013_193?: SortOrder
        AOC_50014_193?: SortOrder
        AOC_ALL_7610?: SortOrder
        AOC_50011_7610?: SortOrder
        AOC_50012_7610?: SortOrder
        AOC_50013_7610?: SortOrder
        AOC_50014_7610?: SortOrder
        AOC_ALL_10180?: SortOrder
        AOC_50011_10180?: SortOrder
        AOC_50012_10180?: SortOrder
        AOC_50013_10180?: SortOrder
        AOC_50014_10180?: SortOrder
        AOC_ALL_177?: SortOrder
        AOC_50011_177?: SortOrder
        AOC_50012_177?: SortOrder
        AOC_50013_177?: SortOrder
        AOC_50014_177?: SortOrder
        AOC_ALL_10223?: SortOrder
        AOC_50011_10223?: SortOrder
        AOC_50012_10223?: SortOrder
        AOC_50013_10223?: SortOrder
        AOC_50014_10223?: SortOrder
        AOC_ALL_7230?: SortOrder
        AOC_50011_7230?: SortOrder
        AOC_50012_7230?: SortOrder
        AOC_50013_7230?: SortOrder
        AOC_50014_7230?: SortOrder
        AOC_ALL_1359?: SortOrder
        AOC_50011_1359?: SortOrder
        AOC_50012_1359?: SortOrder
        AOC_50013_1359?: SortOrder
        AOC_50014_1359?: SortOrder
        AOC_ALL_110?: SortOrder
        AOC_50011_110?: SortOrder
        AOC_50012_110?: SortOrder
        AOC_50013_110?: SortOrder
        AOC_50014_110?: SortOrder
        AOC_ALL_20182?: SortOrder
        AOC_50011_20182?: SortOrder
        AOC_50012_20182?: SortOrder
        AOC_50013_20182?: SortOrder
        AOC_50014_20182?: SortOrder
        AOC_ALL_20203?: SortOrder
        AOC_50011_20203?: SortOrder
        AOC_50012_20203?: SortOrder
        AOC_50013_20203?: SortOrder
        AOC_50014_20203?: SortOrder
        AOC_ALL_24155?: SortOrder
        AOC_50011_24155?: SortOrder
        AOC_50012_24155?: SortOrder
        AOC_50013_24155?: SortOrder
        AOC_50014_24155?: SortOrder
        AOC_ALL_24198?: SortOrder
        AOC_50011_24198?: SortOrder
        AOC_50012_24198?: SortOrder
        AOC_50013_24198?: SortOrder
        AOC_50014_24198?: SortOrder
        AOC_ALL_135?: SortOrder
        AOC_50011_135?: SortOrder
        AOC_50012_135?: SortOrder
        AOC_50013_135?: SortOrder
        AOC_50014_135?: SortOrder
        AOC_ALL_24196?: SortOrder
        AOC_50011_24196?: SortOrder
        AOC_50012_24196?: SortOrder
        AOC_50013_24196?: SortOrder
        AOC_50014_24196?: SortOrder
        AOC_ALL_24197?: SortOrder
        AOC_50011_24197?: SortOrder
        AOC_50012_24197?: SortOrder
        AOC_50013_24197?: SortOrder
        AOC_50014_24197?: SortOrder
        AOC_ALL_21?: SortOrder
        AOC_50011_21?: SortOrder
        AOC_50012_21?: SortOrder
        AOC_50013_21?: SortOrder
        AOC_50014_21?: SortOrder
    }

    export type GA_ANKETA_OBOROT_COUNTSSumOrderByAggregateInput = {
        AOC_ABA_ID?: SortOrder
        AOC_ALL_24189?: SortOrder
        AOC_50011_24189?: SortOrder
        AOC_50012_24189?: SortOrder
        AOC_50013_24189?: SortOrder
        AOC_50014_24189?: SortOrder
        AOC_ALL_10566?: SortOrder
        AOC_50011_10566?: SortOrder
        AOC_50012_10566?: SortOrder
        AOC_50013_10566?: SortOrder
        AOC_50014_10566?: SortOrder
        AOC_ALL_20079?: SortOrder
        AOC_50011_20079?: SortOrder
        AOC_50012_20079?: SortOrder
        AOC_50013_20079?: SortOrder
        AOC_50014_20079?: SortOrder
        AOC_ALL_7251?: SortOrder
        AOC_50011_7251?: SortOrder
        AOC_50012_7251?: SortOrder
        AOC_50013_7251?: SortOrder
        AOC_50014_7251?: SortOrder
        AOC_ALL_24191?: SortOrder
        AOC_50011_24191?: SortOrder
        AOC_50012_24191?: SortOrder
        AOC_50013_24191?: SortOrder
        AOC_50014_24191?: SortOrder
        AOC_ALL_193?: SortOrder
        AOC_50011_193?: SortOrder
        AOC_50012_193?: SortOrder
        AOC_50013_193?: SortOrder
        AOC_50014_193?: SortOrder
        AOC_ALL_7610?: SortOrder
        AOC_50011_7610?: SortOrder
        AOC_50012_7610?: SortOrder
        AOC_50013_7610?: SortOrder
        AOC_50014_7610?: SortOrder
        AOC_ALL_10180?: SortOrder
        AOC_50011_10180?: SortOrder
        AOC_50012_10180?: SortOrder
        AOC_50013_10180?: SortOrder
        AOC_50014_10180?: SortOrder
        AOC_ALL_177?: SortOrder
        AOC_50011_177?: SortOrder
        AOC_50012_177?: SortOrder
        AOC_50013_177?: SortOrder
        AOC_50014_177?: SortOrder
        AOC_ALL_10223?: SortOrder
        AOC_50011_10223?: SortOrder
        AOC_50012_10223?: SortOrder
        AOC_50013_10223?: SortOrder
        AOC_50014_10223?: SortOrder
        AOC_ALL_7230?: SortOrder
        AOC_50011_7230?: SortOrder
        AOC_50012_7230?: SortOrder
        AOC_50013_7230?: SortOrder
        AOC_50014_7230?: SortOrder
        AOC_ALL_1359?: SortOrder
        AOC_50011_1359?: SortOrder
        AOC_50012_1359?: SortOrder
        AOC_50013_1359?: SortOrder
        AOC_50014_1359?: SortOrder
        AOC_ALL_110?: SortOrder
        AOC_50011_110?: SortOrder
        AOC_50012_110?: SortOrder
        AOC_50013_110?: SortOrder
        AOC_50014_110?: SortOrder
        AOC_ALL_20182?: SortOrder
        AOC_50011_20182?: SortOrder
        AOC_50012_20182?: SortOrder
        AOC_50013_20182?: SortOrder
        AOC_50014_20182?: SortOrder
        AOC_ALL_20203?: SortOrder
        AOC_50011_20203?: SortOrder
        AOC_50012_20203?: SortOrder
        AOC_50013_20203?: SortOrder
        AOC_50014_20203?: SortOrder
        AOC_ALL_24155?: SortOrder
        AOC_50011_24155?: SortOrder
        AOC_50012_24155?: SortOrder
        AOC_50013_24155?: SortOrder
        AOC_50014_24155?: SortOrder
        AOC_ALL_24198?: SortOrder
        AOC_50011_24198?: SortOrder
        AOC_50012_24198?: SortOrder
        AOC_50013_24198?: SortOrder
        AOC_50014_24198?: SortOrder
        AOC_ALL_135?: SortOrder
        AOC_50011_135?: SortOrder
        AOC_50012_135?: SortOrder
        AOC_50013_135?: SortOrder
        AOC_50014_135?: SortOrder
        AOC_ALL_24196?: SortOrder
        AOC_50011_24196?: SortOrder
        AOC_50012_24196?: SortOrder
        AOC_50013_24196?: SortOrder
        AOC_50014_24196?: SortOrder
        AOC_ALL_24197?: SortOrder
        AOC_50011_24197?: SortOrder
        AOC_50012_24197?: SortOrder
        AOC_50013_24197?: SortOrder
        AOC_50014_24197?: SortOrder
        AOC_ALL_21?: SortOrder
        AOC_50011_21?: SortOrder
        AOC_50012_21?: SortOrder
        AOC_50013_21?: SortOrder
        AOC_50014_21?: SortOrder
    }

    export type GA_ANKETA_SCORESCountOrderByAggregateInput = {
        ANS_WSU_ID?: SortOrder
        ANS_SCORES?: SortOrder
        ANS_DATETIME?: SortOrder
        ANS_ISSHOW?: SortOrder
    }

    export type GA_ANKETA_SCORESAvgOrderByAggregateInput = {
        ANS_WSU_ID?: SortOrder
        ANS_SCORES?: SortOrder
    }

    export type GA_ANKETA_SCORESMaxOrderByAggregateInput = {
        ANS_WSU_ID?: SortOrder
        ANS_SCORES?: SortOrder
        ANS_DATETIME?: SortOrder
        ANS_ISSHOW?: SortOrder
    }

    export type GA_ANKETA_SCORESMinOrderByAggregateInput = {
        ANS_WSU_ID?: SortOrder
        ANS_SCORES?: SortOrder
        ANS_DATETIME?: SortOrder
        ANS_ISSHOW?: SortOrder
    }

    export type GA_ANKETA_SCORESSumOrderByAggregateInput = {
        ANS_WSU_ID?: SortOrder
        ANS_SCORES?: SortOrder
    }

    export type GA_ANKETA_SCORES_HISTORYCountOrderByAggregateInput = {
        ASH_WSU_ID?: SortOrder
        ASH_SCORES?: SortOrder
        ASH_DATETIME?: SortOrder
        ASH_DESC?: SortOrder
        ASH_TYPE?: SortOrder
        ASH_SCORES_OLD?: SortOrder
        ASH_EVENT_STATUS?: SortOrder
        ASH_DATETIME_UPDATE?: SortOrder
        ASH_IZO_ID?: SortOrder
    }

    export type GA_ANKETA_SCORES_HISTORYAvgOrderByAggregateInput = {
        ASH_WSU_ID?: SortOrder
        ASH_SCORES?: SortOrder
        ASH_TYPE?: SortOrder
        ASH_SCORES_OLD?: SortOrder
        ASH_IZO_ID?: SortOrder
    }

    export type GA_ANKETA_SCORES_HISTORYMaxOrderByAggregateInput = {
        ASH_WSU_ID?: SortOrder
        ASH_SCORES?: SortOrder
        ASH_DATETIME?: SortOrder
        ASH_DESC?: SortOrder
        ASH_TYPE?: SortOrder
        ASH_SCORES_OLD?: SortOrder
        ASH_EVENT_STATUS?: SortOrder
        ASH_DATETIME_UPDATE?: SortOrder
        ASH_IZO_ID?: SortOrder
    }

    export type GA_ANKETA_SCORES_HISTORYMinOrderByAggregateInput = {
        ASH_WSU_ID?: SortOrder
        ASH_SCORES?: SortOrder
        ASH_DATETIME?: SortOrder
        ASH_DESC?: SortOrder
        ASH_TYPE?: SortOrder
        ASH_SCORES_OLD?: SortOrder
        ASH_EVENT_STATUS?: SortOrder
        ASH_DATETIME_UPDATE?: SortOrder
        ASH_IZO_ID?: SortOrder
    }

    export type GA_ANKETA_SCORES_HISTORYSumOrderByAggregateInput = {
        ASH_WSU_ID?: SortOrder
        ASH_SCORES?: SortOrder
        ASH_TYPE?: SortOrder
        ASH_SCORES_OLD?: SortOrder
        ASH_IZO_ID?: SortOrder
    }

    export type GA_ANKETA_SOREVNOVANIECountOrderByAggregateInput = {
        ASR_YEAR?: SortOrder
        ASR_MONTH?: SortOrder
        ASR_WSU_ID?: SortOrder
        ASR_LOGIN?: SortOrder
        ASR_FIO?: SortOrder
        ASR_SCORE?: SortOrder
        ASR_DOLJNOST?: SortOrder
        ASR_RUKOVODITEL?: SortOrder
    }

    export type GA_ANKETA_SOREVNOVANIEAvgOrderByAggregateInput = {
        ASR_YEAR?: SortOrder
        ASR_MONTH?: SortOrder
        ASR_WSU_ID?: SortOrder
        ASR_SCORE?: SortOrder
    }

    export type GA_ANKETA_SOREVNOVANIEMaxOrderByAggregateInput = {
        ASR_YEAR?: SortOrder
        ASR_MONTH?: SortOrder
        ASR_WSU_ID?: SortOrder
        ASR_LOGIN?: SortOrder
        ASR_FIO?: SortOrder
        ASR_SCORE?: SortOrder
        ASR_DOLJNOST?: SortOrder
        ASR_RUKOVODITEL?: SortOrder
    }

    export type GA_ANKETA_SOREVNOVANIEMinOrderByAggregateInput = {
        ASR_YEAR?: SortOrder
        ASR_MONTH?: SortOrder
        ASR_WSU_ID?: SortOrder
        ASR_LOGIN?: SortOrder
        ASR_FIO?: SortOrder
        ASR_SCORE?: SortOrder
        ASR_DOLJNOST?: SortOrder
        ASR_RUKOVODITEL?: SortOrder
    }

    export type GA_ANKETA_SOREVNOVANIESumOrderByAggregateInput = {
        ASR_YEAR?: SortOrder
        ASR_MONTH?: SortOrder
        ASR_WSU_ID?: SortOrder
        ASR_SCORE?: SortOrder
    }

    export type GA_SUP_50012_SELLOUTCountOrderByAggregateInput = {
        SPR_SPH_ID?: SortOrder
        SPR_INN?: SortOrder
        SPR_CLIENT?: SortOrder
        SPR_GROUPTYPE?: SortOrder
        SPR_ARTICLE?: SortOrder
        SPR_BRAND?: SortOrder
        SPR_INFO?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
        SPR_DATETIME?: SortOrder
        SPR_ADDR?: SortOrder
        SPR_CLIENT_CODE?: SortOrder
        SPR_CLIENT_ID?: SortOrder
        SPR_CLIENT_CODE2?: SortOrder
        SPR_ADDR_ENC?: SortOrder
    }

    export type GA_SUP_50012_SELLOUTAvgOrderByAggregateInput = {
        SPR_SPH_ID?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
    }

    export type GA_SUP_50012_SELLOUTMaxOrderByAggregateInput = {
        SPR_SPH_ID?: SortOrder
        SPR_INN?: SortOrder
        SPR_CLIENT?: SortOrder
        SPR_GROUPTYPE?: SortOrder
        SPR_ARTICLE?: SortOrder
        SPR_BRAND?: SortOrder
        SPR_INFO?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
        SPR_DATETIME?: SortOrder
        SPR_ADDR?: SortOrder
        SPR_CLIENT_CODE?: SortOrder
        SPR_CLIENT_ID?: SortOrder
        SPR_CLIENT_CODE2?: SortOrder
        SPR_ADDR_ENC?: SortOrder
    }

    export type GA_SUP_50012_SELLOUTMinOrderByAggregateInput = {
        SPR_SPH_ID?: SortOrder
        SPR_INN?: SortOrder
        SPR_CLIENT?: SortOrder
        SPR_GROUPTYPE?: SortOrder
        SPR_ARTICLE?: SortOrder
        SPR_BRAND?: SortOrder
        SPR_INFO?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
        SPR_DATETIME?: SortOrder
        SPR_ADDR?: SortOrder
        SPR_CLIENT_CODE?: SortOrder
        SPR_CLIENT_ID?: SortOrder
        SPR_CLIENT_CODE2?: SortOrder
        SPR_ADDR_ENC?: SortOrder
    }

    export type GA_SUP_50012_SELLOUTSumOrderByAggregateInput = {
        SPR_SPH_ID?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
    }

    export type GA_SUP_50013_SELLOUTCountOrderByAggregateInput = {
        SPR_SPH_ID?: SortOrder
        SPR_INN?: SortOrder
        SPR_CLIENT?: SortOrder
        SPR_GROUPTYPE?: SortOrder
        SPR_ARTICLE?: SortOrder
        SPR_BRAND?: SortOrder
        SPR_INFO?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
        SPR_DATETIME?: SortOrder
        SPR_ADDR?: SortOrder
        SPR_CLIENT_CODE?: SortOrder
        SPR_CLIENT_ID?: SortOrder
        SPR_CLIENT_CODE2?: SortOrder
        SPR_ADDR_ENC?: SortOrder
    }

    export type GA_SUP_50013_SELLOUTAvgOrderByAggregateInput = {
        SPR_SPH_ID?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
    }

    export type GA_SUP_50013_SELLOUTMaxOrderByAggregateInput = {
        SPR_SPH_ID?: SortOrder
        SPR_INN?: SortOrder
        SPR_CLIENT?: SortOrder
        SPR_GROUPTYPE?: SortOrder
        SPR_ARTICLE?: SortOrder
        SPR_BRAND?: SortOrder
        SPR_INFO?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
        SPR_DATETIME?: SortOrder
        SPR_ADDR?: SortOrder
        SPR_CLIENT_CODE?: SortOrder
        SPR_CLIENT_ID?: SortOrder
        SPR_CLIENT_CODE2?: SortOrder
        SPR_ADDR_ENC?: SortOrder
    }

    export type GA_SUP_50013_SELLOUTMinOrderByAggregateInput = {
        SPR_SPH_ID?: SortOrder
        SPR_INN?: SortOrder
        SPR_CLIENT?: SortOrder
        SPR_GROUPTYPE?: SortOrder
        SPR_ARTICLE?: SortOrder
        SPR_BRAND?: SortOrder
        SPR_INFO?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
        SPR_DATETIME?: SortOrder
        SPR_ADDR?: SortOrder
        SPR_CLIENT_CODE?: SortOrder
        SPR_CLIENT_ID?: SortOrder
        SPR_CLIENT_CODE2?: SortOrder
        SPR_ADDR_ENC?: SortOrder
    }

    export type GA_SUP_50013_SELLOUTSumOrderByAggregateInput = {
        SPR_SPH_ID?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
    }

    export type GA_SUP_50014_SELLOUTCountOrderByAggregateInput = {
        SPR_SPH_ID?: SortOrder
        SPR_INN?: SortOrder
        SPR_CLIENT?: SortOrder
        SPR_GROUPTYPE?: SortOrder
        SPR_ARTICLE?: SortOrder
        SPR_BRAND?: SortOrder
        SPR_INFO?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
        SPR_DATETIME?: SortOrder
        SPR_ADDR?: SortOrder
        SPR_CLIENT_CODE?: SortOrder
        SPR_CLIENT_ID?: SortOrder
        SPR_CLIENT_CODE2?: SortOrder
        SPR_ADDR_ENC?: SortOrder
    }

    export type GA_SUP_50014_SELLOUTAvgOrderByAggregateInput = {
        SPR_SPH_ID?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
    }

    export type GA_SUP_50014_SELLOUTMaxOrderByAggregateInput = {
        SPR_SPH_ID?: SortOrder
        SPR_INN?: SortOrder
        SPR_CLIENT?: SortOrder
        SPR_GROUPTYPE?: SortOrder
        SPR_ARTICLE?: SortOrder
        SPR_BRAND?: SortOrder
        SPR_INFO?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
        SPR_DATETIME?: SortOrder
        SPR_ADDR?: SortOrder
        SPR_CLIENT_CODE?: SortOrder
        SPR_CLIENT_ID?: SortOrder
        SPR_CLIENT_CODE2?: SortOrder
        SPR_ADDR_ENC?: SortOrder
    }

    export type GA_SUP_50014_SELLOUTMinOrderByAggregateInput = {
        SPR_SPH_ID?: SortOrder
        SPR_INN?: SortOrder
        SPR_CLIENT?: SortOrder
        SPR_GROUPTYPE?: SortOrder
        SPR_ARTICLE?: SortOrder
        SPR_BRAND?: SortOrder
        SPR_INFO?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
        SPR_DATETIME?: SortOrder
        SPR_ADDR?: SortOrder
        SPR_CLIENT_CODE?: SortOrder
        SPR_CLIENT_ID?: SortOrder
        SPR_CLIENT_CODE2?: SortOrder
        SPR_ADDR_ENC?: SortOrder
    }

    export type GA_SUP_50014_SELLOUTSumOrderByAggregateInput = {
        SPR_SPH_ID?: SortOrder
        SPR_QTY?: SortOrder
        SPR_PRICE?: SortOrder
        SPR_SUMMA?: SortOrder
        SPR_ART_ID?: SortOrder
    }

    export type BigIntFieldUpdateOperationsInput = {
        set?: bigint | number
        increment?: bigint | number
        decrement?: bigint | number
        multiply?: bigint | number
        divide?: bigint | number
    }

    export type StringFieldUpdateOperationsInput = {
        set?: string
    }

    export type IntFieldUpdateOperationsInput = {
        set?: number
        increment?: number
        decrement?: number
        multiply?: number
        divide?: number
    }

    export type BoolFieldUpdateOperationsInput = {
        set?: boolean
    }

    export type DateTimeFieldUpdateOperationsInput = {
        set?: Date | string
    }

    export type NullableStringFieldUpdateOperationsInput = {
        set?: string | null
    }

    export type FloatFieldUpdateOperationsInput = {
        set?: number
        increment?: number
        decrement?: number
        multiply?: number
        divide?: number
    }

    export type NullableFloatFieldUpdateOperationsInput = {
        set?: number | null
        increment?: number
        decrement?: number
        multiply?: number
        divide?: number
    }

    export type NullableIntFieldUpdateOperationsInput = {
        set?: number | null
        increment?: number
        decrement?: number
        multiply?: number
        divide?: number
    }

    export type NestedBigIntFilter<$PrismaModel = never> = {
        equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
        notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
        lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        not?: NestedBigIntFilter<$PrismaModel> | bigint | number
    }

    export type NestedStringFilter<$PrismaModel = never> = {
        equals?: string | StringFieldRefInput<$PrismaModel>
        in?: string[] | ListStringFieldRefInput<$PrismaModel>
        notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
        lt?: string | StringFieldRefInput<$PrismaModel>
        lte?: string | StringFieldRefInput<$PrismaModel>
        gt?: string | StringFieldRefInput<$PrismaModel>
        gte?: string | StringFieldRefInput<$PrismaModel>
        contains?: string | StringFieldRefInput<$PrismaModel>
        startsWith?: string | StringFieldRefInput<$PrismaModel>
        endsWith?: string | StringFieldRefInput<$PrismaModel>
        not?: NestedStringFilter<$PrismaModel> | string
    }

    export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
        equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
        notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
        lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
        not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
        _count?: NestedIntFilter<$PrismaModel>
        _avg?: NestedFloatFilter<$PrismaModel>
        _sum?: NestedBigIntFilter<$PrismaModel>
        _min?: NestedBigIntFilter<$PrismaModel>
        _max?: NestedBigIntFilter<$PrismaModel>
    }

    export type NestedIntFilter<$PrismaModel = never> = {
        equals?: number | IntFieldRefInput<$PrismaModel>
        in?: number[] | ListIntFieldRefInput<$PrismaModel>
        notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
        lt?: number | IntFieldRefInput<$PrismaModel>
        lte?: number | IntFieldRefInput<$PrismaModel>
        gt?: number | IntFieldRefInput<$PrismaModel>
        gte?: number | IntFieldRefInput<$PrismaModel>
        not?: NestedIntFilter<$PrismaModel> | number
    }

    export type NestedFloatFilter<$PrismaModel = never> = {
        equals?: number | FloatFieldRefInput<$PrismaModel>
        in?: number[] | ListFloatFieldRefInput<$PrismaModel>
        notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
        lt?: number | FloatFieldRefInput<$PrismaModel>
        lte?: number | FloatFieldRefInput<$PrismaModel>
        gt?: number | FloatFieldRefInput<$PrismaModel>
        gte?: number | FloatFieldRefInput<$PrismaModel>
        not?: NestedFloatFilter<$PrismaModel> | number
    }

    export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
        equals?: string | StringFieldRefInput<$PrismaModel>
        in?: string[] | ListStringFieldRefInput<$PrismaModel>
        notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
        lt?: string | StringFieldRefInput<$PrismaModel>
        lte?: string | StringFieldRefInput<$PrismaModel>
        gt?: string | StringFieldRefInput<$PrismaModel>
        gte?: string | StringFieldRefInput<$PrismaModel>
        contains?: string | StringFieldRefInput<$PrismaModel>
        startsWith?: string | StringFieldRefInput<$PrismaModel>
        endsWith?: string | StringFieldRefInput<$PrismaModel>
        not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
        _count?: NestedIntFilter<$PrismaModel>
        _min?: NestedStringFilter<$PrismaModel>
        _max?: NestedStringFilter<$PrismaModel>
    }

    export type NestedBoolFilter<$PrismaModel = never> = {
        equals?: boolean | BooleanFieldRefInput<$PrismaModel>
        not?: NestedBoolFilter<$PrismaModel> | boolean
    }

    export type NestedDateTimeFilter<$PrismaModel = never> = {
        equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
        notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
        lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        not?: NestedDateTimeFilter<$PrismaModel> | Date | string
    }

    export type NestedStringNullableFilter<$PrismaModel = never> = {
        equals?: string | StringFieldRefInput<$PrismaModel> | null
        in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
        notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
        lt?: string | StringFieldRefInput<$PrismaModel>
        lte?: string | StringFieldRefInput<$PrismaModel>
        gt?: string | StringFieldRefInput<$PrismaModel>
        gte?: string | StringFieldRefInput<$PrismaModel>
        contains?: string | StringFieldRefInput<$PrismaModel>
        startsWith?: string | StringFieldRefInput<$PrismaModel>
        endsWith?: string | StringFieldRefInput<$PrismaModel>
        not?: NestedStringNullableFilter<$PrismaModel> | string | null
    }

    export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
        equals?: number | IntFieldRefInput<$PrismaModel>
        in?: number[] | ListIntFieldRefInput<$PrismaModel>
        notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
        lt?: number | IntFieldRefInput<$PrismaModel>
        lte?: number | IntFieldRefInput<$PrismaModel>
        gt?: number | IntFieldRefInput<$PrismaModel>
        gte?: number | IntFieldRefInput<$PrismaModel>
        not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
        _count?: NestedIntFilter<$PrismaModel>
        _avg?: NestedFloatFilter<$PrismaModel>
        _sum?: NestedIntFilter<$PrismaModel>
        _min?: NestedIntFilter<$PrismaModel>
        _max?: NestedIntFilter<$PrismaModel>
    }

    export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
        equals?: boolean | BooleanFieldRefInput<$PrismaModel>
        not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
        _count?: NestedIntFilter<$PrismaModel>
        _min?: NestedBoolFilter<$PrismaModel>
        _max?: NestedBoolFilter<$PrismaModel>
    }

    export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
        equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
        notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
        lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
        not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
        _count?: NestedIntFilter<$PrismaModel>
        _min?: NestedDateTimeFilter<$PrismaModel>
        _max?: NestedDateTimeFilter<$PrismaModel>
    }

    export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> =
        {
            equals?: string | StringFieldRefInput<$PrismaModel> | null
            in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
            notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
            lt?: string | StringFieldRefInput<$PrismaModel>
            lte?: string | StringFieldRefInput<$PrismaModel>
            gt?: string | StringFieldRefInput<$PrismaModel>
            gte?: string | StringFieldRefInput<$PrismaModel>
            contains?: string | StringFieldRefInput<$PrismaModel>
            startsWith?: string | StringFieldRefInput<$PrismaModel>
            endsWith?: string | StringFieldRefInput<$PrismaModel>
            not?:
                | NestedStringNullableWithAggregatesFilter<$PrismaModel>
                | string
                | null
            _count?: NestedIntNullableFilter<$PrismaModel>
            _min?: NestedStringNullableFilter<$PrismaModel>
            _max?: NestedStringNullableFilter<$PrismaModel>
        }

    export type NestedIntNullableFilter<$PrismaModel = never> = {
        equals?: number | IntFieldRefInput<$PrismaModel> | null
        in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
        notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
        lt?: number | IntFieldRefInput<$PrismaModel>
        lte?: number | IntFieldRefInput<$PrismaModel>
        gt?: number | IntFieldRefInput<$PrismaModel>
        gte?: number | IntFieldRefInput<$PrismaModel>
        not?: NestedIntNullableFilter<$PrismaModel> | number | null
    }

    export type NestedFloatNullableFilter<$PrismaModel = never> = {
        equals?: number | FloatFieldRefInput<$PrismaModel> | null
        in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
        notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
        lt?: number | FloatFieldRefInput<$PrismaModel>
        lte?: number | FloatFieldRefInput<$PrismaModel>
        gt?: number | FloatFieldRefInput<$PrismaModel>
        gte?: number | FloatFieldRefInput<$PrismaModel>
        not?: NestedFloatNullableFilter<$PrismaModel> | number | null
    }

    export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
        equals?: number | FloatFieldRefInput<$PrismaModel>
        in?: number[] | ListFloatFieldRefInput<$PrismaModel>
        notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
        lt?: number | FloatFieldRefInput<$PrismaModel>
        lte?: number | FloatFieldRefInput<$PrismaModel>
        gt?: number | FloatFieldRefInput<$PrismaModel>
        gte?: number | FloatFieldRefInput<$PrismaModel>
        not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
        _count?: NestedIntFilter<$PrismaModel>
        _avg?: NestedFloatFilter<$PrismaModel>
        _sum?: NestedFloatFilter<$PrismaModel>
        _min?: NestedFloatFilter<$PrismaModel>
        _max?: NestedFloatFilter<$PrismaModel>
    }

    export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> =
        {
            equals?: number | FloatFieldRefInput<$PrismaModel> | null
            in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
            notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
            lt?: number | FloatFieldRefInput<$PrismaModel>
            lte?: number | FloatFieldRefInput<$PrismaModel>
            gt?: number | FloatFieldRefInput<$PrismaModel>
            gte?: number | FloatFieldRefInput<$PrismaModel>
            not?:
                | NestedFloatNullableWithAggregatesFilter<$PrismaModel>
                | number
                | null
            _count?: NestedIntNullableFilter<$PrismaModel>
            _avg?: NestedFloatNullableFilter<$PrismaModel>
            _sum?: NestedFloatNullableFilter<$PrismaModel>
            _min?: NestedFloatNullableFilter<$PrismaModel>
            _max?: NestedFloatNullableFilter<$PrismaModel>
        }

    export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
        equals?: number | IntFieldRefInput<$PrismaModel> | null
        in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
        notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
        lt?: number | IntFieldRefInput<$PrismaModel>
        lte?: number | IntFieldRefInput<$PrismaModel>
        gt?: number | IntFieldRefInput<$PrismaModel>
        gte?: number | IntFieldRefInput<$PrismaModel>
        not?:
            | NestedIntNullableWithAggregatesFilter<$PrismaModel>
            | number
            | null
        _count?: NestedIntNullableFilter<$PrismaModel>
        _avg?: NestedFloatNullableFilter<$PrismaModel>
        _sum?: NestedIntNullableFilter<$PrismaModel>
        _min?: NestedIntNullableFilter<$PrismaModel>
        _max?: NestedIntNullableFilter<$PrismaModel>
    }

    /**
     * Aliases for legacy arg types
     */
    /**
     * @deprecated Use GA_ANKETA_ADDRDefaultArgs instead
     */
    export type GA_ANKETA_ADDRArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_ANKETA_ADDRDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GA_ANKETA_BASEDefaultArgs instead
     */
    export type GA_ANKETA_BASEArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_ANKETA_BASEDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GA_ANKETA_BILETSDefaultArgs instead
     */
    export type GA_ANKETA_BILETSArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_ANKETA_BILETSDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GA_ANKETA_BRAND_IMGDefaultArgs instead
     */
    export type GA_ANKETA_BRAND_IMGArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_ANKETA_BRAND_IMGDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GA_ANKETA_DIRDefaultArgs instead
     */
    export type GA_ANKETA_DIRArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_ANKETA_DIRDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GA_ANKETA_DOGOVORDefaultArgs instead
     */
    export type GA_ANKETA_DOGOVORArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_ANKETA_DOGOVORDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GA_ANKETA_OBOROTDefaultArgs instead
     */
    export type GA_ANKETA_OBOROTArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_ANKETA_OBOROTDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GA_ANKETA_OBOROT_BRANDSDefaultArgs instead
     */
    export type GA_ANKETA_OBOROT_BRANDSArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_ANKETA_OBOROT_BRANDSDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GA_ANKETA_OBOROT_BRANDS2DefaultArgs instead
     */
    export type GA_ANKETA_OBOROT_BRANDS2Args<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_ANKETA_OBOROT_BRANDS2DefaultArgs<ExtArgs>
    /**
     * @deprecated Use GA_ANKETA_OBOROT_COUNTSDefaultArgs instead
     */
    export type GA_ANKETA_OBOROT_COUNTSArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_ANKETA_OBOROT_COUNTSDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GA_ANKETA_SCORESDefaultArgs instead
     */
    export type GA_ANKETA_SCORESArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_ANKETA_SCORESDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GA_ANKETA_SCORES_HISTORYDefaultArgs instead
     */
    export type GA_ANKETA_SCORES_HISTORYArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_ANKETA_SCORES_HISTORYDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GA_ANKETA_SOREVNOVANIEDefaultArgs instead
     */
    export type GA_ANKETA_SOREVNOVANIEArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_ANKETA_SOREVNOVANIEDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GA_SUP_50012_SELLOUTDefaultArgs instead
     */
    export type GA_SUP_50012_SELLOUTArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_SUP_50012_SELLOUTDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GA_SUP_50013_SELLOUTDefaultArgs instead
     */
    export type GA_SUP_50013_SELLOUTArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_SUP_50013_SELLOUTDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GA_SUP_50014_SELLOUTDefaultArgs instead
     */
    export type GA_SUP_50014_SELLOUTArgs<
        ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs,
    > = GA_SUP_50014_SELLOUTDefaultArgs<ExtArgs>

    /**
     * Batch Payload for updateMany & deleteMany & createMany
     */

    export type BatchPayload = {
        count: number
    }

    /**
     * DMMF
     */
    export const dmmf: runtime.BaseDMMF
}
